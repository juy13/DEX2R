PROC MOVE[NUMERIC ARROW]
BLOCK
	LOGIC FL2
	FL2 = TRUE
	{FL2 *. ARROW ? 1}
		BLOCK
			FL2 = FALSE
			MOVERIGHT[1]
		UNBLOCK
	{FL2 *. ARROW ? 2}
		BLOCK
			FL2 = FALSE
			MOVELEFT[1]
		UNBLOCK
	{FL2 *. ARROW ? 3}
		BLOCK
			FL2 = FALSE
			MOVEDOWN[1]
		UNBLOCK
	{FL2 *. ARROW ? 4}
		BLOCK
			FL2 = FALSE
			MOVEUP[1]
		UNBLOCK
UNBLOCK


BLOCK
	ESCAPE[]
UNBLOCK


PROC ESCAPE[]
BLOCK
	NUMERIC RES
	NUMERIC ARROW
	ARROW = 1
	LOGIC FLAG
	FLAG = TRUE
	LOGIC FOREVER
	FOREVER = TRUE
	LOGIC FL2
	NUMERIC ARB
	{FOREVER ? TRUE}
	BLOCK
		RES = UNDEF
		PING[ARROW, RES]
		{RES ! 0}
			BLOCK
				RES = UNDEF
				MOVE[ARROW]
				PING[ARROW, RES]
			UNBLOCK
		TURN[ARROW, 1]
		MOVE[ARROW]
		RES = FALSE
		PING[ARROW, RES]
		FL2 = TRUE
		{FL2 .* RES ? UNDEF}
			BLOCK
				RES = UNDEF
				PING[ARROW, RES]
				FL2 = TRUE
				{FL2 *. RES > 0}
					BLOCK
						FL2 = FALSE
					UNBLOCK
				{FL2 ! FALSE}
					BLOCK
						ARB = ARROW
						TURN[ARB, 3]
						MOVE[ARB]
						TURN[ARROW, 2]
						MOVE[ARROW]
						RES = UNDEF
						PING[ARROW, RES]
						FL2 = TRUE
						{FL2 *. RES > 0}
							BLOCK
								FL2 = FALSE
							UNBLOCK
						{FL2 ! FALSE}
						BLOCK
							ARB = ARROW
							TURN[ARB, 3]
							FL2 = FALSE
							MOVE[ARB]
							TURN[ARROW, 2]
						UNBLOCK
						FL2 = FALSE
					UNBLOCK
				FL2 = FALSE
			UNBLOCK
		{FL2 *. RES > 0}
			BLOCK
				LOGIC FL3
				FL3 = TRUE
				{FL3 *. ARROW ? 1}
					BLOCK
						FL3 = FALSE
						MOVERIGHT[RES]
					UNBLOCK
				{FL3 *. ARROW ? 2}
					BLOCK
						FL3 = FALSE
						MOVELEFT[RES]
					UNBLOCK
				{FL3 *. ARROW ? 3}
					BLOCK
						FL3 = FALSE
						MOVEDOWN[RES]
					UNBLOCK
				{FL3 *. ARROW ? 4}
					BLOCK
						FL3 = FALSE
						MOVEUP[RES]
					UNBLOCK
				STRING VS
				VISION[VS]
				VOICE[VS]
				FL2 = FALSE
				FOREVER = FALSE
			UNBLOCK
	UNBLOCK
UNBLOCK


PROC PING[NUMERIC ARROW, NUMERIC RES &]
BLOCK
	LOGIC FL2
	FL2 = TRUE
	{FL2 *. ARROW ? 1}
		BLOCK
			FL2 = FALSE
			PINGRIGHT[RES]
		UNBLOCK
	{FL2 *. ARROW ? 2}
		BLOCK
			FL2 = FALSE
			PINGLEFT[RES]
		UNBLOCK
	{FL2 *. ARROW ? 3}
		BLOCK
			FL2 = FALSE
			PINGDOWN[RES]
		UNBLOCK
	{FL2 *. ARROW ? 4}
		BLOCK
			FL2 = FALSE
			PINGUP[RES]
		UNBLOCK
UNBLOCK


PROC TURN[NUMERIC ARROW &, NUMERIC DIST]
BLOCK
	LOGIC FL
	FL = TRUE
	{FL *. DIST ? 1}
	BLOCK
		FL = FALSE
		LOGIC FL2
		FL2 = TRUE
		{FL2 *. ARROW ? 1}
		BLOCK
			FL2 = FALSE
			ARROW = 3
		UNBLOCK
		{FL2 *. ARROW ? 3}
		BLOCK
			FL2 = FALSE
			ARROW = 2
		UNBLOCK
		{FL2 *. ARROW ? 2}
		BLOCK
			FL2 = FALSE
			ARROW = 4
		UNBLOCK
		{FL2 *. ARROW ? 4}
		BLOCK
			FL2 = FALSE
			ARROW = 1
		UNBLOCK
	UNBLOCK
	{FL *. DIST ? 2}
	BLOCK
		FL = FALSE
		LOGIC FL2
		FL2 = TRUE
		{FL2 *. ARROW ? 1}
		BLOCK
			FL2 = FALSE
			ARROW = 4
		UNBLOCK
		{FL2 *. ARROW ? 3}
		BLOCK
			FL2 = FALSE
			ARROW = 1
		UNBLOCK
		{FL2 *. ARROW ? 2}
		BLOCK
			FL2 = FALSE
			ARROW = 3
		UNBLOCK
		{FL2 *. ARROW ? 4}
		BLOCK
			FL2 = FALSE
			ARROW = 2
		UNBLOCK
	UNBLOCK
	{FL *. DIST ? 3}
	BLOCK
		FL = FALSE
		LOGIC FL2
		FL2 = TRUE
		{FL2 *. ARROW ? 1}
		BLOCK
			FL2 = FALSE
			ARROW = 2
		UNBLOCK
		{FL2 *. ARROW ? 3}
		BLOCK
			FL2 = FALSE
			ARROW = 4
		UNBLOCK
		{FL2 *. ARROW ? 2}
		BLOCK
			FL2 = FALSE
			ARROW = 1
		UNBLOCK
		{FL2 *. ARROW ? 4}
		BLOCK
			FL2 = FALSE
			ARROW = 3
		UNBLOCK
	UNBLOCK
UNBLOCK