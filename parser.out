Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUOTE

Grammar

Rule 0     S' -> program
Rule 1     program -> program statement
Rule 2     program -> statement
Rule 3     statement -> records
Rule 4     statement -> sentgroup
Rule 5     statement -> func
Rule 6     program -> error
Rule 7     func -> def ids LBRACKET list RBRACKET sentgroup
Rule 8     func -> def error LBRACKET list RBRACKET sentgroup
Rule 9     func -> def ids LBRACKET error RBRACKET sentgroup
Rule 10    func -> def ids LBRACKET error RBRACKET error
Rule 11    func -> def error
Rule 12    ids -> ID
Rule 13    list -> type ids AND COMMA list
Rule 14    list -> ID ids AND COMMA list
Rule 15    list -> type ids COMMA list
Rule 16    list -> ID ids COMMA list
Rule 17    list -> type ids AND
Rule 18    list -> type ids
Rule 19    list -> ID ids
Rule 20    list -> <empty>
Rule 21    type -> bool
Rule 22    type -> int
Rule 23    type -> string
Rule 24    type -> struct
Rule 25    sentgroup -> start sentencess end
Rule 26    define -> int ids
Rule 27    define -> bool ids
Rule 28    define -> string ids
Rule 29    define -> ID ids
Rule 30    define -> int ids LBRACKET NUMBER RBRACKET
Rule 31    define -> boolean ids LBRACKET NUMBER RBRACKET
Rule 32    define -> string ids LBRACKET NUMBER RBRACKET
Rule 33    sentencess -> sentencess sentence
Rule 34    sentencess -> sentence
Rule 35    sentence -> cfunc
Rule 36    sentence -> expression
Rule 37    sentence -> logic
Rule 38    sentence -> define
Rule 39    sentence -> assignment
Rule 40    sentence -> move
Rule 41    sentence -> ping
Rule 42    sentence -> sensor
Rule 43    sentence -> error
Rule 44    records -> record records
Rule 45    records -> record
Rule 46    record -> struct ID info deflst
Rule 47    record -> struct ID info deflst convert to deflst
Rule 48    record -> struct ID info deflst convert from deflst
Rule 49    record -> struct ID info deflst convert to deflst convert from deflst
Rule 50    deflst -> type ids deflst
Rule 51    deflst -> type ids
Rule 52    logic -> LBRACE lexp RBRACE sentgroup
Rule 53    lexp -> expression lt expression
Rule 54    lexp -> expression gt expression
Rule 55    lexp -> expression deg expression
Rule 56    lexp -> expression ex expression
Rule 57    lt -> LTR
Rule 58    lt -> LTL
Rule 59    lt -> LT
Rule 60    gt -> GTR
Rule 61    gt -> GTL
Rule 62    gt -> GT
Rule 63    deg -> DEQR
Rule 64    deg -> DEQL
Rule 65    deg -> DEQ
Rule 66    ex -> EXR
Rule 67    ex -> EXL
Rule 68    ex -> EX
Rule 69    expression -> expression plus expression
Rule 70    expression -> expression minus expression
Rule 71    expression -> expression times expression
Rule 72    expression -> expression divide expression
Rule 73    expression -> expression power expression
Rule 74    expression -> <empty>
Rule 75    plus -> PLR
Rule 76    plus -> PLL
Rule 77    plus -> PLUS
Rule 78    minus -> MNR
Rule 79    minus -> MNL
Rule 80    minus -> MINUS
Rule 81    times -> TMR
Rule 82    times -> TML
Rule 83    times -> TIMES
Rule 84    divide -> DVR
Rule 85    divide -> DVL
Rule 86    divide -> DIVIDE
Rule 87    power -> PWR
Rule 88    power -> PWL
Rule 89    power -> POWER
Rule 90    str -> STR
Rule 91    expression -> str
Rule 92    expression -> num
Rule 93    num -> NUMBER
Rule 94    expression -> ids
Rule 95    expression -> boolean
Rule 96    expression -> MINUS expression
Rule 97    cfunc -> ids LBRACKET exprgroup RBRACKET
Rule 98    cfunc -> ids LBRACKET ids RBRACKET
Rule 99    cfunc -> ids LBRACKET RBRACKET
Rule 100   exprgroup -> expression COMMA exprgroup
Rule 101   exprgroup -> expression
Rule 102   assignment -> ids EQ var
Rule 103   assignment -> ids EQ expression
Rule 104   assignment -> ids EQ str
Rule 105   assignment -> ids EQ ID LBRACKET ids RBRACKET
Rule 106   assignment -> ids LBRACKET expression RBRACKET EQ expression
Rule 107   assignment -> ids LBRACKET ids RBRACKET EQ expression
Rule 108   move -> up LBRACKET steps RBRACKET
Rule 109   move -> down LBRACKET steps RBRACKET
Rule 110   move -> left LBRACKET steps RBRACKET
Rule 111   move -> right LBRACKET steps RBRACKET
Rule 112   steps -> expression
Rule 113   steps -> ids
Rule 114   ping -> knockup LBRACKET steps RBRACKET
Rule 115   ping -> knockdown LBRACKET steps RBRACKET
Rule 116   ping -> knockright LBRACKET steps RBRACKET
Rule 117   ping -> knockleft LBRACKET steps RBRACKET
Rule 118   boolean -> false
Rule 119   boolean -> true
Rule 120   boolean -> var
Rule 121   sensor -> vision LBRACKET ids RBRACKET
Rule 122   sensor -> input LBRACKET ids RBRACKET

Terminals, with rules where they appear

AND                  : 13 14 17
COMMA                : 13 14 15 16 100
DEQ                  : 65
DEQL                 : 64
DEQR                 : 63
DIVIDE               : 86
DVL                  : 85
DVR                  : 84
EQ                   : 102 103 104 105 106 107
EX                   : 68
EXL                  : 67
EXR                  : 66
GT                   : 62
GTL                  : 61
GTR                  : 60
ID                   : 12 14 16 19 29 46 47 48 49 105
LBRACE               : 52
LBRACKET             : 7 8 9 10 30 31 32 97 98 99 105 106 107 108 109 110 111 114 115 116 117 121 122
LT                   : 59
LTL                  : 58
LTR                  : 57
MINUS                : 80 96
MNL                  : 79
MNR                  : 78
NUMBER               : 30 31 32 93
PLL                  : 76
PLR                  : 75
PLUS                 : 77
POWER                : 89
PWL                  : 88
PWR                  : 87
QUOTE                : 
RBRACE               : 52
RBRACKET             : 7 8 9 10 30 31 32 97 98 99 105 106 107 108 109 110 111 114 115 116 117 121 122
STR                  : 90
TIMES                : 83
TML                  : 82
TMR                  : 81
bool                 : 21 27
convert              : 47 48 49 49
def                  : 7 8 9 10 11
down                 : 109
end                  : 25
error                : 6 8 9 10 10 11 43
false                : 118
from                 : 48 49
info                 : 46 47 48 49
input                : 122
int                  : 22 26 30
knockdown            : 115
knockleft            : 117
knockright           : 116
knockup              : 114
left                 : 110
right                : 111
start                : 25
string               : 23 28 32
struct               : 24 46 47 48 49
to                   : 47 49
true                 : 119
up                   : 108
var                  : 102 120
vision               : 121

Nonterminals, with rules where they appear

assignment           : 39
boolean              : 31 95
cfunc                : 35
define               : 38
deflst               : 46 47 47 48 48 49 49 49 50
deg                  : 55
divide               : 72
ex                   : 56
expression           : 36 53 53 54 54 55 55 56 56 69 69 70 70 71 71 72 72 73 73 96 100 101 103 106 106 107 112
exprgroup            : 97 100
func                 : 5
gt                   : 54
ids                  : 7 9 10 13 14 15 16 17 18 19 26 27 28 29 30 31 32 50 51 94 97 98 98 99 102 103 104 105 105 106 107 107 113 121 122
lexp                 : 52
list                 : 7 8 13 14 15 16
logic                : 37
lt                   : 53
minus                : 70
move                 : 40
num                  : 92
ping                 : 41
plus                 : 69
power                : 73
program              : 1 0
record               : 44 45
records              : 3 44
sensor               : 42
sentence             : 33 34
sentencess           : 25 33
sentgroup            : 4 7 8 9 52
statement            : 1 2
steps                : 108 109 110 111 114 115 116 117
str                  : 91 104
times                : 71
type                 : 13 15 17 18 50 51

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program statement
    (2) program -> . statement
    (6) program -> . error
    (3) statement -> . records
    (4) statement -> . sentgroup
    (5) statement -> . func
    (44) records -> . record records
    (45) records -> . record
    (25) sentgroup -> . start sentencess end
    (7) func -> . def ids LBRACKET list RBRACKET sentgroup
    (8) func -> . def error LBRACKET list RBRACKET sentgroup
    (9) func -> . def ids LBRACKET error RBRACKET sentgroup
    (10) func -> . def ids LBRACKET error RBRACKET error
    (11) func -> . def error
    (46) record -> . struct ID info deflst
    (47) record -> . struct ID info deflst convert to deflst
    (48) record -> . struct ID info deflst convert from deflst
    (49) record -> . struct ID info deflst convert to deflst convert from deflst

    error           shift and go to state 3
    start           shift and go to state 8
    def             shift and go to state 9
    struct          shift and go to state 10

    program                        shift and go to state 1
    statement                      shift and go to state 2
    records                        shift and go to state 4
    sentgroup                      shift and go to state 5
    func                           shift and go to state 6
    record                         shift and go to state 7

state 1

    (0) S' -> program .
    (1) program -> program . statement
    (3) statement -> . records
    (4) statement -> . sentgroup
    (5) statement -> . func
    (44) records -> . record records
    (45) records -> . record
    (25) sentgroup -> . start sentencess end
    (7) func -> . def ids LBRACKET list RBRACKET sentgroup
    (8) func -> . def error LBRACKET list RBRACKET sentgroup
    (9) func -> . def ids LBRACKET error RBRACKET sentgroup
    (10) func -> . def ids LBRACKET error RBRACKET error
    (11) func -> . def error
    (46) record -> . struct ID info deflst
    (47) record -> . struct ID info deflst convert to deflst
    (48) record -> . struct ID info deflst convert from deflst
    (49) record -> . struct ID info deflst convert to deflst convert from deflst

    start           shift and go to state 8
    def             shift and go to state 9
    struct          shift and go to state 10

    statement                      shift and go to state 11
    records                        shift and go to state 4
    sentgroup                      shift and go to state 5
    func                           shift and go to state 6
    record                         shift and go to state 7

state 2

    (2) program -> statement .

    start           reduce using rule 2 (program -> statement .)
    def             reduce using rule 2 (program -> statement .)
    struct          reduce using rule 2 (program -> statement .)
    $end            reduce using rule 2 (program -> statement .)


state 3

    (6) program -> error .

    start           reduce using rule 6 (program -> error .)
    def             reduce using rule 6 (program -> error .)
    struct          reduce using rule 6 (program -> error .)
    $end            reduce using rule 6 (program -> error .)


state 4

    (3) statement -> records .

    start           reduce using rule 3 (statement -> records .)
    def             reduce using rule 3 (statement -> records .)
    struct          reduce using rule 3 (statement -> records .)
    $end            reduce using rule 3 (statement -> records .)


state 5

    (4) statement -> sentgroup .

    start           reduce using rule 4 (statement -> sentgroup .)
    def             reduce using rule 4 (statement -> sentgroup .)
    struct          reduce using rule 4 (statement -> sentgroup .)
    $end            reduce using rule 4 (statement -> sentgroup .)


state 6

    (5) statement -> func .

    start           reduce using rule 5 (statement -> func .)
    def             reduce using rule 5 (statement -> func .)
    struct          reduce using rule 5 (statement -> func .)
    $end            reduce using rule 5 (statement -> func .)


state 7

    (44) records -> record . records
    (45) records -> record .
    (44) records -> . record records
    (45) records -> . record
    (46) record -> . struct ID info deflst
    (47) record -> . struct ID info deflst convert to deflst
    (48) record -> . struct ID info deflst convert from deflst
    (49) record -> . struct ID info deflst convert to deflst convert from deflst

  ! shift/reduce conflict for struct resolved as shift
    start           reduce using rule 45 (records -> record .)
    def             reduce using rule 45 (records -> record .)
    $end            reduce using rule 45 (records -> record .)
    struct          shift and go to state 10

  ! struct          [ reduce using rule 45 (records -> record .) ]

    record                         shift and go to state 7
    records                        shift and go to state 12

state 8

    (25) sentgroup -> start . sentencess end
    (33) sentencess -> . sentencess sentence
    (34) sentencess -> . sentence
    (35) sentence -> . cfunc
    (36) sentence -> . expression
    (37) sentence -> . logic
    (38) sentence -> . define
    (39) sentence -> . assignment
    (40) sentence -> . move
    (41) sentence -> . ping
    (42) sentence -> . sensor
    (43) sentence -> . error
    (97) cfunc -> . ids LBRACKET exprgroup RBRACKET
    (98) cfunc -> . ids LBRACKET ids RBRACKET
    (99) cfunc -> . ids LBRACKET RBRACKET
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (52) logic -> . LBRACE lexp RBRACE sentgroup
    (26) define -> . int ids
    (27) define -> . bool ids
    (28) define -> . string ids
    (29) define -> . ID ids
    (30) define -> . int ids LBRACKET NUMBER RBRACKET
    (31) define -> . boolean ids LBRACKET NUMBER RBRACKET
    (32) define -> . string ids LBRACKET NUMBER RBRACKET
    (102) assignment -> . ids EQ var
    (103) assignment -> . ids EQ expression
    (104) assignment -> . ids EQ str
    (105) assignment -> . ids EQ ID LBRACKET ids RBRACKET
    (106) assignment -> . ids LBRACKET expression RBRACKET EQ expression
    (107) assignment -> . ids LBRACKET ids RBRACKET EQ expression
    (108) move -> . up LBRACKET steps RBRACKET
    (109) move -> . down LBRACKET steps RBRACKET
    (110) move -> . left LBRACKET steps RBRACKET
    (111) move -> . right LBRACKET steps RBRACKET
    (114) ping -> . knockup LBRACKET steps RBRACKET
    (115) ping -> . knockdown LBRACKET steps RBRACKET
    (116) ping -> . knockright LBRACKET steps RBRACKET
    (117) ping -> . knockleft LBRACKET steps RBRACKET
    (121) sensor -> . vision LBRACKET ids RBRACKET
    (122) sensor -> . input LBRACKET ids RBRACKET
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for int resolved as shift
  ! shift/reduce conflict for bool resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for up resolved as shift
  ! shift/reduce conflict for down resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for knockup resolved as shift
  ! shift/reduce conflict for knockdown resolved as shift
  ! shift/reduce conflict for knockright resolved as shift
  ! shift/reduce conflict for knockleft resolved as shift
  ! shift/reduce conflict for vision resolved as shift
  ! shift/reduce conflict for input resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    error           shift and go to state 23
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    LBRACE          shift and go to state 29
    int             shift and go to state 30
    bool            shift and go to state 31
    string          shift and go to state 32
    ID              shift and go to state 33
    up              shift and go to state 36
    down            shift and go to state 37
    left            shift and go to state 38
    right           shift and go to state 39
    knockup         shift and go to state 40
    knockdown       shift and go to state 41
    knockright      shift and go to state 42
    knockleft       shift and go to state 43
    vision          shift and go to state 44
    input           shift and go to state 45
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! error           [ reduce using rule 74 (expression -> .) ]
  ! LBRACE          [ reduce using rule 74 (expression -> .) ]
  ! int             [ reduce using rule 74 (expression -> .) ]
  ! bool            [ reduce using rule 74 (expression -> .) ]
  ! string          [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! up              [ reduce using rule 74 (expression -> .) ]
  ! down            [ reduce using rule 74 (expression -> .) ]
  ! left            [ reduce using rule 74 (expression -> .) ]
  ! right           [ reduce using rule 74 (expression -> .) ]
  ! knockup         [ reduce using rule 74 (expression -> .) ]
  ! knockdown       [ reduce using rule 74 (expression -> .) ]
  ! knockright      [ reduce using rule 74 (expression -> .) ]
  ! knockleft       [ reduce using rule 74 (expression -> .) ]
  ! vision          [ reduce using rule 74 (expression -> .) ]
  ! input           [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    sentencess                     shift and go to state 13
    sentence                       shift and go to state 14
    cfunc                          shift and go to state 15
    expression                     shift and go to state 16
    logic                          shift and go to state 17
    define                         shift and go to state 18
    assignment                     shift and go to state 19
    move                           shift and go to state 20
    ping                           shift and go to state 21
    sensor                         shift and go to state 22
    ids                            shift and go to state 24
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 27

state 9

    (7) func -> def . ids LBRACKET list RBRACKET sentgroup
    (8) func -> def . error LBRACKET list RBRACKET sentgroup
    (9) func -> def . ids LBRACKET error RBRACKET sentgroup
    (10) func -> def . ids LBRACKET error RBRACKET error
    (11) func -> def . error
    (12) ids -> . ID

    error           shift and go to state 50
    ID              shift and go to state 51

    ids                            shift and go to state 49

state 10

    (46) record -> struct . ID info deflst
    (47) record -> struct . ID info deflst convert to deflst
    (48) record -> struct . ID info deflst convert from deflst
    (49) record -> struct . ID info deflst convert to deflst convert from deflst

    ID              shift and go to state 52


state 11

    (1) program -> program statement .

    start           reduce using rule 1 (program -> program statement .)
    def             reduce using rule 1 (program -> program statement .)
    struct          reduce using rule 1 (program -> program statement .)
    $end            reduce using rule 1 (program -> program statement .)


state 12

    (44) records -> record records .

    start           reduce using rule 44 (records -> record records .)
    def             reduce using rule 44 (records -> record records .)
    struct          reduce using rule 44 (records -> record records .)
    $end            reduce using rule 44 (records -> record records .)


state 13

    (25) sentgroup -> start sentencess . end
    (33) sentencess -> sentencess . sentence
    (35) sentence -> . cfunc
    (36) sentence -> . expression
    (37) sentence -> . logic
    (38) sentence -> . define
    (39) sentence -> . assignment
    (40) sentence -> . move
    (41) sentence -> . ping
    (42) sentence -> . sensor
    (43) sentence -> . error
    (97) cfunc -> . ids LBRACKET exprgroup RBRACKET
    (98) cfunc -> . ids LBRACKET ids RBRACKET
    (99) cfunc -> . ids LBRACKET RBRACKET
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (52) logic -> . LBRACE lexp RBRACE sentgroup
    (26) define -> . int ids
    (27) define -> . bool ids
    (28) define -> . string ids
    (29) define -> . ID ids
    (30) define -> . int ids LBRACKET NUMBER RBRACKET
    (31) define -> . boolean ids LBRACKET NUMBER RBRACKET
    (32) define -> . string ids LBRACKET NUMBER RBRACKET
    (102) assignment -> . ids EQ var
    (103) assignment -> . ids EQ expression
    (104) assignment -> . ids EQ str
    (105) assignment -> . ids EQ ID LBRACKET ids RBRACKET
    (106) assignment -> . ids LBRACKET expression RBRACKET EQ expression
    (107) assignment -> . ids LBRACKET ids RBRACKET EQ expression
    (108) move -> . up LBRACKET steps RBRACKET
    (109) move -> . down LBRACKET steps RBRACKET
    (110) move -> . left LBRACKET steps RBRACKET
    (111) move -> . right LBRACKET steps RBRACKET
    (114) ping -> . knockup LBRACKET steps RBRACKET
    (115) ping -> . knockdown LBRACKET steps RBRACKET
    (116) ping -> . knockright LBRACKET steps RBRACKET
    (117) ping -> . knockleft LBRACKET steps RBRACKET
    (121) sensor -> . vision LBRACKET ids RBRACKET
    (122) sensor -> . input LBRACKET ids RBRACKET
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for end resolved as shift
  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for LBRACE resolved as shift
  ! shift/reduce conflict for int resolved as shift
  ! shift/reduce conflict for bool resolved as shift
  ! shift/reduce conflict for string resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for up resolved as shift
  ! shift/reduce conflict for down resolved as shift
  ! shift/reduce conflict for left resolved as shift
  ! shift/reduce conflict for right resolved as shift
  ! shift/reduce conflict for knockup resolved as shift
  ! shift/reduce conflict for knockdown resolved as shift
  ! shift/reduce conflict for knockright resolved as shift
  ! shift/reduce conflict for knockleft resolved as shift
  ! shift/reduce conflict for vision resolved as shift
  ! shift/reduce conflict for input resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    end             shift and go to state 53
    error           shift and go to state 23
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    LBRACE          shift and go to state 29
    int             shift and go to state 30
    bool            shift and go to state 31
    string          shift and go to state 32
    ID              shift and go to state 33
    up              shift and go to state 36
    down            shift and go to state 37
    left            shift and go to state 38
    right           shift and go to state 39
    knockup         shift and go to state 40
    knockdown       shift and go to state 41
    knockright      shift and go to state 42
    knockleft       shift and go to state 43
    vision          shift and go to state 44
    input           shift and go to state 45
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! end             [ reduce using rule 74 (expression -> .) ]
  ! error           [ reduce using rule 74 (expression -> .) ]
  ! LBRACE          [ reduce using rule 74 (expression -> .) ]
  ! int             [ reduce using rule 74 (expression -> .) ]
  ! bool            [ reduce using rule 74 (expression -> .) ]
  ! string          [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! up              [ reduce using rule 74 (expression -> .) ]
  ! down            [ reduce using rule 74 (expression -> .) ]
  ! left            [ reduce using rule 74 (expression -> .) ]
  ! right           [ reduce using rule 74 (expression -> .) ]
  ! knockup         [ reduce using rule 74 (expression -> .) ]
  ! knockdown       [ reduce using rule 74 (expression -> .) ]
  ! knockright      [ reduce using rule 74 (expression -> .) ]
  ! knockleft       [ reduce using rule 74 (expression -> .) ]
  ! vision          [ reduce using rule 74 (expression -> .) ]
  ! input           [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    sentence                       shift and go to state 54
    cfunc                          shift and go to state 15
    expression                     shift and go to state 16
    logic                          shift and go to state 17
    define                         shift and go to state 18
    assignment                     shift and go to state 19
    move                           shift and go to state 20
    ping                           shift and go to state 21
    sensor                         shift and go to state 22
    ids                            shift and go to state 24
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 27

state 14

    (34) sentencess -> sentence .

    end             reduce using rule 34 (sentencess -> sentence .)
    error           reduce using rule 34 (sentencess -> sentence .)
    MINUS           reduce using rule 34 (sentencess -> sentence .)
    LBRACE          reduce using rule 34 (sentencess -> sentence .)
    int             reduce using rule 34 (sentencess -> sentence .)
    bool            reduce using rule 34 (sentencess -> sentence .)
    string          reduce using rule 34 (sentencess -> sentence .)
    ID              reduce using rule 34 (sentencess -> sentence .)
    up              reduce using rule 34 (sentencess -> sentence .)
    down            reduce using rule 34 (sentencess -> sentence .)
    left            reduce using rule 34 (sentencess -> sentence .)
    right           reduce using rule 34 (sentencess -> sentence .)
    knockup         reduce using rule 34 (sentencess -> sentence .)
    knockdown       reduce using rule 34 (sentencess -> sentence .)
    knockright      reduce using rule 34 (sentencess -> sentence .)
    knockleft       reduce using rule 34 (sentencess -> sentence .)
    vision          reduce using rule 34 (sentencess -> sentence .)
    input           reduce using rule 34 (sentencess -> sentence .)
    STR             reduce using rule 34 (sentencess -> sentence .)
    NUMBER          reduce using rule 34 (sentencess -> sentence .)
    false           reduce using rule 34 (sentencess -> sentence .)
    true            reduce using rule 34 (sentencess -> sentence .)
    var             reduce using rule 34 (sentencess -> sentence .)
    PLR             reduce using rule 34 (sentencess -> sentence .)
    PLL             reduce using rule 34 (sentencess -> sentence .)
    PLUS            reduce using rule 34 (sentencess -> sentence .)
    MNR             reduce using rule 34 (sentencess -> sentence .)
    MNL             reduce using rule 34 (sentencess -> sentence .)
    TMR             reduce using rule 34 (sentencess -> sentence .)
    TML             reduce using rule 34 (sentencess -> sentence .)
    TIMES           reduce using rule 34 (sentencess -> sentence .)
    DVR             reduce using rule 34 (sentencess -> sentence .)
    DVL             reduce using rule 34 (sentencess -> sentence .)
    DIVIDE          reduce using rule 34 (sentencess -> sentence .)
    PWR             reduce using rule 34 (sentencess -> sentence .)
    PWL             reduce using rule 34 (sentencess -> sentence .)
    POWER           reduce using rule 34 (sentencess -> sentence .)


state 15

    (35) sentence -> cfunc .

    end             reduce using rule 35 (sentence -> cfunc .)
    error           reduce using rule 35 (sentence -> cfunc .)
    MINUS           reduce using rule 35 (sentence -> cfunc .)
    LBRACE          reduce using rule 35 (sentence -> cfunc .)
    int             reduce using rule 35 (sentence -> cfunc .)
    bool            reduce using rule 35 (sentence -> cfunc .)
    string          reduce using rule 35 (sentence -> cfunc .)
    ID              reduce using rule 35 (sentence -> cfunc .)
    up              reduce using rule 35 (sentence -> cfunc .)
    down            reduce using rule 35 (sentence -> cfunc .)
    left            reduce using rule 35 (sentence -> cfunc .)
    right           reduce using rule 35 (sentence -> cfunc .)
    knockup         reduce using rule 35 (sentence -> cfunc .)
    knockdown       reduce using rule 35 (sentence -> cfunc .)
    knockright      reduce using rule 35 (sentence -> cfunc .)
    knockleft       reduce using rule 35 (sentence -> cfunc .)
    vision          reduce using rule 35 (sentence -> cfunc .)
    input           reduce using rule 35 (sentence -> cfunc .)
    STR             reduce using rule 35 (sentence -> cfunc .)
    NUMBER          reduce using rule 35 (sentence -> cfunc .)
    false           reduce using rule 35 (sentence -> cfunc .)
    true            reduce using rule 35 (sentence -> cfunc .)
    var             reduce using rule 35 (sentence -> cfunc .)
    PLR             reduce using rule 35 (sentence -> cfunc .)
    PLL             reduce using rule 35 (sentence -> cfunc .)
    PLUS            reduce using rule 35 (sentence -> cfunc .)
    MNR             reduce using rule 35 (sentence -> cfunc .)
    MNL             reduce using rule 35 (sentence -> cfunc .)
    TMR             reduce using rule 35 (sentence -> cfunc .)
    TML             reduce using rule 35 (sentence -> cfunc .)
    TIMES           reduce using rule 35 (sentence -> cfunc .)
    DVR             reduce using rule 35 (sentence -> cfunc .)
    DVL             reduce using rule 35 (sentence -> cfunc .)
    DIVIDE          reduce using rule 35 (sentence -> cfunc .)
    PWR             reduce using rule 35 (sentence -> cfunc .)
    PWL             reduce using rule 35 (sentence -> cfunc .)
    POWER           reduce using rule 35 (sentence -> cfunc .)


state 16

    (36) sentence -> expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 36 (sentence -> expression .)
    error           reduce using rule 36 (sentence -> expression .)
    LBRACE          reduce using rule 36 (sentence -> expression .)
    int             reduce using rule 36 (sentence -> expression .)
    bool            reduce using rule 36 (sentence -> expression .)
    string          reduce using rule 36 (sentence -> expression .)
    ID              reduce using rule 36 (sentence -> expression .)
    up              reduce using rule 36 (sentence -> expression .)
    down            reduce using rule 36 (sentence -> expression .)
    left            reduce using rule 36 (sentence -> expression .)
    right           reduce using rule 36 (sentence -> expression .)
    knockup         reduce using rule 36 (sentence -> expression .)
    knockdown       reduce using rule 36 (sentence -> expression .)
    knockright      reduce using rule 36 (sentence -> expression .)
    knockleft       reduce using rule 36 (sentence -> expression .)
    vision          reduce using rule 36 (sentence -> expression .)
    input           reduce using rule 36 (sentence -> expression .)
    STR             reduce using rule 36 (sentence -> expression .)
    NUMBER          reduce using rule 36 (sentence -> expression .)
    false           reduce using rule 36 (sentence -> expression .)
    true            reduce using rule 36 (sentence -> expression .)
    var             reduce using rule 36 (sentence -> expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! MINUS           [ reduce using rule 36 (sentence -> expression .) ]
  ! PLR             [ reduce using rule 36 (sentence -> expression .) ]
  ! PLL             [ reduce using rule 36 (sentence -> expression .) ]
  ! PLUS            [ reduce using rule 36 (sentence -> expression .) ]
  ! MNR             [ reduce using rule 36 (sentence -> expression .) ]
  ! MNL             [ reduce using rule 36 (sentence -> expression .) ]
  ! TMR             [ reduce using rule 36 (sentence -> expression .) ]
  ! TML             [ reduce using rule 36 (sentence -> expression .) ]
  ! TIMES           [ reduce using rule 36 (sentence -> expression .) ]
  ! DVR             [ reduce using rule 36 (sentence -> expression .) ]
  ! DVL             [ reduce using rule 36 (sentence -> expression .) ]
  ! DIVIDE          [ reduce using rule 36 (sentence -> expression .) ]
  ! PWR             [ reduce using rule 36 (sentence -> expression .) ]
  ! PWL             [ reduce using rule 36 (sentence -> expression .) ]
  ! POWER           [ reduce using rule 36 (sentence -> expression .) ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 17

    (37) sentence -> logic .

    end             reduce using rule 37 (sentence -> logic .)
    error           reduce using rule 37 (sentence -> logic .)
    MINUS           reduce using rule 37 (sentence -> logic .)
    LBRACE          reduce using rule 37 (sentence -> logic .)
    int             reduce using rule 37 (sentence -> logic .)
    bool            reduce using rule 37 (sentence -> logic .)
    string          reduce using rule 37 (sentence -> logic .)
    ID              reduce using rule 37 (sentence -> logic .)
    up              reduce using rule 37 (sentence -> logic .)
    down            reduce using rule 37 (sentence -> logic .)
    left            reduce using rule 37 (sentence -> logic .)
    right           reduce using rule 37 (sentence -> logic .)
    knockup         reduce using rule 37 (sentence -> logic .)
    knockdown       reduce using rule 37 (sentence -> logic .)
    knockright      reduce using rule 37 (sentence -> logic .)
    knockleft       reduce using rule 37 (sentence -> logic .)
    vision          reduce using rule 37 (sentence -> logic .)
    input           reduce using rule 37 (sentence -> logic .)
    STR             reduce using rule 37 (sentence -> logic .)
    NUMBER          reduce using rule 37 (sentence -> logic .)
    false           reduce using rule 37 (sentence -> logic .)
    true            reduce using rule 37 (sentence -> logic .)
    var             reduce using rule 37 (sentence -> logic .)
    PLR             reduce using rule 37 (sentence -> logic .)
    PLL             reduce using rule 37 (sentence -> logic .)
    PLUS            reduce using rule 37 (sentence -> logic .)
    MNR             reduce using rule 37 (sentence -> logic .)
    MNL             reduce using rule 37 (sentence -> logic .)
    TMR             reduce using rule 37 (sentence -> logic .)
    TML             reduce using rule 37 (sentence -> logic .)
    TIMES           reduce using rule 37 (sentence -> logic .)
    DVR             reduce using rule 37 (sentence -> logic .)
    DVL             reduce using rule 37 (sentence -> logic .)
    DIVIDE          reduce using rule 37 (sentence -> logic .)
    PWR             reduce using rule 37 (sentence -> logic .)
    PWL             reduce using rule 37 (sentence -> logic .)
    POWER           reduce using rule 37 (sentence -> logic .)


state 18

    (38) sentence -> define .

    end             reduce using rule 38 (sentence -> define .)
    error           reduce using rule 38 (sentence -> define .)
    MINUS           reduce using rule 38 (sentence -> define .)
    LBRACE          reduce using rule 38 (sentence -> define .)
    int             reduce using rule 38 (sentence -> define .)
    bool            reduce using rule 38 (sentence -> define .)
    string          reduce using rule 38 (sentence -> define .)
    ID              reduce using rule 38 (sentence -> define .)
    up              reduce using rule 38 (sentence -> define .)
    down            reduce using rule 38 (sentence -> define .)
    left            reduce using rule 38 (sentence -> define .)
    right           reduce using rule 38 (sentence -> define .)
    knockup         reduce using rule 38 (sentence -> define .)
    knockdown       reduce using rule 38 (sentence -> define .)
    knockright      reduce using rule 38 (sentence -> define .)
    knockleft       reduce using rule 38 (sentence -> define .)
    vision          reduce using rule 38 (sentence -> define .)
    input           reduce using rule 38 (sentence -> define .)
    STR             reduce using rule 38 (sentence -> define .)
    NUMBER          reduce using rule 38 (sentence -> define .)
    false           reduce using rule 38 (sentence -> define .)
    true            reduce using rule 38 (sentence -> define .)
    var             reduce using rule 38 (sentence -> define .)
    PLR             reduce using rule 38 (sentence -> define .)
    PLL             reduce using rule 38 (sentence -> define .)
    PLUS            reduce using rule 38 (sentence -> define .)
    MNR             reduce using rule 38 (sentence -> define .)
    MNL             reduce using rule 38 (sentence -> define .)
    TMR             reduce using rule 38 (sentence -> define .)
    TML             reduce using rule 38 (sentence -> define .)
    TIMES           reduce using rule 38 (sentence -> define .)
    DVR             reduce using rule 38 (sentence -> define .)
    DVL             reduce using rule 38 (sentence -> define .)
    DIVIDE          reduce using rule 38 (sentence -> define .)
    PWR             reduce using rule 38 (sentence -> define .)
    PWL             reduce using rule 38 (sentence -> define .)
    POWER           reduce using rule 38 (sentence -> define .)


state 19

    (39) sentence -> assignment .

    end             reduce using rule 39 (sentence -> assignment .)
    error           reduce using rule 39 (sentence -> assignment .)
    MINUS           reduce using rule 39 (sentence -> assignment .)
    LBRACE          reduce using rule 39 (sentence -> assignment .)
    int             reduce using rule 39 (sentence -> assignment .)
    bool            reduce using rule 39 (sentence -> assignment .)
    string          reduce using rule 39 (sentence -> assignment .)
    ID              reduce using rule 39 (sentence -> assignment .)
    up              reduce using rule 39 (sentence -> assignment .)
    down            reduce using rule 39 (sentence -> assignment .)
    left            reduce using rule 39 (sentence -> assignment .)
    right           reduce using rule 39 (sentence -> assignment .)
    knockup         reduce using rule 39 (sentence -> assignment .)
    knockdown       reduce using rule 39 (sentence -> assignment .)
    knockright      reduce using rule 39 (sentence -> assignment .)
    knockleft       reduce using rule 39 (sentence -> assignment .)
    vision          reduce using rule 39 (sentence -> assignment .)
    input           reduce using rule 39 (sentence -> assignment .)
    STR             reduce using rule 39 (sentence -> assignment .)
    NUMBER          reduce using rule 39 (sentence -> assignment .)
    false           reduce using rule 39 (sentence -> assignment .)
    true            reduce using rule 39 (sentence -> assignment .)
    var             reduce using rule 39 (sentence -> assignment .)
    PLR             reduce using rule 39 (sentence -> assignment .)
    PLL             reduce using rule 39 (sentence -> assignment .)
    PLUS            reduce using rule 39 (sentence -> assignment .)
    MNR             reduce using rule 39 (sentence -> assignment .)
    MNL             reduce using rule 39 (sentence -> assignment .)
    TMR             reduce using rule 39 (sentence -> assignment .)
    TML             reduce using rule 39 (sentence -> assignment .)
    TIMES           reduce using rule 39 (sentence -> assignment .)
    DVR             reduce using rule 39 (sentence -> assignment .)
    DVL             reduce using rule 39 (sentence -> assignment .)
    DIVIDE          reduce using rule 39 (sentence -> assignment .)
    PWR             reduce using rule 39 (sentence -> assignment .)
    PWL             reduce using rule 39 (sentence -> assignment .)
    POWER           reduce using rule 39 (sentence -> assignment .)


state 20

    (40) sentence -> move .

    end             reduce using rule 40 (sentence -> move .)
    error           reduce using rule 40 (sentence -> move .)
    MINUS           reduce using rule 40 (sentence -> move .)
    LBRACE          reduce using rule 40 (sentence -> move .)
    int             reduce using rule 40 (sentence -> move .)
    bool            reduce using rule 40 (sentence -> move .)
    string          reduce using rule 40 (sentence -> move .)
    ID              reduce using rule 40 (sentence -> move .)
    up              reduce using rule 40 (sentence -> move .)
    down            reduce using rule 40 (sentence -> move .)
    left            reduce using rule 40 (sentence -> move .)
    right           reduce using rule 40 (sentence -> move .)
    knockup         reduce using rule 40 (sentence -> move .)
    knockdown       reduce using rule 40 (sentence -> move .)
    knockright      reduce using rule 40 (sentence -> move .)
    knockleft       reduce using rule 40 (sentence -> move .)
    vision          reduce using rule 40 (sentence -> move .)
    input           reduce using rule 40 (sentence -> move .)
    STR             reduce using rule 40 (sentence -> move .)
    NUMBER          reduce using rule 40 (sentence -> move .)
    false           reduce using rule 40 (sentence -> move .)
    true            reduce using rule 40 (sentence -> move .)
    var             reduce using rule 40 (sentence -> move .)
    PLR             reduce using rule 40 (sentence -> move .)
    PLL             reduce using rule 40 (sentence -> move .)
    PLUS            reduce using rule 40 (sentence -> move .)
    MNR             reduce using rule 40 (sentence -> move .)
    MNL             reduce using rule 40 (sentence -> move .)
    TMR             reduce using rule 40 (sentence -> move .)
    TML             reduce using rule 40 (sentence -> move .)
    TIMES           reduce using rule 40 (sentence -> move .)
    DVR             reduce using rule 40 (sentence -> move .)
    DVL             reduce using rule 40 (sentence -> move .)
    DIVIDE          reduce using rule 40 (sentence -> move .)
    PWR             reduce using rule 40 (sentence -> move .)
    PWL             reduce using rule 40 (sentence -> move .)
    POWER           reduce using rule 40 (sentence -> move .)


state 21

    (41) sentence -> ping .

    end             reduce using rule 41 (sentence -> ping .)
    error           reduce using rule 41 (sentence -> ping .)
    MINUS           reduce using rule 41 (sentence -> ping .)
    LBRACE          reduce using rule 41 (sentence -> ping .)
    int             reduce using rule 41 (sentence -> ping .)
    bool            reduce using rule 41 (sentence -> ping .)
    string          reduce using rule 41 (sentence -> ping .)
    ID              reduce using rule 41 (sentence -> ping .)
    up              reduce using rule 41 (sentence -> ping .)
    down            reduce using rule 41 (sentence -> ping .)
    left            reduce using rule 41 (sentence -> ping .)
    right           reduce using rule 41 (sentence -> ping .)
    knockup         reduce using rule 41 (sentence -> ping .)
    knockdown       reduce using rule 41 (sentence -> ping .)
    knockright      reduce using rule 41 (sentence -> ping .)
    knockleft       reduce using rule 41 (sentence -> ping .)
    vision          reduce using rule 41 (sentence -> ping .)
    input           reduce using rule 41 (sentence -> ping .)
    STR             reduce using rule 41 (sentence -> ping .)
    NUMBER          reduce using rule 41 (sentence -> ping .)
    false           reduce using rule 41 (sentence -> ping .)
    true            reduce using rule 41 (sentence -> ping .)
    var             reduce using rule 41 (sentence -> ping .)
    PLR             reduce using rule 41 (sentence -> ping .)
    PLL             reduce using rule 41 (sentence -> ping .)
    PLUS            reduce using rule 41 (sentence -> ping .)
    MNR             reduce using rule 41 (sentence -> ping .)
    MNL             reduce using rule 41 (sentence -> ping .)
    TMR             reduce using rule 41 (sentence -> ping .)
    TML             reduce using rule 41 (sentence -> ping .)
    TIMES           reduce using rule 41 (sentence -> ping .)
    DVR             reduce using rule 41 (sentence -> ping .)
    DVL             reduce using rule 41 (sentence -> ping .)
    DIVIDE          reduce using rule 41 (sentence -> ping .)
    PWR             reduce using rule 41 (sentence -> ping .)
    PWL             reduce using rule 41 (sentence -> ping .)
    POWER           reduce using rule 41 (sentence -> ping .)


state 22

    (42) sentence -> sensor .

    end             reduce using rule 42 (sentence -> sensor .)
    error           reduce using rule 42 (sentence -> sensor .)
    MINUS           reduce using rule 42 (sentence -> sensor .)
    LBRACE          reduce using rule 42 (sentence -> sensor .)
    int             reduce using rule 42 (sentence -> sensor .)
    bool            reduce using rule 42 (sentence -> sensor .)
    string          reduce using rule 42 (sentence -> sensor .)
    ID              reduce using rule 42 (sentence -> sensor .)
    up              reduce using rule 42 (sentence -> sensor .)
    down            reduce using rule 42 (sentence -> sensor .)
    left            reduce using rule 42 (sentence -> sensor .)
    right           reduce using rule 42 (sentence -> sensor .)
    knockup         reduce using rule 42 (sentence -> sensor .)
    knockdown       reduce using rule 42 (sentence -> sensor .)
    knockright      reduce using rule 42 (sentence -> sensor .)
    knockleft       reduce using rule 42 (sentence -> sensor .)
    vision          reduce using rule 42 (sentence -> sensor .)
    input           reduce using rule 42 (sentence -> sensor .)
    STR             reduce using rule 42 (sentence -> sensor .)
    NUMBER          reduce using rule 42 (sentence -> sensor .)
    false           reduce using rule 42 (sentence -> sensor .)
    true            reduce using rule 42 (sentence -> sensor .)
    var             reduce using rule 42 (sentence -> sensor .)
    PLR             reduce using rule 42 (sentence -> sensor .)
    PLL             reduce using rule 42 (sentence -> sensor .)
    PLUS            reduce using rule 42 (sentence -> sensor .)
    MNR             reduce using rule 42 (sentence -> sensor .)
    MNL             reduce using rule 42 (sentence -> sensor .)
    TMR             reduce using rule 42 (sentence -> sensor .)
    TML             reduce using rule 42 (sentence -> sensor .)
    TIMES           reduce using rule 42 (sentence -> sensor .)
    DVR             reduce using rule 42 (sentence -> sensor .)
    DVL             reduce using rule 42 (sentence -> sensor .)
    DIVIDE          reduce using rule 42 (sentence -> sensor .)
    PWR             reduce using rule 42 (sentence -> sensor .)
    PWL             reduce using rule 42 (sentence -> sensor .)
    POWER           reduce using rule 42 (sentence -> sensor .)


state 23

    (43) sentence -> error .

    end             reduce using rule 43 (sentence -> error .)
    error           reduce using rule 43 (sentence -> error .)
    MINUS           reduce using rule 43 (sentence -> error .)
    LBRACE          reduce using rule 43 (sentence -> error .)
    int             reduce using rule 43 (sentence -> error .)
    bool            reduce using rule 43 (sentence -> error .)
    string          reduce using rule 43 (sentence -> error .)
    ID              reduce using rule 43 (sentence -> error .)
    up              reduce using rule 43 (sentence -> error .)
    down            reduce using rule 43 (sentence -> error .)
    left            reduce using rule 43 (sentence -> error .)
    right           reduce using rule 43 (sentence -> error .)
    knockup         reduce using rule 43 (sentence -> error .)
    knockdown       reduce using rule 43 (sentence -> error .)
    knockright      reduce using rule 43 (sentence -> error .)
    knockleft       reduce using rule 43 (sentence -> error .)
    vision          reduce using rule 43 (sentence -> error .)
    input           reduce using rule 43 (sentence -> error .)
    STR             reduce using rule 43 (sentence -> error .)
    NUMBER          reduce using rule 43 (sentence -> error .)
    false           reduce using rule 43 (sentence -> error .)
    true            reduce using rule 43 (sentence -> error .)
    var             reduce using rule 43 (sentence -> error .)
    PLR             reduce using rule 43 (sentence -> error .)
    PLL             reduce using rule 43 (sentence -> error .)
    PLUS            reduce using rule 43 (sentence -> error .)
    MNR             reduce using rule 43 (sentence -> error .)
    MNL             reduce using rule 43 (sentence -> error .)
    TMR             reduce using rule 43 (sentence -> error .)
    TML             reduce using rule 43 (sentence -> error .)
    TIMES           reduce using rule 43 (sentence -> error .)
    DVR             reduce using rule 43 (sentence -> error .)
    DVL             reduce using rule 43 (sentence -> error .)
    DIVIDE          reduce using rule 43 (sentence -> error .)
    PWR             reduce using rule 43 (sentence -> error .)
    PWL             reduce using rule 43 (sentence -> error .)
    POWER           reduce using rule 43 (sentence -> error .)


state 24

    (97) cfunc -> ids . LBRACKET exprgroup RBRACKET
    (98) cfunc -> ids . LBRACKET ids RBRACKET
    (99) cfunc -> ids . LBRACKET RBRACKET
    (94) expression -> ids .
    (102) assignment -> ids . EQ var
    (103) assignment -> ids . EQ expression
    (104) assignment -> ids . EQ str
    (105) assignment -> ids . EQ ID LBRACKET ids RBRACKET
    (106) assignment -> ids . LBRACKET expression RBRACKET EQ expression
    (107) assignment -> ids . LBRACKET ids RBRACKET EQ expression

    LBRACKET        shift and go to state 75
    PLR             reduce using rule 94 (expression -> ids .)
    PLL             reduce using rule 94 (expression -> ids .)
    PLUS            reduce using rule 94 (expression -> ids .)
    MNR             reduce using rule 94 (expression -> ids .)
    MNL             reduce using rule 94 (expression -> ids .)
    MINUS           reduce using rule 94 (expression -> ids .)
    TMR             reduce using rule 94 (expression -> ids .)
    TML             reduce using rule 94 (expression -> ids .)
    TIMES           reduce using rule 94 (expression -> ids .)
    DVR             reduce using rule 94 (expression -> ids .)
    DVL             reduce using rule 94 (expression -> ids .)
    DIVIDE          reduce using rule 94 (expression -> ids .)
    PWR             reduce using rule 94 (expression -> ids .)
    PWL             reduce using rule 94 (expression -> ids .)
    POWER           reduce using rule 94 (expression -> ids .)
    end             reduce using rule 94 (expression -> ids .)
    error           reduce using rule 94 (expression -> ids .)
    LBRACE          reduce using rule 94 (expression -> ids .)
    int             reduce using rule 94 (expression -> ids .)
    bool            reduce using rule 94 (expression -> ids .)
    string          reduce using rule 94 (expression -> ids .)
    ID              reduce using rule 94 (expression -> ids .)
    up              reduce using rule 94 (expression -> ids .)
    down            reduce using rule 94 (expression -> ids .)
    left            reduce using rule 94 (expression -> ids .)
    right           reduce using rule 94 (expression -> ids .)
    knockup         reduce using rule 94 (expression -> ids .)
    knockdown       reduce using rule 94 (expression -> ids .)
    knockright      reduce using rule 94 (expression -> ids .)
    knockleft       reduce using rule 94 (expression -> ids .)
    vision          reduce using rule 94 (expression -> ids .)
    input           reduce using rule 94 (expression -> ids .)
    STR             reduce using rule 94 (expression -> ids .)
    NUMBER          reduce using rule 94 (expression -> ids .)
    false           reduce using rule 94 (expression -> ids .)
    true            reduce using rule 94 (expression -> ids .)
    var             reduce using rule 94 (expression -> ids .)
    EQ              shift and go to state 76


state 25

    (91) expression -> str .

    PLR             reduce using rule 91 (expression -> str .)
    PLL             reduce using rule 91 (expression -> str .)
    PLUS            reduce using rule 91 (expression -> str .)
    MNR             reduce using rule 91 (expression -> str .)
    MNL             reduce using rule 91 (expression -> str .)
    MINUS           reduce using rule 91 (expression -> str .)
    TMR             reduce using rule 91 (expression -> str .)
    TML             reduce using rule 91 (expression -> str .)
    TIMES           reduce using rule 91 (expression -> str .)
    DVR             reduce using rule 91 (expression -> str .)
    DVL             reduce using rule 91 (expression -> str .)
    DIVIDE          reduce using rule 91 (expression -> str .)
    PWR             reduce using rule 91 (expression -> str .)
    PWL             reduce using rule 91 (expression -> str .)
    POWER           reduce using rule 91 (expression -> str .)
    end             reduce using rule 91 (expression -> str .)
    error           reduce using rule 91 (expression -> str .)
    LBRACE          reduce using rule 91 (expression -> str .)
    int             reduce using rule 91 (expression -> str .)
    bool            reduce using rule 91 (expression -> str .)
    string          reduce using rule 91 (expression -> str .)
    ID              reduce using rule 91 (expression -> str .)
    up              reduce using rule 91 (expression -> str .)
    down            reduce using rule 91 (expression -> str .)
    left            reduce using rule 91 (expression -> str .)
    right           reduce using rule 91 (expression -> str .)
    knockup         reduce using rule 91 (expression -> str .)
    knockdown       reduce using rule 91 (expression -> str .)
    knockright      reduce using rule 91 (expression -> str .)
    knockleft       reduce using rule 91 (expression -> str .)
    vision          reduce using rule 91 (expression -> str .)
    input           reduce using rule 91 (expression -> str .)
    STR             reduce using rule 91 (expression -> str .)
    NUMBER          reduce using rule 91 (expression -> str .)
    false           reduce using rule 91 (expression -> str .)
    true            reduce using rule 91 (expression -> str .)
    var             reduce using rule 91 (expression -> str .)
    LTR             reduce using rule 91 (expression -> str .)
    LTL             reduce using rule 91 (expression -> str .)
    LT              reduce using rule 91 (expression -> str .)
    GTR             reduce using rule 91 (expression -> str .)
    GTL             reduce using rule 91 (expression -> str .)
    GT              reduce using rule 91 (expression -> str .)
    DEQR            reduce using rule 91 (expression -> str .)
    DEQL            reduce using rule 91 (expression -> str .)
    DEQ             reduce using rule 91 (expression -> str .)
    EXR             reduce using rule 91 (expression -> str .)
    EXL             reduce using rule 91 (expression -> str .)
    EX              reduce using rule 91 (expression -> str .)
    RBRACKET        reduce using rule 91 (expression -> str .)
    COMMA           reduce using rule 91 (expression -> str .)
    RBRACE          reduce using rule 91 (expression -> str .)


state 26

    (92) expression -> num .

    PLR             reduce using rule 92 (expression -> num .)
    PLL             reduce using rule 92 (expression -> num .)
    PLUS            reduce using rule 92 (expression -> num .)
    MNR             reduce using rule 92 (expression -> num .)
    MNL             reduce using rule 92 (expression -> num .)
    MINUS           reduce using rule 92 (expression -> num .)
    TMR             reduce using rule 92 (expression -> num .)
    TML             reduce using rule 92 (expression -> num .)
    TIMES           reduce using rule 92 (expression -> num .)
    DVR             reduce using rule 92 (expression -> num .)
    DVL             reduce using rule 92 (expression -> num .)
    DIVIDE          reduce using rule 92 (expression -> num .)
    PWR             reduce using rule 92 (expression -> num .)
    PWL             reduce using rule 92 (expression -> num .)
    POWER           reduce using rule 92 (expression -> num .)
    end             reduce using rule 92 (expression -> num .)
    error           reduce using rule 92 (expression -> num .)
    LBRACE          reduce using rule 92 (expression -> num .)
    int             reduce using rule 92 (expression -> num .)
    bool            reduce using rule 92 (expression -> num .)
    string          reduce using rule 92 (expression -> num .)
    ID              reduce using rule 92 (expression -> num .)
    up              reduce using rule 92 (expression -> num .)
    down            reduce using rule 92 (expression -> num .)
    left            reduce using rule 92 (expression -> num .)
    right           reduce using rule 92 (expression -> num .)
    knockup         reduce using rule 92 (expression -> num .)
    knockdown       reduce using rule 92 (expression -> num .)
    knockright      reduce using rule 92 (expression -> num .)
    knockleft       reduce using rule 92 (expression -> num .)
    vision          reduce using rule 92 (expression -> num .)
    input           reduce using rule 92 (expression -> num .)
    STR             reduce using rule 92 (expression -> num .)
    NUMBER          reduce using rule 92 (expression -> num .)
    false           reduce using rule 92 (expression -> num .)
    true            reduce using rule 92 (expression -> num .)
    var             reduce using rule 92 (expression -> num .)
    LTR             reduce using rule 92 (expression -> num .)
    LTL             reduce using rule 92 (expression -> num .)
    LT              reduce using rule 92 (expression -> num .)
    GTR             reduce using rule 92 (expression -> num .)
    GTL             reduce using rule 92 (expression -> num .)
    GT              reduce using rule 92 (expression -> num .)
    DEQR            reduce using rule 92 (expression -> num .)
    DEQL            reduce using rule 92 (expression -> num .)
    DEQ             reduce using rule 92 (expression -> num .)
    EXR             reduce using rule 92 (expression -> num .)
    EXL             reduce using rule 92 (expression -> num .)
    EX              reduce using rule 92 (expression -> num .)
    RBRACKET        reduce using rule 92 (expression -> num .)
    COMMA           reduce using rule 92 (expression -> num .)
    RBRACE          reduce using rule 92 (expression -> num .)


state 27

    (95) expression -> boolean .
    (31) define -> boolean . ids LBRACKET NUMBER RBRACKET
    (12) ids -> . ID

  ! shift/reduce conflict for ID resolved as shift
    PLR             reduce using rule 95 (expression -> boolean .)
    PLL             reduce using rule 95 (expression -> boolean .)
    PLUS            reduce using rule 95 (expression -> boolean .)
    MNR             reduce using rule 95 (expression -> boolean .)
    MNL             reduce using rule 95 (expression -> boolean .)
    MINUS           reduce using rule 95 (expression -> boolean .)
    TMR             reduce using rule 95 (expression -> boolean .)
    TML             reduce using rule 95 (expression -> boolean .)
    TIMES           reduce using rule 95 (expression -> boolean .)
    DVR             reduce using rule 95 (expression -> boolean .)
    DVL             reduce using rule 95 (expression -> boolean .)
    DIVIDE          reduce using rule 95 (expression -> boolean .)
    PWR             reduce using rule 95 (expression -> boolean .)
    PWL             reduce using rule 95 (expression -> boolean .)
    POWER           reduce using rule 95 (expression -> boolean .)
    end             reduce using rule 95 (expression -> boolean .)
    error           reduce using rule 95 (expression -> boolean .)
    LBRACE          reduce using rule 95 (expression -> boolean .)
    int             reduce using rule 95 (expression -> boolean .)
    bool            reduce using rule 95 (expression -> boolean .)
    string          reduce using rule 95 (expression -> boolean .)
    up              reduce using rule 95 (expression -> boolean .)
    down            reduce using rule 95 (expression -> boolean .)
    left            reduce using rule 95 (expression -> boolean .)
    right           reduce using rule 95 (expression -> boolean .)
    knockup         reduce using rule 95 (expression -> boolean .)
    knockdown       reduce using rule 95 (expression -> boolean .)
    knockright      reduce using rule 95 (expression -> boolean .)
    knockleft       reduce using rule 95 (expression -> boolean .)
    vision          reduce using rule 95 (expression -> boolean .)
    input           reduce using rule 95 (expression -> boolean .)
    STR             reduce using rule 95 (expression -> boolean .)
    NUMBER          reduce using rule 95 (expression -> boolean .)
    false           reduce using rule 95 (expression -> boolean .)
    true            reduce using rule 95 (expression -> boolean .)
    var             reduce using rule 95 (expression -> boolean .)
    ID              shift and go to state 51

  ! ID              [ reduce using rule 95 (expression -> boolean .) ]

    ids                            shift and go to state 77

state 28

    (96) expression -> MINUS . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    COMMA           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 78
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 29

    (52) logic -> LBRACE . lexp RBRACE sentgroup
    (53) lexp -> . expression lt expression
    (54) lexp -> . expression gt expression
    (55) lexp -> . expression deg expression
    (56) lexp -> . expression ex expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    lexp                           shift and go to state 81
    expression                     shift and go to state 82
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 30

    (26) define -> int . ids
    (30) define -> int . ids LBRACKET NUMBER RBRACKET
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 83

state 31

    (27) define -> bool . ids
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 84

state 32

    (28) define -> string . ids
    (32) define -> string . ids LBRACKET NUMBER RBRACKET
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 85

state 33

    (29) define -> ID . ids
    (12) ids -> ID .
    (12) ids -> . ID

  ! shift/reduce conflict for ID resolved as shift
    LBRACKET        reduce using rule 12 (ids -> ID .)
    EQ              reduce using rule 12 (ids -> ID .)
    PLR             reduce using rule 12 (ids -> ID .)
    PLL             reduce using rule 12 (ids -> ID .)
    PLUS            reduce using rule 12 (ids -> ID .)
    MNR             reduce using rule 12 (ids -> ID .)
    MNL             reduce using rule 12 (ids -> ID .)
    MINUS           reduce using rule 12 (ids -> ID .)
    TMR             reduce using rule 12 (ids -> ID .)
    TML             reduce using rule 12 (ids -> ID .)
    TIMES           reduce using rule 12 (ids -> ID .)
    DVR             reduce using rule 12 (ids -> ID .)
    DVL             reduce using rule 12 (ids -> ID .)
    DIVIDE          reduce using rule 12 (ids -> ID .)
    PWR             reduce using rule 12 (ids -> ID .)
    PWL             reduce using rule 12 (ids -> ID .)
    POWER           reduce using rule 12 (ids -> ID .)
    end             reduce using rule 12 (ids -> ID .)
    error           reduce using rule 12 (ids -> ID .)
    LBRACE          reduce using rule 12 (ids -> ID .)
    int             reduce using rule 12 (ids -> ID .)
    bool            reduce using rule 12 (ids -> ID .)
    string          reduce using rule 12 (ids -> ID .)
    up              reduce using rule 12 (ids -> ID .)
    down            reduce using rule 12 (ids -> ID .)
    left            reduce using rule 12 (ids -> ID .)
    right           reduce using rule 12 (ids -> ID .)
    knockup         reduce using rule 12 (ids -> ID .)
    knockdown       reduce using rule 12 (ids -> ID .)
    knockright      reduce using rule 12 (ids -> ID .)
    knockleft       reduce using rule 12 (ids -> ID .)
    vision          reduce using rule 12 (ids -> ID .)
    input           reduce using rule 12 (ids -> ID .)
    STR             reduce using rule 12 (ids -> ID .)
    NUMBER          reduce using rule 12 (ids -> ID .)
    false           reduce using rule 12 (ids -> ID .)
    true            reduce using rule 12 (ids -> ID .)
    var             reduce using rule 12 (ids -> ID .)
    ID              shift and go to state 51

  ! ID              [ reduce using rule 12 (ids -> ID .) ]

    ids                            shift and go to state 86

state 34

    (93) num -> NUMBER .

    PLR             reduce using rule 93 (num -> NUMBER .)
    PLL             reduce using rule 93 (num -> NUMBER .)
    PLUS            reduce using rule 93 (num -> NUMBER .)
    MNR             reduce using rule 93 (num -> NUMBER .)
    MNL             reduce using rule 93 (num -> NUMBER .)
    MINUS           reduce using rule 93 (num -> NUMBER .)
    TMR             reduce using rule 93 (num -> NUMBER .)
    TML             reduce using rule 93 (num -> NUMBER .)
    TIMES           reduce using rule 93 (num -> NUMBER .)
    DVR             reduce using rule 93 (num -> NUMBER .)
    DVL             reduce using rule 93 (num -> NUMBER .)
    DIVIDE          reduce using rule 93 (num -> NUMBER .)
    PWR             reduce using rule 93 (num -> NUMBER .)
    PWL             reduce using rule 93 (num -> NUMBER .)
    POWER           reduce using rule 93 (num -> NUMBER .)
    end             reduce using rule 93 (num -> NUMBER .)
    error           reduce using rule 93 (num -> NUMBER .)
    LBRACE          reduce using rule 93 (num -> NUMBER .)
    int             reduce using rule 93 (num -> NUMBER .)
    bool            reduce using rule 93 (num -> NUMBER .)
    string          reduce using rule 93 (num -> NUMBER .)
    ID              reduce using rule 93 (num -> NUMBER .)
    up              reduce using rule 93 (num -> NUMBER .)
    down            reduce using rule 93 (num -> NUMBER .)
    left            reduce using rule 93 (num -> NUMBER .)
    right           reduce using rule 93 (num -> NUMBER .)
    knockup         reduce using rule 93 (num -> NUMBER .)
    knockdown       reduce using rule 93 (num -> NUMBER .)
    knockright      reduce using rule 93 (num -> NUMBER .)
    knockleft       reduce using rule 93 (num -> NUMBER .)
    vision          reduce using rule 93 (num -> NUMBER .)
    input           reduce using rule 93 (num -> NUMBER .)
    STR             reduce using rule 93 (num -> NUMBER .)
    NUMBER          reduce using rule 93 (num -> NUMBER .)
    false           reduce using rule 93 (num -> NUMBER .)
    true            reduce using rule 93 (num -> NUMBER .)
    var             reduce using rule 93 (num -> NUMBER .)
    LTR             reduce using rule 93 (num -> NUMBER .)
    LTL             reduce using rule 93 (num -> NUMBER .)
    LT              reduce using rule 93 (num -> NUMBER .)
    GTR             reduce using rule 93 (num -> NUMBER .)
    GTL             reduce using rule 93 (num -> NUMBER .)
    GT              reduce using rule 93 (num -> NUMBER .)
    DEQR            reduce using rule 93 (num -> NUMBER .)
    DEQL            reduce using rule 93 (num -> NUMBER .)
    DEQ             reduce using rule 93 (num -> NUMBER .)
    EXR             reduce using rule 93 (num -> NUMBER .)
    EXL             reduce using rule 93 (num -> NUMBER .)
    EX              reduce using rule 93 (num -> NUMBER .)
    RBRACKET        reduce using rule 93 (num -> NUMBER .)
    COMMA           reduce using rule 93 (num -> NUMBER .)
    RBRACE          reduce using rule 93 (num -> NUMBER .)


state 35

    (120) boolean -> var .

    ID              reduce using rule 120 (boolean -> var .)
    PLR             reduce using rule 120 (boolean -> var .)
    PLL             reduce using rule 120 (boolean -> var .)
    PLUS            reduce using rule 120 (boolean -> var .)
    MNR             reduce using rule 120 (boolean -> var .)
    MNL             reduce using rule 120 (boolean -> var .)
    MINUS           reduce using rule 120 (boolean -> var .)
    TMR             reduce using rule 120 (boolean -> var .)
    TML             reduce using rule 120 (boolean -> var .)
    TIMES           reduce using rule 120 (boolean -> var .)
    DVR             reduce using rule 120 (boolean -> var .)
    DVL             reduce using rule 120 (boolean -> var .)
    DIVIDE          reduce using rule 120 (boolean -> var .)
    PWR             reduce using rule 120 (boolean -> var .)
    PWL             reduce using rule 120 (boolean -> var .)
    POWER           reduce using rule 120 (boolean -> var .)
    end             reduce using rule 120 (boolean -> var .)
    error           reduce using rule 120 (boolean -> var .)
    LBRACE          reduce using rule 120 (boolean -> var .)
    int             reduce using rule 120 (boolean -> var .)
    bool            reduce using rule 120 (boolean -> var .)
    string          reduce using rule 120 (boolean -> var .)
    up              reduce using rule 120 (boolean -> var .)
    down            reduce using rule 120 (boolean -> var .)
    left            reduce using rule 120 (boolean -> var .)
    right           reduce using rule 120 (boolean -> var .)
    knockup         reduce using rule 120 (boolean -> var .)
    knockdown       reduce using rule 120 (boolean -> var .)
    knockright      reduce using rule 120 (boolean -> var .)
    knockleft       reduce using rule 120 (boolean -> var .)
    vision          reduce using rule 120 (boolean -> var .)
    input           reduce using rule 120 (boolean -> var .)
    STR             reduce using rule 120 (boolean -> var .)
    NUMBER          reduce using rule 120 (boolean -> var .)
    false           reduce using rule 120 (boolean -> var .)
    true            reduce using rule 120 (boolean -> var .)
    var             reduce using rule 120 (boolean -> var .)
    LTR             reduce using rule 120 (boolean -> var .)
    LTL             reduce using rule 120 (boolean -> var .)
    LT              reduce using rule 120 (boolean -> var .)
    GTR             reduce using rule 120 (boolean -> var .)
    GTL             reduce using rule 120 (boolean -> var .)
    GT              reduce using rule 120 (boolean -> var .)
    DEQR            reduce using rule 120 (boolean -> var .)
    DEQL            reduce using rule 120 (boolean -> var .)
    DEQ             reduce using rule 120 (boolean -> var .)
    EXR             reduce using rule 120 (boolean -> var .)
    EXL             reduce using rule 120 (boolean -> var .)
    EX              reduce using rule 120 (boolean -> var .)
    RBRACKET        reduce using rule 120 (boolean -> var .)
    COMMA           reduce using rule 120 (boolean -> var .)
    RBRACE          reduce using rule 120 (boolean -> var .)


state 36

    (108) move -> up . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 87


state 37

    (109) move -> down . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 88


state 38

    (110) move -> left . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 89


state 39

    (111) move -> right . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 90


state 40

    (114) ping -> knockup . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 91


state 41

    (115) ping -> knockdown . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 92


state 42

    (116) ping -> knockright . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 93


state 43

    (117) ping -> knockleft . LBRACKET steps RBRACKET

    LBRACKET        shift and go to state 94


state 44

    (121) sensor -> vision . LBRACKET ids RBRACKET

    LBRACKET        shift and go to state 95


state 45

    (122) sensor -> input . LBRACKET ids RBRACKET

    LBRACKET        shift and go to state 96


state 46

    (90) str -> STR .

    PLR             reduce using rule 90 (str -> STR .)
    PLL             reduce using rule 90 (str -> STR .)
    PLUS            reduce using rule 90 (str -> STR .)
    MNR             reduce using rule 90 (str -> STR .)
    MNL             reduce using rule 90 (str -> STR .)
    MINUS           reduce using rule 90 (str -> STR .)
    TMR             reduce using rule 90 (str -> STR .)
    TML             reduce using rule 90 (str -> STR .)
    TIMES           reduce using rule 90 (str -> STR .)
    DVR             reduce using rule 90 (str -> STR .)
    DVL             reduce using rule 90 (str -> STR .)
    DIVIDE          reduce using rule 90 (str -> STR .)
    PWR             reduce using rule 90 (str -> STR .)
    PWL             reduce using rule 90 (str -> STR .)
    POWER           reduce using rule 90 (str -> STR .)
    end             reduce using rule 90 (str -> STR .)
    error           reduce using rule 90 (str -> STR .)
    LBRACE          reduce using rule 90 (str -> STR .)
    int             reduce using rule 90 (str -> STR .)
    bool            reduce using rule 90 (str -> STR .)
    string          reduce using rule 90 (str -> STR .)
    ID              reduce using rule 90 (str -> STR .)
    up              reduce using rule 90 (str -> STR .)
    down            reduce using rule 90 (str -> STR .)
    left            reduce using rule 90 (str -> STR .)
    right           reduce using rule 90 (str -> STR .)
    knockup         reduce using rule 90 (str -> STR .)
    knockdown       reduce using rule 90 (str -> STR .)
    knockright      reduce using rule 90 (str -> STR .)
    knockleft       reduce using rule 90 (str -> STR .)
    vision          reduce using rule 90 (str -> STR .)
    input           reduce using rule 90 (str -> STR .)
    STR             reduce using rule 90 (str -> STR .)
    NUMBER          reduce using rule 90 (str -> STR .)
    false           reduce using rule 90 (str -> STR .)
    true            reduce using rule 90 (str -> STR .)
    var             reduce using rule 90 (str -> STR .)
    LTR             reduce using rule 90 (str -> STR .)
    LTL             reduce using rule 90 (str -> STR .)
    LT              reduce using rule 90 (str -> STR .)
    GTR             reduce using rule 90 (str -> STR .)
    GTL             reduce using rule 90 (str -> STR .)
    GT              reduce using rule 90 (str -> STR .)
    DEQR            reduce using rule 90 (str -> STR .)
    DEQL            reduce using rule 90 (str -> STR .)
    DEQ             reduce using rule 90 (str -> STR .)
    EXR             reduce using rule 90 (str -> STR .)
    EXL             reduce using rule 90 (str -> STR .)
    EX              reduce using rule 90 (str -> STR .)
    RBRACKET        reduce using rule 90 (str -> STR .)
    COMMA           reduce using rule 90 (str -> STR .)
    RBRACE          reduce using rule 90 (str -> STR .)


state 47

    (118) boolean -> false .

    ID              reduce using rule 118 (boolean -> false .)
    PLR             reduce using rule 118 (boolean -> false .)
    PLL             reduce using rule 118 (boolean -> false .)
    PLUS            reduce using rule 118 (boolean -> false .)
    MNR             reduce using rule 118 (boolean -> false .)
    MNL             reduce using rule 118 (boolean -> false .)
    MINUS           reduce using rule 118 (boolean -> false .)
    TMR             reduce using rule 118 (boolean -> false .)
    TML             reduce using rule 118 (boolean -> false .)
    TIMES           reduce using rule 118 (boolean -> false .)
    DVR             reduce using rule 118 (boolean -> false .)
    DVL             reduce using rule 118 (boolean -> false .)
    DIVIDE          reduce using rule 118 (boolean -> false .)
    PWR             reduce using rule 118 (boolean -> false .)
    PWL             reduce using rule 118 (boolean -> false .)
    POWER           reduce using rule 118 (boolean -> false .)
    end             reduce using rule 118 (boolean -> false .)
    error           reduce using rule 118 (boolean -> false .)
    LBRACE          reduce using rule 118 (boolean -> false .)
    int             reduce using rule 118 (boolean -> false .)
    bool            reduce using rule 118 (boolean -> false .)
    string          reduce using rule 118 (boolean -> false .)
    up              reduce using rule 118 (boolean -> false .)
    down            reduce using rule 118 (boolean -> false .)
    left            reduce using rule 118 (boolean -> false .)
    right           reduce using rule 118 (boolean -> false .)
    knockup         reduce using rule 118 (boolean -> false .)
    knockdown       reduce using rule 118 (boolean -> false .)
    knockright      reduce using rule 118 (boolean -> false .)
    knockleft       reduce using rule 118 (boolean -> false .)
    vision          reduce using rule 118 (boolean -> false .)
    input           reduce using rule 118 (boolean -> false .)
    STR             reduce using rule 118 (boolean -> false .)
    NUMBER          reduce using rule 118 (boolean -> false .)
    false           reduce using rule 118 (boolean -> false .)
    true            reduce using rule 118 (boolean -> false .)
    var             reduce using rule 118 (boolean -> false .)
    LTR             reduce using rule 118 (boolean -> false .)
    LTL             reduce using rule 118 (boolean -> false .)
    LT              reduce using rule 118 (boolean -> false .)
    GTR             reduce using rule 118 (boolean -> false .)
    GTL             reduce using rule 118 (boolean -> false .)
    GT              reduce using rule 118 (boolean -> false .)
    DEQR            reduce using rule 118 (boolean -> false .)
    DEQL            reduce using rule 118 (boolean -> false .)
    DEQ             reduce using rule 118 (boolean -> false .)
    EXR             reduce using rule 118 (boolean -> false .)
    EXL             reduce using rule 118 (boolean -> false .)
    EX              reduce using rule 118 (boolean -> false .)
    RBRACKET        reduce using rule 118 (boolean -> false .)
    COMMA           reduce using rule 118 (boolean -> false .)
    RBRACE          reduce using rule 118 (boolean -> false .)


state 48

    (119) boolean -> true .

    ID              reduce using rule 119 (boolean -> true .)
    PLR             reduce using rule 119 (boolean -> true .)
    PLL             reduce using rule 119 (boolean -> true .)
    PLUS            reduce using rule 119 (boolean -> true .)
    MNR             reduce using rule 119 (boolean -> true .)
    MNL             reduce using rule 119 (boolean -> true .)
    MINUS           reduce using rule 119 (boolean -> true .)
    TMR             reduce using rule 119 (boolean -> true .)
    TML             reduce using rule 119 (boolean -> true .)
    TIMES           reduce using rule 119 (boolean -> true .)
    DVR             reduce using rule 119 (boolean -> true .)
    DVL             reduce using rule 119 (boolean -> true .)
    DIVIDE          reduce using rule 119 (boolean -> true .)
    PWR             reduce using rule 119 (boolean -> true .)
    PWL             reduce using rule 119 (boolean -> true .)
    POWER           reduce using rule 119 (boolean -> true .)
    end             reduce using rule 119 (boolean -> true .)
    error           reduce using rule 119 (boolean -> true .)
    LBRACE          reduce using rule 119 (boolean -> true .)
    int             reduce using rule 119 (boolean -> true .)
    bool            reduce using rule 119 (boolean -> true .)
    string          reduce using rule 119 (boolean -> true .)
    up              reduce using rule 119 (boolean -> true .)
    down            reduce using rule 119 (boolean -> true .)
    left            reduce using rule 119 (boolean -> true .)
    right           reduce using rule 119 (boolean -> true .)
    knockup         reduce using rule 119 (boolean -> true .)
    knockdown       reduce using rule 119 (boolean -> true .)
    knockright      reduce using rule 119 (boolean -> true .)
    knockleft       reduce using rule 119 (boolean -> true .)
    vision          reduce using rule 119 (boolean -> true .)
    input           reduce using rule 119 (boolean -> true .)
    STR             reduce using rule 119 (boolean -> true .)
    NUMBER          reduce using rule 119 (boolean -> true .)
    false           reduce using rule 119 (boolean -> true .)
    true            reduce using rule 119 (boolean -> true .)
    var             reduce using rule 119 (boolean -> true .)
    LTR             reduce using rule 119 (boolean -> true .)
    LTL             reduce using rule 119 (boolean -> true .)
    LT              reduce using rule 119 (boolean -> true .)
    GTR             reduce using rule 119 (boolean -> true .)
    GTL             reduce using rule 119 (boolean -> true .)
    GT              reduce using rule 119 (boolean -> true .)
    DEQR            reduce using rule 119 (boolean -> true .)
    DEQL            reduce using rule 119 (boolean -> true .)
    DEQ             reduce using rule 119 (boolean -> true .)
    EXR             reduce using rule 119 (boolean -> true .)
    EXL             reduce using rule 119 (boolean -> true .)
    EX              reduce using rule 119 (boolean -> true .)
    RBRACKET        reduce using rule 119 (boolean -> true .)
    COMMA           reduce using rule 119 (boolean -> true .)
    RBRACE          reduce using rule 119 (boolean -> true .)


state 49

    (7) func -> def ids . LBRACKET list RBRACKET sentgroup
    (9) func -> def ids . LBRACKET error RBRACKET sentgroup
    (10) func -> def ids . LBRACKET error RBRACKET error

    LBRACKET        shift and go to state 97


state 50

    (8) func -> def error . LBRACKET list RBRACKET sentgroup
    (11) func -> def error .

    LBRACKET        shift and go to state 98
    start           reduce using rule 11 (func -> def error .)
    def             reduce using rule 11 (func -> def error .)
    struct          reduce using rule 11 (func -> def error .)
    $end            reduce using rule 11 (func -> def error .)


state 51

    (12) ids -> ID .

    LBRACKET        reduce using rule 12 (ids -> ID .)
    PLR             reduce using rule 12 (ids -> ID .)
    PLL             reduce using rule 12 (ids -> ID .)
    PLUS            reduce using rule 12 (ids -> ID .)
    MNR             reduce using rule 12 (ids -> ID .)
    MNL             reduce using rule 12 (ids -> ID .)
    MINUS           reduce using rule 12 (ids -> ID .)
    TMR             reduce using rule 12 (ids -> ID .)
    TML             reduce using rule 12 (ids -> ID .)
    TIMES           reduce using rule 12 (ids -> ID .)
    DVR             reduce using rule 12 (ids -> ID .)
    DVL             reduce using rule 12 (ids -> ID .)
    DIVIDE          reduce using rule 12 (ids -> ID .)
    PWR             reduce using rule 12 (ids -> ID .)
    PWL             reduce using rule 12 (ids -> ID .)
    POWER           reduce using rule 12 (ids -> ID .)
    end             reduce using rule 12 (ids -> ID .)
    error           reduce using rule 12 (ids -> ID .)
    LBRACE          reduce using rule 12 (ids -> ID .)
    int             reduce using rule 12 (ids -> ID .)
    bool            reduce using rule 12 (ids -> ID .)
    string          reduce using rule 12 (ids -> ID .)
    ID              reduce using rule 12 (ids -> ID .)
    up              reduce using rule 12 (ids -> ID .)
    down            reduce using rule 12 (ids -> ID .)
    left            reduce using rule 12 (ids -> ID .)
    right           reduce using rule 12 (ids -> ID .)
    knockup         reduce using rule 12 (ids -> ID .)
    knockdown       reduce using rule 12 (ids -> ID .)
    knockright      reduce using rule 12 (ids -> ID .)
    knockleft       reduce using rule 12 (ids -> ID .)
    vision          reduce using rule 12 (ids -> ID .)
    input           reduce using rule 12 (ids -> ID .)
    STR             reduce using rule 12 (ids -> ID .)
    NUMBER          reduce using rule 12 (ids -> ID .)
    false           reduce using rule 12 (ids -> ID .)
    true            reduce using rule 12 (ids -> ID .)
    var             reduce using rule 12 (ids -> ID .)
    LTR             reduce using rule 12 (ids -> ID .)
    LTL             reduce using rule 12 (ids -> ID .)
    LT              reduce using rule 12 (ids -> ID .)
    GTR             reduce using rule 12 (ids -> ID .)
    GTL             reduce using rule 12 (ids -> ID .)
    GT              reduce using rule 12 (ids -> ID .)
    DEQR            reduce using rule 12 (ids -> ID .)
    DEQL            reduce using rule 12 (ids -> ID .)
    DEQ             reduce using rule 12 (ids -> ID .)
    EXR             reduce using rule 12 (ids -> ID .)
    EXL             reduce using rule 12 (ids -> ID .)
    EX              reduce using rule 12 (ids -> ID .)
    RBRACKET        reduce using rule 12 (ids -> ID .)
    COMMA           reduce using rule 12 (ids -> ID .)
    RBRACE          reduce using rule 12 (ids -> ID .)
    AND             reduce using rule 12 (ids -> ID .)
    struct          reduce using rule 12 (ids -> ID .)
    convert         reduce using rule 12 (ids -> ID .)
    start           reduce using rule 12 (ids -> ID .)
    def             reduce using rule 12 (ids -> ID .)
    $end            reduce using rule 12 (ids -> ID .)


state 52

    (46) record -> struct ID . info deflst
    (47) record -> struct ID . info deflst convert to deflst
    (48) record -> struct ID . info deflst convert from deflst
    (49) record -> struct ID . info deflst convert to deflst convert from deflst

    info            shift and go to state 99


state 53

    (25) sentgroup -> start sentencess end .

    start           reduce using rule 25 (sentgroup -> start sentencess end .)
    def             reduce using rule 25 (sentgroup -> start sentencess end .)
    struct          reduce using rule 25 (sentgroup -> start sentencess end .)
    $end            reduce using rule 25 (sentgroup -> start sentencess end .)
    end             reduce using rule 25 (sentgroup -> start sentencess end .)
    error           reduce using rule 25 (sentgroup -> start sentencess end .)
    MINUS           reduce using rule 25 (sentgroup -> start sentencess end .)
    LBRACE          reduce using rule 25 (sentgroup -> start sentencess end .)
    int             reduce using rule 25 (sentgroup -> start sentencess end .)
    bool            reduce using rule 25 (sentgroup -> start sentencess end .)
    string          reduce using rule 25 (sentgroup -> start sentencess end .)
    ID              reduce using rule 25 (sentgroup -> start sentencess end .)
    up              reduce using rule 25 (sentgroup -> start sentencess end .)
    down            reduce using rule 25 (sentgroup -> start sentencess end .)
    left            reduce using rule 25 (sentgroup -> start sentencess end .)
    right           reduce using rule 25 (sentgroup -> start sentencess end .)
    knockup         reduce using rule 25 (sentgroup -> start sentencess end .)
    knockdown       reduce using rule 25 (sentgroup -> start sentencess end .)
    knockright      reduce using rule 25 (sentgroup -> start sentencess end .)
    knockleft       reduce using rule 25 (sentgroup -> start sentencess end .)
    vision          reduce using rule 25 (sentgroup -> start sentencess end .)
    input           reduce using rule 25 (sentgroup -> start sentencess end .)
    STR             reduce using rule 25 (sentgroup -> start sentencess end .)
    NUMBER          reduce using rule 25 (sentgroup -> start sentencess end .)
    false           reduce using rule 25 (sentgroup -> start sentencess end .)
    true            reduce using rule 25 (sentgroup -> start sentencess end .)
    var             reduce using rule 25 (sentgroup -> start sentencess end .)
    PLR             reduce using rule 25 (sentgroup -> start sentencess end .)
    PLL             reduce using rule 25 (sentgroup -> start sentencess end .)
    PLUS            reduce using rule 25 (sentgroup -> start sentencess end .)
    MNR             reduce using rule 25 (sentgroup -> start sentencess end .)
    MNL             reduce using rule 25 (sentgroup -> start sentencess end .)
    TMR             reduce using rule 25 (sentgroup -> start sentencess end .)
    TML             reduce using rule 25 (sentgroup -> start sentencess end .)
    TIMES           reduce using rule 25 (sentgroup -> start sentencess end .)
    DVR             reduce using rule 25 (sentgroup -> start sentencess end .)
    DVL             reduce using rule 25 (sentgroup -> start sentencess end .)
    DIVIDE          reduce using rule 25 (sentgroup -> start sentencess end .)
    PWR             reduce using rule 25 (sentgroup -> start sentencess end .)
    PWL             reduce using rule 25 (sentgroup -> start sentencess end .)
    POWER           reduce using rule 25 (sentgroup -> start sentencess end .)


state 54

    (33) sentencess -> sentencess sentence .

    end             reduce using rule 33 (sentencess -> sentencess sentence .)
    error           reduce using rule 33 (sentencess -> sentencess sentence .)
    MINUS           reduce using rule 33 (sentencess -> sentencess sentence .)
    LBRACE          reduce using rule 33 (sentencess -> sentencess sentence .)
    int             reduce using rule 33 (sentencess -> sentencess sentence .)
    bool            reduce using rule 33 (sentencess -> sentencess sentence .)
    string          reduce using rule 33 (sentencess -> sentencess sentence .)
    ID              reduce using rule 33 (sentencess -> sentencess sentence .)
    up              reduce using rule 33 (sentencess -> sentencess sentence .)
    down            reduce using rule 33 (sentencess -> sentencess sentence .)
    left            reduce using rule 33 (sentencess -> sentencess sentence .)
    right           reduce using rule 33 (sentencess -> sentencess sentence .)
    knockup         reduce using rule 33 (sentencess -> sentencess sentence .)
    knockdown       reduce using rule 33 (sentencess -> sentencess sentence .)
    knockright      reduce using rule 33 (sentencess -> sentencess sentence .)
    knockleft       reduce using rule 33 (sentencess -> sentencess sentence .)
    vision          reduce using rule 33 (sentencess -> sentencess sentence .)
    input           reduce using rule 33 (sentencess -> sentencess sentence .)
    STR             reduce using rule 33 (sentencess -> sentencess sentence .)
    NUMBER          reduce using rule 33 (sentencess -> sentencess sentence .)
    false           reduce using rule 33 (sentencess -> sentencess sentence .)
    true            reduce using rule 33 (sentencess -> sentencess sentence .)
    var             reduce using rule 33 (sentencess -> sentencess sentence .)
    PLR             reduce using rule 33 (sentencess -> sentencess sentence .)
    PLL             reduce using rule 33 (sentencess -> sentencess sentence .)
    PLUS            reduce using rule 33 (sentencess -> sentencess sentence .)
    MNR             reduce using rule 33 (sentencess -> sentencess sentence .)
    MNL             reduce using rule 33 (sentencess -> sentencess sentence .)
    TMR             reduce using rule 33 (sentencess -> sentencess sentence .)
    TML             reduce using rule 33 (sentencess -> sentencess sentence .)
    TIMES           reduce using rule 33 (sentencess -> sentencess sentence .)
    DVR             reduce using rule 33 (sentencess -> sentencess sentence .)
    DVL             reduce using rule 33 (sentencess -> sentencess sentence .)
    DIVIDE          reduce using rule 33 (sentencess -> sentencess sentence .)
    PWR             reduce using rule 33 (sentencess -> sentencess sentence .)
    PWL             reduce using rule 33 (sentencess -> sentencess sentence .)
    POWER           reduce using rule 33 (sentencess -> sentencess sentence .)


state 55

    (69) expression -> expression plus . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    COMMA           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 100
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 56

    (70) expression -> expression minus . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    COMMA           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 101
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 57

    (71) expression -> expression times . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    COMMA           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 102
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 58

    (72) expression -> expression divide . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    COMMA           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 103
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 59

    (73) expression -> expression power . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    LTR             reduce using rule 74 (expression -> .)
    LTL             reduce using rule 74 (expression -> .)
    LT              reduce using rule 74 (expression -> .)
    GTR             reduce using rule 74 (expression -> .)
    GTL             reduce using rule 74 (expression -> .)
    GT              reduce using rule 74 (expression -> .)
    DEQR            reduce using rule 74 (expression -> .)
    DEQL            reduce using rule 74 (expression -> .)
    DEQ             reduce using rule 74 (expression -> .)
    EXR             reduce using rule 74 (expression -> .)
    EXL             reduce using rule 74 (expression -> .)
    EX              reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    COMMA           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 104
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 60

    (75) plus -> PLR .

    MINUS           reduce using rule 75 (plus -> PLR .)
    STR             reduce using rule 75 (plus -> PLR .)
    NUMBER          reduce using rule 75 (plus -> PLR .)
    ID              reduce using rule 75 (plus -> PLR .)
    false           reduce using rule 75 (plus -> PLR .)
    true            reduce using rule 75 (plus -> PLR .)
    var             reduce using rule 75 (plus -> PLR .)
    PLR             reduce using rule 75 (plus -> PLR .)
    PLL             reduce using rule 75 (plus -> PLR .)
    PLUS            reduce using rule 75 (plus -> PLR .)
    MNR             reduce using rule 75 (plus -> PLR .)
    MNL             reduce using rule 75 (plus -> PLR .)
    TMR             reduce using rule 75 (plus -> PLR .)
    TML             reduce using rule 75 (plus -> PLR .)
    TIMES           reduce using rule 75 (plus -> PLR .)
    DVR             reduce using rule 75 (plus -> PLR .)
    DVL             reduce using rule 75 (plus -> PLR .)
    DIVIDE          reduce using rule 75 (plus -> PLR .)
    PWR             reduce using rule 75 (plus -> PLR .)
    PWL             reduce using rule 75 (plus -> PLR .)
    POWER           reduce using rule 75 (plus -> PLR .)
    end             reduce using rule 75 (plus -> PLR .)
    error           reduce using rule 75 (plus -> PLR .)
    LBRACE          reduce using rule 75 (plus -> PLR .)
    int             reduce using rule 75 (plus -> PLR .)
    bool            reduce using rule 75 (plus -> PLR .)
    string          reduce using rule 75 (plus -> PLR .)
    up              reduce using rule 75 (plus -> PLR .)
    down            reduce using rule 75 (plus -> PLR .)
    left            reduce using rule 75 (plus -> PLR .)
    right           reduce using rule 75 (plus -> PLR .)
    knockup         reduce using rule 75 (plus -> PLR .)
    knockdown       reduce using rule 75 (plus -> PLR .)
    knockright      reduce using rule 75 (plus -> PLR .)
    knockleft       reduce using rule 75 (plus -> PLR .)
    vision          reduce using rule 75 (plus -> PLR .)
    input           reduce using rule 75 (plus -> PLR .)
    LTR             reduce using rule 75 (plus -> PLR .)
    LTL             reduce using rule 75 (plus -> PLR .)
    LT              reduce using rule 75 (plus -> PLR .)
    GTR             reduce using rule 75 (plus -> PLR .)
    GTL             reduce using rule 75 (plus -> PLR .)
    GT              reduce using rule 75 (plus -> PLR .)
    DEQR            reduce using rule 75 (plus -> PLR .)
    DEQL            reduce using rule 75 (plus -> PLR .)
    DEQ             reduce using rule 75 (plus -> PLR .)
    EXR             reduce using rule 75 (plus -> PLR .)
    EXL             reduce using rule 75 (plus -> PLR .)
    EX              reduce using rule 75 (plus -> PLR .)
    RBRACKET        reduce using rule 75 (plus -> PLR .)
    COMMA           reduce using rule 75 (plus -> PLR .)
    RBRACE          reduce using rule 75 (plus -> PLR .)


state 61

    (76) plus -> PLL .

    MINUS           reduce using rule 76 (plus -> PLL .)
    STR             reduce using rule 76 (plus -> PLL .)
    NUMBER          reduce using rule 76 (plus -> PLL .)
    ID              reduce using rule 76 (plus -> PLL .)
    false           reduce using rule 76 (plus -> PLL .)
    true            reduce using rule 76 (plus -> PLL .)
    var             reduce using rule 76 (plus -> PLL .)
    PLR             reduce using rule 76 (plus -> PLL .)
    PLL             reduce using rule 76 (plus -> PLL .)
    PLUS            reduce using rule 76 (plus -> PLL .)
    MNR             reduce using rule 76 (plus -> PLL .)
    MNL             reduce using rule 76 (plus -> PLL .)
    TMR             reduce using rule 76 (plus -> PLL .)
    TML             reduce using rule 76 (plus -> PLL .)
    TIMES           reduce using rule 76 (plus -> PLL .)
    DVR             reduce using rule 76 (plus -> PLL .)
    DVL             reduce using rule 76 (plus -> PLL .)
    DIVIDE          reduce using rule 76 (plus -> PLL .)
    PWR             reduce using rule 76 (plus -> PLL .)
    PWL             reduce using rule 76 (plus -> PLL .)
    POWER           reduce using rule 76 (plus -> PLL .)
    end             reduce using rule 76 (plus -> PLL .)
    error           reduce using rule 76 (plus -> PLL .)
    LBRACE          reduce using rule 76 (plus -> PLL .)
    int             reduce using rule 76 (plus -> PLL .)
    bool            reduce using rule 76 (plus -> PLL .)
    string          reduce using rule 76 (plus -> PLL .)
    up              reduce using rule 76 (plus -> PLL .)
    down            reduce using rule 76 (plus -> PLL .)
    left            reduce using rule 76 (plus -> PLL .)
    right           reduce using rule 76 (plus -> PLL .)
    knockup         reduce using rule 76 (plus -> PLL .)
    knockdown       reduce using rule 76 (plus -> PLL .)
    knockright      reduce using rule 76 (plus -> PLL .)
    knockleft       reduce using rule 76 (plus -> PLL .)
    vision          reduce using rule 76 (plus -> PLL .)
    input           reduce using rule 76 (plus -> PLL .)
    LTR             reduce using rule 76 (plus -> PLL .)
    LTL             reduce using rule 76 (plus -> PLL .)
    LT              reduce using rule 76 (plus -> PLL .)
    GTR             reduce using rule 76 (plus -> PLL .)
    GTL             reduce using rule 76 (plus -> PLL .)
    GT              reduce using rule 76 (plus -> PLL .)
    DEQR            reduce using rule 76 (plus -> PLL .)
    DEQL            reduce using rule 76 (plus -> PLL .)
    DEQ             reduce using rule 76 (plus -> PLL .)
    EXR             reduce using rule 76 (plus -> PLL .)
    EXL             reduce using rule 76 (plus -> PLL .)
    EX              reduce using rule 76 (plus -> PLL .)
    RBRACKET        reduce using rule 76 (plus -> PLL .)
    COMMA           reduce using rule 76 (plus -> PLL .)
    RBRACE          reduce using rule 76 (plus -> PLL .)


state 62

    (77) plus -> PLUS .

    MINUS           reduce using rule 77 (plus -> PLUS .)
    STR             reduce using rule 77 (plus -> PLUS .)
    NUMBER          reduce using rule 77 (plus -> PLUS .)
    ID              reduce using rule 77 (plus -> PLUS .)
    false           reduce using rule 77 (plus -> PLUS .)
    true            reduce using rule 77 (plus -> PLUS .)
    var             reduce using rule 77 (plus -> PLUS .)
    PLR             reduce using rule 77 (plus -> PLUS .)
    PLL             reduce using rule 77 (plus -> PLUS .)
    PLUS            reduce using rule 77 (plus -> PLUS .)
    MNR             reduce using rule 77 (plus -> PLUS .)
    MNL             reduce using rule 77 (plus -> PLUS .)
    TMR             reduce using rule 77 (plus -> PLUS .)
    TML             reduce using rule 77 (plus -> PLUS .)
    TIMES           reduce using rule 77 (plus -> PLUS .)
    DVR             reduce using rule 77 (plus -> PLUS .)
    DVL             reduce using rule 77 (plus -> PLUS .)
    DIVIDE          reduce using rule 77 (plus -> PLUS .)
    PWR             reduce using rule 77 (plus -> PLUS .)
    PWL             reduce using rule 77 (plus -> PLUS .)
    POWER           reduce using rule 77 (plus -> PLUS .)
    end             reduce using rule 77 (plus -> PLUS .)
    error           reduce using rule 77 (plus -> PLUS .)
    LBRACE          reduce using rule 77 (plus -> PLUS .)
    int             reduce using rule 77 (plus -> PLUS .)
    bool            reduce using rule 77 (plus -> PLUS .)
    string          reduce using rule 77 (plus -> PLUS .)
    up              reduce using rule 77 (plus -> PLUS .)
    down            reduce using rule 77 (plus -> PLUS .)
    left            reduce using rule 77 (plus -> PLUS .)
    right           reduce using rule 77 (plus -> PLUS .)
    knockup         reduce using rule 77 (plus -> PLUS .)
    knockdown       reduce using rule 77 (plus -> PLUS .)
    knockright      reduce using rule 77 (plus -> PLUS .)
    knockleft       reduce using rule 77 (plus -> PLUS .)
    vision          reduce using rule 77 (plus -> PLUS .)
    input           reduce using rule 77 (plus -> PLUS .)
    LTR             reduce using rule 77 (plus -> PLUS .)
    LTL             reduce using rule 77 (plus -> PLUS .)
    LT              reduce using rule 77 (plus -> PLUS .)
    GTR             reduce using rule 77 (plus -> PLUS .)
    GTL             reduce using rule 77 (plus -> PLUS .)
    GT              reduce using rule 77 (plus -> PLUS .)
    DEQR            reduce using rule 77 (plus -> PLUS .)
    DEQL            reduce using rule 77 (plus -> PLUS .)
    DEQ             reduce using rule 77 (plus -> PLUS .)
    EXR             reduce using rule 77 (plus -> PLUS .)
    EXL             reduce using rule 77 (plus -> PLUS .)
    EX              reduce using rule 77 (plus -> PLUS .)
    RBRACKET        reduce using rule 77 (plus -> PLUS .)
    COMMA           reduce using rule 77 (plus -> PLUS .)
    RBRACE          reduce using rule 77 (plus -> PLUS .)


state 63

    (78) minus -> MNR .

    MINUS           reduce using rule 78 (minus -> MNR .)
    STR             reduce using rule 78 (minus -> MNR .)
    NUMBER          reduce using rule 78 (minus -> MNR .)
    ID              reduce using rule 78 (minus -> MNR .)
    false           reduce using rule 78 (minus -> MNR .)
    true            reduce using rule 78 (minus -> MNR .)
    var             reduce using rule 78 (minus -> MNR .)
    PLR             reduce using rule 78 (minus -> MNR .)
    PLL             reduce using rule 78 (minus -> MNR .)
    PLUS            reduce using rule 78 (minus -> MNR .)
    MNR             reduce using rule 78 (minus -> MNR .)
    MNL             reduce using rule 78 (minus -> MNR .)
    TMR             reduce using rule 78 (minus -> MNR .)
    TML             reduce using rule 78 (minus -> MNR .)
    TIMES           reduce using rule 78 (minus -> MNR .)
    DVR             reduce using rule 78 (minus -> MNR .)
    DVL             reduce using rule 78 (minus -> MNR .)
    DIVIDE          reduce using rule 78 (minus -> MNR .)
    PWR             reduce using rule 78 (minus -> MNR .)
    PWL             reduce using rule 78 (minus -> MNR .)
    POWER           reduce using rule 78 (minus -> MNR .)
    end             reduce using rule 78 (minus -> MNR .)
    error           reduce using rule 78 (minus -> MNR .)
    LBRACE          reduce using rule 78 (minus -> MNR .)
    int             reduce using rule 78 (minus -> MNR .)
    bool            reduce using rule 78 (minus -> MNR .)
    string          reduce using rule 78 (minus -> MNR .)
    up              reduce using rule 78 (minus -> MNR .)
    down            reduce using rule 78 (minus -> MNR .)
    left            reduce using rule 78 (minus -> MNR .)
    right           reduce using rule 78 (minus -> MNR .)
    knockup         reduce using rule 78 (minus -> MNR .)
    knockdown       reduce using rule 78 (minus -> MNR .)
    knockright      reduce using rule 78 (minus -> MNR .)
    knockleft       reduce using rule 78 (minus -> MNR .)
    vision          reduce using rule 78 (minus -> MNR .)
    input           reduce using rule 78 (minus -> MNR .)
    LTR             reduce using rule 78 (minus -> MNR .)
    LTL             reduce using rule 78 (minus -> MNR .)
    LT              reduce using rule 78 (minus -> MNR .)
    GTR             reduce using rule 78 (minus -> MNR .)
    GTL             reduce using rule 78 (minus -> MNR .)
    GT              reduce using rule 78 (minus -> MNR .)
    DEQR            reduce using rule 78 (minus -> MNR .)
    DEQL            reduce using rule 78 (minus -> MNR .)
    DEQ             reduce using rule 78 (minus -> MNR .)
    EXR             reduce using rule 78 (minus -> MNR .)
    EXL             reduce using rule 78 (minus -> MNR .)
    EX              reduce using rule 78 (minus -> MNR .)
    RBRACKET        reduce using rule 78 (minus -> MNR .)
    COMMA           reduce using rule 78 (minus -> MNR .)
    RBRACE          reduce using rule 78 (minus -> MNR .)


state 64

    (79) minus -> MNL .

    MINUS           reduce using rule 79 (minus -> MNL .)
    STR             reduce using rule 79 (minus -> MNL .)
    NUMBER          reduce using rule 79 (minus -> MNL .)
    ID              reduce using rule 79 (minus -> MNL .)
    false           reduce using rule 79 (minus -> MNL .)
    true            reduce using rule 79 (minus -> MNL .)
    var             reduce using rule 79 (minus -> MNL .)
    PLR             reduce using rule 79 (minus -> MNL .)
    PLL             reduce using rule 79 (minus -> MNL .)
    PLUS            reduce using rule 79 (minus -> MNL .)
    MNR             reduce using rule 79 (minus -> MNL .)
    MNL             reduce using rule 79 (minus -> MNL .)
    TMR             reduce using rule 79 (minus -> MNL .)
    TML             reduce using rule 79 (minus -> MNL .)
    TIMES           reduce using rule 79 (minus -> MNL .)
    DVR             reduce using rule 79 (minus -> MNL .)
    DVL             reduce using rule 79 (minus -> MNL .)
    DIVIDE          reduce using rule 79 (minus -> MNL .)
    PWR             reduce using rule 79 (minus -> MNL .)
    PWL             reduce using rule 79 (minus -> MNL .)
    POWER           reduce using rule 79 (minus -> MNL .)
    end             reduce using rule 79 (minus -> MNL .)
    error           reduce using rule 79 (minus -> MNL .)
    LBRACE          reduce using rule 79 (minus -> MNL .)
    int             reduce using rule 79 (minus -> MNL .)
    bool            reduce using rule 79 (minus -> MNL .)
    string          reduce using rule 79 (minus -> MNL .)
    up              reduce using rule 79 (minus -> MNL .)
    down            reduce using rule 79 (minus -> MNL .)
    left            reduce using rule 79 (minus -> MNL .)
    right           reduce using rule 79 (minus -> MNL .)
    knockup         reduce using rule 79 (minus -> MNL .)
    knockdown       reduce using rule 79 (minus -> MNL .)
    knockright      reduce using rule 79 (minus -> MNL .)
    knockleft       reduce using rule 79 (minus -> MNL .)
    vision          reduce using rule 79 (minus -> MNL .)
    input           reduce using rule 79 (minus -> MNL .)
    LTR             reduce using rule 79 (minus -> MNL .)
    LTL             reduce using rule 79 (minus -> MNL .)
    LT              reduce using rule 79 (minus -> MNL .)
    GTR             reduce using rule 79 (minus -> MNL .)
    GTL             reduce using rule 79 (minus -> MNL .)
    GT              reduce using rule 79 (minus -> MNL .)
    DEQR            reduce using rule 79 (minus -> MNL .)
    DEQL            reduce using rule 79 (minus -> MNL .)
    DEQ             reduce using rule 79 (minus -> MNL .)
    EXR             reduce using rule 79 (minus -> MNL .)
    EXL             reduce using rule 79 (minus -> MNL .)
    EX              reduce using rule 79 (minus -> MNL .)
    RBRACKET        reduce using rule 79 (minus -> MNL .)
    COMMA           reduce using rule 79 (minus -> MNL .)
    RBRACE          reduce using rule 79 (minus -> MNL .)


state 65

    (80) minus -> MINUS .

    MINUS           reduce using rule 80 (minus -> MINUS .)
    STR             reduce using rule 80 (minus -> MINUS .)
    NUMBER          reduce using rule 80 (minus -> MINUS .)
    ID              reduce using rule 80 (minus -> MINUS .)
    false           reduce using rule 80 (minus -> MINUS .)
    true            reduce using rule 80 (minus -> MINUS .)
    var             reduce using rule 80 (minus -> MINUS .)
    PLR             reduce using rule 80 (minus -> MINUS .)
    PLL             reduce using rule 80 (minus -> MINUS .)
    PLUS            reduce using rule 80 (minus -> MINUS .)
    MNR             reduce using rule 80 (minus -> MINUS .)
    MNL             reduce using rule 80 (minus -> MINUS .)
    TMR             reduce using rule 80 (minus -> MINUS .)
    TML             reduce using rule 80 (minus -> MINUS .)
    TIMES           reduce using rule 80 (minus -> MINUS .)
    DVR             reduce using rule 80 (minus -> MINUS .)
    DVL             reduce using rule 80 (minus -> MINUS .)
    DIVIDE          reduce using rule 80 (minus -> MINUS .)
    PWR             reduce using rule 80 (minus -> MINUS .)
    PWL             reduce using rule 80 (minus -> MINUS .)
    POWER           reduce using rule 80 (minus -> MINUS .)
    end             reduce using rule 80 (minus -> MINUS .)
    error           reduce using rule 80 (minus -> MINUS .)
    LBRACE          reduce using rule 80 (minus -> MINUS .)
    int             reduce using rule 80 (minus -> MINUS .)
    bool            reduce using rule 80 (minus -> MINUS .)
    string          reduce using rule 80 (minus -> MINUS .)
    up              reduce using rule 80 (minus -> MINUS .)
    down            reduce using rule 80 (minus -> MINUS .)
    left            reduce using rule 80 (minus -> MINUS .)
    right           reduce using rule 80 (minus -> MINUS .)
    knockup         reduce using rule 80 (minus -> MINUS .)
    knockdown       reduce using rule 80 (minus -> MINUS .)
    knockright      reduce using rule 80 (minus -> MINUS .)
    knockleft       reduce using rule 80 (minus -> MINUS .)
    vision          reduce using rule 80 (minus -> MINUS .)
    input           reduce using rule 80 (minus -> MINUS .)
    LTR             reduce using rule 80 (minus -> MINUS .)
    LTL             reduce using rule 80 (minus -> MINUS .)
    LT              reduce using rule 80 (minus -> MINUS .)
    GTR             reduce using rule 80 (minus -> MINUS .)
    GTL             reduce using rule 80 (minus -> MINUS .)
    GT              reduce using rule 80 (minus -> MINUS .)
    DEQR            reduce using rule 80 (minus -> MINUS .)
    DEQL            reduce using rule 80 (minus -> MINUS .)
    DEQ             reduce using rule 80 (minus -> MINUS .)
    EXR             reduce using rule 80 (minus -> MINUS .)
    EXL             reduce using rule 80 (minus -> MINUS .)
    EX              reduce using rule 80 (minus -> MINUS .)
    RBRACKET        reduce using rule 80 (minus -> MINUS .)
    COMMA           reduce using rule 80 (minus -> MINUS .)
    RBRACE          reduce using rule 80 (minus -> MINUS .)


state 66

    (81) times -> TMR .

    MINUS           reduce using rule 81 (times -> TMR .)
    STR             reduce using rule 81 (times -> TMR .)
    NUMBER          reduce using rule 81 (times -> TMR .)
    ID              reduce using rule 81 (times -> TMR .)
    false           reduce using rule 81 (times -> TMR .)
    true            reduce using rule 81 (times -> TMR .)
    var             reduce using rule 81 (times -> TMR .)
    PLR             reduce using rule 81 (times -> TMR .)
    PLL             reduce using rule 81 (times -> TMR .)
    PLUS            reduce using rule 81 (times -> TMR .)
    MNR             reduce using rule 81 (times -> TMR .)
    MNL             reduce using rule 81 (times -> TMR .)
    TMR             reduce using rule 81 (times -> TMR .)
    TML             reduce using rule 81 (times -> TMR .)
    TIMES           reduce using rule 81 (times -> TMR .)
    DVR             reduce using rule 81 (times -> TMR .)
    DVL             reduce using rule 81 (times -> TMR .)
    DIVIDE          reduce using rule 81 (times -> TMR .)
    PWR             reduce using rule 81 (times -> TMR .)
    PWL             reduce using rule 81 (times -> TMR .)
    POWER           reduce using rule 81 (times -> TMR .)
    end             reduce using rule 81 (times -> TMR .)
    error           reduce using rule 81 (times -> TMR .)
    LBRACE          reduce using rule 81 (times -> TMR .)
    int             reduce using rule 81 (times -> TMR .)
    bool            reduce using rule 81 (times -> TMR .)
    string          reduce using rule 81 (times -> TMR .)
    up              reduce using rule 81 (times -> TMR .)
    down            reduce using rule 81 (times -> TMR .)
    left            reduce using rule 81 (times -> TMR .)
    right           reduce using rule 81 (times -> TMR .)
    knockup         reduce using rule 81 (times -> TMR .)
    knockdown       reduce using rule 81 (times -> TMR .)
    knockright      reduce using rule 81 (times -> TMR .)
    knockleft       reduce using rule 81 (times -> TMR .)
    vision          reduce using rule 81 (times -> TMR .)
    input           reduce using rule 81 (times -> TMR .)
    LTR             reduce using rule 81 (times -> TMR .)
    LTL             reduce using rule 81 (times -> TMR .)
    LT              reduce using rule 81 (times -> TMR .)
    GTR             reduce using rule 81 (times -> TMR .)
    GTL             reduce using rule 81 (times -> TMR .)
    GT              reduce using rule 81 (times -> TMR .)
    DEQR            reduce using rule 81 (times -> TMR .)
    DEQL            reduce using rule 81 (times -> TMR .)
    DEQ             reduce using rule 81 (times -> TMR .)
    EXR             reduce using rule 81 (times -> TMR .)
    EXL             reduce using rule 81 (times -> TMR .)
    EX              reduce using rule 81 (times -> TMR .)
    RBRACKET        reduce using rule 81 (times -> TMR .)
    COMMA           reduce using rule 81 (times -> TMR .)
    RBRACE          reduce using rule 81 (times -> TMR .)


state 67

    (82) times -> TML .

    MINUS           reduce using rule 82 (times -> TML .)
    STR             reduce using rule 82 (times -> TML .)
    NUMBER          reduce using rule 82 (times -> TML .)
    ID              reduce using rule 82 (times -> TML .)
    false           reduce using rule 82 (times -> TML .)
    true            reduce using rule 82 (times -> TML .)
    var             reduce using rule 82 (times -> TML .)
    PLR             reduce using rule 82 (times -> TML .)
    PLL             reduce using rule 82 (times -> TML .)
    PLUS            reduce using rule 82 (times -> TML .)
    MNR             reduce using rule 82 (times -> TML .)
    MNL             reduce using rule 82 (times -> TML .)
    TMR             reduce using rule 82 (times -> TML .)
    TML             reduce using rule 82 (times -> TML .)
    TIMES           reduce using rule 82 (times -> TML .)
    DVR             reduce using rule 82 (times -> TML .)
    DVL             reduce using rule 82 (times -> TML .)
    DIVIDE          reduce using rule 82 (times -> TML .)
    PWR             reduce using rule 82 (times -> TML .)
    PWL             reduce using rule 82 (times -> TML .)
    POWER           reduce using rule 82 (times -> TML .)
    end             reduce using rule 82 (times -> TML .)
    error           reduce using rule 82 (times -> TML .)
    LBRACE          reduce using rule 82 (times -> TML .)
    int             reduce using rule 82 (times -> TML .)
    bool            reduce using rule 82 (times -> TML .)
    string          reduce using rule 82 (times -> TML .)
    up              reduce using rule 82 (times -> TML .)
    down            reduce using rule 82 (times -> TML .)
    left            reduce using rule 82 (times -> TML .)
    right           reduce using rule 82 (times -> TML .)
    knockup         reduce using rule 82 (times -> TML .)
    knockdown       reduce using rule 82 (times -> TML .)
    knockright      reduce using rule 82 (times -> TML .)
    knockleft       reduce using rule 82 (times -> TML .)
    vision          reduce using rule 82 (times -> TML .)
    input           reduce using rule 82 (times -> TML .)
    LTR             reduce using rule 82 (times -> TML .)
    LTL             reduce using rule 82 (times -> TML .)
    LT              reduce using rule 82 (times -> TML .)
    GTR             reduce using rule 82 (times -> TML .)
    GTL             reduce using rule 82 (times -> TML .)
    GT              reduce using rule 82 (times -> TML .)
    DEQR            reduce using rule 82 (times -> TML .)
    DEQL            reduce using rule 82 (times -> TML .)
    DEQ             reduce using rule 82 (times -> TML .)
    EXR             reduce using rule 82 (times -> TML .)
    EXL             reduce using rule 82 (times -> TML .)
    EX              reduce using rule 82 (times -> TML .)
    RBRACKET        reduce using rule 82 (times -> TML .)
    COMMA           reduce using rule 82 (times -> TML .)
    RBRACE          reduce using rule 82 (times -> TML .)


state 68

    (83) times -> TIMES .

    MINUS           reduce using rule 83 (times -> TIMES .)
    STR             reduce using rule 83 (times -> TIMES .)
    NUMBER          reduce using rule 83 (times -> TIMES .)
    ID              reduce using rule 83 (times -> TIMES .)
    false           reduce using rule 83 (times -> TIMES .)
    true            reduce using rule 83 (times -> TIMES .)
    var             reduce using rule 83 (times -> TIMES .)
    PLR             reduce using rule 83 (times -> TIMES .)
    PLL             reduce using rule 83 (times -> TIMES .)
    PLUS            reduce using rule 83 (times -> TIMES .)
    MNR             reduce using rule 83 (times -> TIMES .)
    MNL             reduce using rule 83 (times -> TIMES .)
    TMR             reduce using rule 83 (times -> TIMES .)
    TML             reduce using rule 83 (times -> TIMES .)
    TIMES           reduce using rule 83 (times -> TIMES .)
    DVR             reduce using rule 83 (times -> TIMES .)
    DVL             reduce using rule 83 (times -> TIMES .)
    DIVIDE          reduce using rule 83 (times -> TIMES .)
    PWR             reduce using rule 83 (times -> TIMES .)
    PWL             reduce using rule 83 (times -> TIMES .)
    POWER           reduce using rule 83 (times -> TIMES .)
    end             reduce using rule 83 (times -> TIMES .)
    error           reduce using rule 83 (times -> TIMES .)
    LBRACE          reduce using rule 83 (times -> TIMES .)
    int             reduce using rule 83 (times -> TIMES .)
    bool            reduce using rule 83 (times -> TIMES .)
    string          reduce using rule 83 (times -> TIMES .)
    up              reduce using rule 83 (times -> TIMES .)
    down            reduce using rule 83 (times -> TIMES .)
    left            reduce using rule 83 (times -> TIMES .)
    right           reduce using rule 83 (times -> TIMES .)
    knockup         reduce using rule 83 (times -> TIMES .)
    knockdown       reduce using rule 83 (times -> TIMES .)
    knockright      reduce using rule 83 (times -> TIMES .)
    knockleft       reduce using rule 83 (times -> TIMES .)
    vision          reduce using rule 83 (times -> TIMES .)
    input           reduce using rule 83 (times -> TIMES .)
    LTR             reduce using rule 83 (times -> TIMES .)
    LTL             reduce using rule 83 (times -> TIMES .)
    LT              reduce using rule 83 (times -> TIMES .)
    GTR             reduce using rule 83 (times -> TIMES .)
    GTL             reduce using rule 83 (times -> TIMES .)
    GT              reduce using rule 83 (times -> TIMES .)
    DEQR            reduce using rule 83 (times -> TIMES .)
    DEQL            reduce using rule 83 (times -> TIMES .)
    DEQ             reduce using rule 83 (times -> TIMES .)
    EXR             reduce using rule 83 (times -> TIMES .)
    EXL             reduce using rule 83 (times -> TIMES .)
    EX              reduce using rule 83 (times -> TIMES .)
    RBRACKET        reduce using rule 83 (times -> TIMES .)
    COMMA           reduce using rule 83 (times -> TIMES .)
    RBRACE          reduce using rule 83 (times -> TIMES .)


state 69

    (84) divide -> DVR .

    MINUS           reduce using rule 84 (divide -> DVR .)
    STR             reduce using rule 84 (divide -> DVR .)
    NUMBER          reduce using rule 84 (divide -> DVR .)
    ID              reduce using rule 84 (divide -> DVR .)
    false           reduce using rule 84 (divide -> DVR .)
    true            reduce using rule 84 (divide -> DVR .)
    var             reduce using rule 84 (divide -> DVR .)
    PLR             reduce using rule 84 (divide -> DVR .)
    PLL             reduce using rule 84 (divide -> DVR .)
    PLUS            reduce using rule 84 (divide -> DVR .)
    MNR             reduce using rule 84 (divide -> DVR .)
    MNL             reduce using rule 84 (divide -> DVR .)
    TMR             reduce using rule 84 (divide -> DVR .)
    TML             reduce using rule 84 (divide -> DVR .)
    TIMES           reduce using rule 84 (divide -> DVR .)
    DVR             reduce using rule 84 (divide -> DVR .)
    DVL             reduce using rule 84 (divide -> DVR .)
    DIVIDE          reduce using rule 84 (divide -> DVR .)
    PWR             reduce using rule 84 (divide -> DVR .)
    PWL             reduce using rule 84 (divide -> DVR .)
    POWER           reduce using rule 84 (divide -> DVR .)
    end             reduce using rule 84 (divide -> DVR .)
    error           reduce using rule 84 (divide -> DVR .)
    LBRACE          reduce using rule 84 (divide -> DVR .)
    int             reduce using rule 84 (divide -> DVR .)
    bool            reduce using rule 84 (divide -> DVR .)
    string          reduce using rule 84 (divide -> DVR .)
    up              reduce using rule 84 (divide -> DVR .)
    down            reduce using rule 84 (divide -> DVR .)
    left            reduce using rule 84 (divide -> DVR .)
    right           reduce using rule 84 (divide -> DVR .)
    knockup         reduce using rule 84 (divide -> DVR .)
    knockdown       reduce using rule 84 (divide -> DVR .)
    knockright      reduce using rule 84 (divide -> DVR .)
    knockleft       reduce using rule 84 (divide -> DVR .)
    vision          reduce using rule 84 (divide -> DVR .)
    input           reduce using rule 84 (divide -> DVR .)
    LTR             reduce using rule 84 (divide -> DVR .)
    LTL             reduce using rule 84 (divide -> DVR .)
    LT              reduce using rule 84 (divide -> DVR .)
    GTR             reduce using rule 84 (divide -> DVR .)
    GTL             reduce using rule 84 (divide -> DVR .)
    GT              reduce using rule 84 (divide -> DVR .)
    DEQR            reduce using rule 84 (divide -> DVR .)
    DEQL            reduce using rule 84 (divide -> DVR .)
    DEQ             reduce using rule 84 (divide -> DVR .)
    EXR             reduce using rule 84 (divide -> DVR .)
    EXL             reduce using rule 84 (divide -> DVR .)
    EX              reduce using rule 84 (divide -> DVR .)
    RBRACKET        reduce using rule 84 (divide -> DVR .)
    COMMA           reduce using rule 84 (divide -> DVR .)
    RBRACE          reduce using rule 84 (divide -> DVR .)


state 70

    (85) divide -> DVL .

    MINUS           reduce using rule 85 (divide -> DVL .)
    STR             reduce using rule 85 (divide -> DVL .)
    NUMBER          reduce using rule 85 (divide -> DVL .)
    ID              reduce using rule 85 (divide -> DVL .)
    false           reduce using rule 85 (divide -> DVL .)
    true            reduce using rule 85 (divide -> DVL .)
    var             reduce using rule 85 (divide -> DVL .)
    PLR             reduce using rule 85 (divide -> DVL .)
    PLL             reduce using rule 85 (divide -> DVL .)
    PLUS            reduce using rule 85 (divide -> DVL .)
    MNR             reduce using rule 85 (divide -> DVL .)
    MNL             reduce using rule 85 (divide -> DVL .)
    TMR             reduce using rule 85 (divide -> DVL .)
    TML             reduce using rule 85 (divide -> DVL .)
    TIMES           reduce using rule 85 (divide -> DVL .)
    DVR             reduce using rule 85 (divide -> DVL .)
    DVL             reduce using rule 85 (divide -> DVL .)
    DIVIDE          reduce using rule 85 (divide -> DVL .)
    PWR             reduce using rule 85 (divide -> DVL .)
    PWL             reduce using rule 85 (divide -> DVL .)
    POWER           reduce using rule 85 (divide -> DVL .)
    end             reduce using rule 85 (divide -> DVL .)
    error           reduce using rule 85 (divide -> DVL .)
    LBRACE          reduce using rule 85 (divide -> DVL .)
    int             reduce using rule 85 (divide -> DVL .)
    bool            reduce using rule 85 (divide -> DVL .)
    string          reduce using rule 85 (divide -> DVL .)
    up              reduce using rule 85 (divide -> DVL .)
    down            reduce using rule 85 (divide -> DVL .)
    left            reduce using rule 85 (divide -> DVL .)
    right           reduce using rule 85 (divide -> DVL .)
    knockup         reduce using rule 85 (divide -> DVL .)
    knockdown       reduce using rule 85 (divide -> DVL .)
    knockright      reduce using rule 85 (divide -> DVL .)
    knockleft       reduce using rule 85 (divide -> DVL .)
    vision          reduce using rule 85 (divide -> DVL .)
    input           reduce using rule 85 (divide -> DVL .)
    LTR             reduce using rule 85 (divide -> DVL .)
    LTL             reduce using rule 85 (divide -> DVL .)
    LT              reduce using rule 85 (divide -> DVL .)
    GTR             reduce using rule 85 (divide -> DVL .)
    GTL             reduce using rule 85 (divide -> DVL .)
    GT              reduce using rule 85 (divide -> DVL .)
    DEQR            reduce using rule 85 (divide -> DVL .)
    DEQL            reduce using rule 85 (divide -> DVL .)
    DEQ             reduce using rule 85 (divide -> DVL .)
    EXR             reduce using rule 85 (divide -> DVL .)
    EXL             reduce using rule 85 (divide -> DVL .)
    EX              reduce using rule 85 (divide -> DVL .)
    RBRACKET        reduce using rule 85 (divide -> DVL .)
    COMMA           reduce using rule 85 (divide -> DVL .)
    RBRACE          reduce using rule 85 (divide -> DVL .)


state 71

    (86) divide -> DIVIDE .

    MINUS           reduce using rule 86 (divide -> DIVIDE .)
    STR             reduce using rule 86 (divide -> DIVIDE .)
    NUMBER          reduce using rule 86 (divide -> DIVIDE .)
    ID              reduce using rule 86 (divide -> DIVIDE .)
    false           reduce using rule 86 (divide -> DIVIDE .)
    true            reduce using rule 86 (divide -> DIVIDE .)
    var             reduce using rule 86 (divide -> DIVIDE .)
    PLR             reduce using rule 86 (divide -> DIVIDE .)
    PLL             reduce using rule 86 (divide -> DIVIDE .)
    PLUS            reduce using rule 86 (divide -> DIVIDE .)
    MNR             reduce using rule 86 (divide -> DIVIDE .)
    MNL             reduce using rule 86 (divide -> DIVIDE .)
    TMR             reduce using rule 86 (divide -> DIVIDE .)
    TML             reduce using rule 86 (divide -> DIVIDE .)
    TIMES           reduce using rule 86 (divide -> DIVIDE .)
    DVR             reduce using rule 86 (divide -> DIVIDE .)
    DVL             reduce using rule 86 (divide -> DIVIDE .)
    DIVIDE          reduce using rule 86 (divide -> DIVIDE .)
    PWR             reduce using rule 86 (divide -> DIVIDE .)
    PWL             reduce using rule 86 (divide -> DIVIDE .)
    POWER           reduce using rule 86 (divide -> DIVIDE .)
    end             reduce using rule 86 (divide -> DIVIDE .)
    error           reduce using rule 86 (divide -> DIVIDE .)
    LBRACE          reduce using rule 86 (divide -> DIVIDE .)
    int             reduce using rule 86 (divide -> DIVIDE .)
    bool            reduce using rule 86 (divide -> DIVIDE .)
    string          reduce using rule 86 (divide -> DIVIDE .)
    up              reduce using rule 86 (divide -> DIVIDE .)
    down            reduce using rule 86 (divide -> DIVIDE .)
    left            reduce using rule 86 (divide -> DIVIDE .)
    right           reduce using rule 86 (divide -> DIVIDE .)
    knockup         reduce using rule 86 (divide -> DIVIDE .)
    knockdown       reduce using rule 86 (divide -> DIVIDE .)
    knockright      reduce using rule 86 (divide -> DIVIDE .)
    knockleft       reduce using rule 86 (divide -> DIVIDE .)
    vision          reduce using rule 86 (divide -> DIVIDE .)
    input           reduce using rule 86 (divide -> DIVIDE .)
    LTR             reduce using rule 86 (divide -> DIVIDE .)
    LTL             reduce using rule 86 (divide -> DIVIDE .)
    LT              reduce using rule 86 (divide -> DIVIDE .)
    GTR             reduce using rule 86 (divide -> DIVIDE .)
    GTL             reduce using rule 86 (divide -> DIVIDE .)
    GT              reduce using rule 86 (divide -> DIVIDE .)
    DEQR            reduce using rule 86 (divide -> DIVIDE .)
    DEQL            reduce using rule 86 (divide -> DIVIDE .)
    DEQ             reduce using rule 86 (divide -> DIVIDE .)
    EXR             reduce using rule 86 (divide -> DIVIDE .)
    EXL             reduce using rule 86 (divide -> DIVIDE .)
    EX              reduce using rule 86 (divide -> DIVIDE .)
    RBRACKET        reduce using rule 86 (divide -> DIVIDE .)
    COMMA           reduce using rule 86 (divide -> DIVIDE .)
    RBRACE          reduce using rule 86 (divide -> DIVIDE .)


state 72

    (87) power -> PWR .

    MINUS           reduce using rule 87 (power -> PWR .)
    STR             reduce using rule 87 (power -> PWR .)
    NUMBER          reduce using rule 87 (power -> PWR .)
    ID              reduce using rule 87 (power -> PWR .)
    false           reduce using rule 87 (power -> PWR .)
    true            reduce using rule 87 (power -> PWR .)
    var             reduce using rule 87 (power -> PWR .)
    PLR             reduce using rule 87 (power -> PWR .)
    PLL             reduce using rule 87 (power -> PWR .)
    PLUS            reduce using rule 87 (power -> PWR .)
    MNR             reduce using rule 87 (power -> PWR .)
    MNL             reduce using rule 87 (power -> PWR .)
    TMR             reduce using rule 87 (power -> PWR .)
    TML             reduce using rule 87 (power -> PWR .)
    TIMES           reduce using rule 87 (power -> PWR .)
    DVR             reduce using rule 87 (power -> PWR .)
    DVL             reduce using rule 87 (power -> PWR .)
    DIVIDE          reduce using rule 87 (power -> PWR .)
    PWR             reduce using rule 87 (power -> PWR .)
    PWL             reduce using rule 87 (power -> PWR .)
    POWER           reduce using rule 87 (power -> PWR .)
    end             reduce using rule 87 (power -> PWR .)
    error           reduce using rule 87 (power -> PWR .)
    LBRACE          reduce using rule 87 (power -> PWR .)
    int             reduce using rule 87 (power -> PWR .)
    bool            reduce using rule 87 (power -> PWR .)
    string          reduce using rule 87 (power -> PWR .)
    up              reduce using rule 87 (power -> PWR .)
    down            reduce using rule 87 (power -> PWR .)
    left            reduce using rule 87 (power -> PWR .)
    right           reduce using rule 87 (power -> PWR .)
    knockup         reduce using rule 87 (power -> PWR .)
    knockdown       reduce using rule 87 (power -> PWR .)
    knockright      reduce using rule 87 (power -> PWR .)
    knockleft       reduce using rule 87 (power -> PWR .)
    vision          reduce using rule 87 (power -> PWR .)
    input           reduce using rule 87 (power -> PWR .)
    LTR             reduce using rule 87 (power -> PWR .)
    LTL             reduce using rule 87 (power -> PWR .)
    LT              reduce using rule 87 (power -> PWR .)
    GTR             reduce using rule 87 (power -> PWR .)
    GTL             reduce using rule 87 (power -> PWR .)
    GT              reduce using rule 87 (power -> PWR .)
    DEQR            reduce using rule 87 (power -> PWR .)
    DEQL            reduce using rule 87 (power -> PWR .)
    DEQ             reduce using rule 87 (power -> PWR .)
    EXR             reduce using rule 87 (power -> PWR .)
    EXL             reduce using rule 87 (power -> PWR .)
    EX              reduce using rule 87 (power -> PWR .)
    RBRACKET        reduce using rule 87 (power -> PWR .)
    COMMA           reduce using rule 87 (power -> PWR .)
    RBRACE          reduce using rule 87 (power -> PWR .)


state 73

    (88) power -> PWL .

    MINUS           reduce using rule 88 (power -> PWL .)
    STR             reduce using rule 88 (power -> PWL .)
    NUMBER          reduce using rule 88 (power -> PWL .)
    ID              reduce using rule 88 (power -> PWL .)
    false           reduce using rule 88 (power -> PWL .)
    true            reduce using rule 88 (power -> PWL .)
    var             reduce using rule 88 (power -> PWL .)
    PLR             reduce using rule 88 (power -> PWL .)
    PLL             reduce using rule 88 (power -> PWL .)
    PLUS            reduce using rule 88 (power -> PWL .)
    MNR             reduce using rule 88 (power -> PWL .)
    MNL             reduce using rule 88 (power -> PWL .)
    TMR             reduce using rule 88 (power -> PWL .)
    TML             reduce using rule 88 (power -> PWL .)
    TIMES           reduce using rule 88 (power -> PWL .)
    DVR             reduce using rule 88 (power -> PWL .)
    DVL             reduce using rule 88 (power -> PWL .)
    DIVIDE          reduce using rule 88 (power -> PWL .)
    PWR             reduce using rule 88 (power -> PWL .)
    PWL             reduce using rule 88 (power -> PWL .)
    POWER           reduce using rule 88 (power -> PWL .)
    end             reduce using rule 88 (power -> PWL .)
    error           reduce using rule 88 (power -> PWL .)
    LBRACE          reduce using rule 88 (power -> PWL .)
    int             reduce using rule 88 (power -> PWL .)
    bool            reduce using rule 88 (power -> PWL .)
    string          reduce using rule 88 (power -> PWL .)
    up              reduce using rule 88 (power -> PWL .)
    down            reduce using rule 88 (power -> PWL .)
    left            reduce using rule 88 (power -> PWL .)
    right           reduce using rule 88 (power -> PWL .)
    knockup         reduce using rule 88 (power -> PWL .)
    knockdown       reduce using rule 88 (power -> PWL .)
    knockright      reduce using rule 88 (power -> PWL .)
    knockleft       reduce using rule 88 (power -> PWL .)
    vision          reduce using rule 88 (power -> PWL .)
    input           reduce using rule 88 (power -> PWL .)
    LTR             reduce using rule 88 (power -> PWL .)
    LTL             reduce using rule 88 (power -> PWL .)
    LT              reduce using rule 88 (power -> PWL .)
    GTR             reduce using rule 88 (power -> PWL .)
    GTL             reduce using rule 88 (power -> PWL .)
    GT              reduce using rule 88 (power -> PWL .)
    DEQR            reduce using rule 88 (power -> PWL .)
    DEQL            reduce using rule 88 (power -> PWL .)
    DEQ             reduce using rule 88 (power -> PWL .)
    EXR             reduce using rule 88 (power -> PWL .)
    EXL             reduce using rule 88 (power -> PWL .)
    EX              reduce using rule 88 (power -> PWL .)
    RBRACKET        reduce using rule 88 (power -> PWL .)
    COMMA           reduce using rule 88 (power -> PWL .)
    RBRACE          reduce using rule 88 (power -> PWL .)


state 74

    (89) power -> POWER .

    MINUS           reduce using rule 89 (power -> POWER .)
    STR             reduce using rule 89 (power -> POWER .)
    NUMBER          reduce using rule 89 (power -> POWER .)
    ID              reduce using rule 89 (power -> POWER .)
    false           reduce using rule 89 (power -> POWER .)
    true            reduce using rule 89 (power -> POWER .)
    var             reduce using rule 89 (power -> POWER .)
    PLR             reduce using rule 89 (power -> POWER .)
    PLL             reduce using rule 89 (power -> POWER .)
    PLUS            reduce using rule 89 (power -> POWER .)
    MNR             reduce using rule 89 (power -> POWER .)
    MNL             reduce using rule 89 (power -> POWER .)
    TMR             reduce using rule 89 (power -> POWER .)
    TML             reduce using rule 89 (power -> POWER .)
    TIMES           reduce using rule 89 (power -> POWER .)
    DVR             reduce using rule 89 (power -> POWER .)
    DVL             reduce using rule 89 (power -> POWER .)
    DIVIDE          reduce using rule 89 (power -> POWER .)
    PWR             reduce using rule 89 (power -> POWER .)
    PWL             reduce using rule 89 (power -> POWER .)
    POWER           reduce using rule 89 (power -> POWER .)
    end             reduce using rule 89 (power -> POWER .)
    error           reduce using rule 89 (power -> POWER .)
    LBRACE          reduce using rule 89 (power -> POWER .)
    int             reduce using rule 89 (power -> POWER .)
    bool            reduce using rule 89 (power -> POWER .)
    string          reduce using rule 89 (power -> POWER .)
    up              reduce using rule 89 (power -> POWER .)
    down            reduce using rule 89 (power -> POWER .)
    left            reduce using rule 89 (power -> POWER .)
    right           reduce using rule 89 (power -> POWER .)
    knockup         reduce using rule 89 (power -> POWER .)
    knockdown       reduce using rule 89 (power -> POWER .)
    knockright      reduce using rule 89 (power -> POWER .)
    knockleft       reduce using rule 89 (power -> POWER .)
    vision          reduce using rule 89 (power -> POWER .)
    input           reduce using rule 89 (power -> POWER .)
    LTR             reduce using rule 89 (power -> POWER .)
    LTL             reduce using rule 89 (power -> POWER .)
    LT              reduce using rule 89 (power -> POWER .)
    GTR             reduce using rule 89 (power -> POWER .)
    GTL             reduce using rule 89 (power -> POWER .)
    GT              reduce using rule 89 (power -> POWER .)
    DEQR            reduce using rule 89 (power -> POWER .)
    DEQL            reduce using rule 89 (power -> POWER .)
    DEQ             reduce using rule 89 (power -> POWER .)
    EXR             reduce using rule 89 (power -> POWER .)
    EXL             reduce using rule 89 (power -> POWER .)
    EX              reduce using rule 89 (power -> POWER .)
    RBRACKET        reduce using rule 89 (power -> POWER .)
    COMMA           reduce using rule 89 (power -> POWER .)
    RBRACE          reduce using rule 89 (power -> POWER .)


state 75

    (97) cfunc -> ids LBRACKET . exprgroup RBRACKET
    (98) cfunc -> ids LBRACKET . ids RBRACKET
    (99) cfunc -> ids LBRACKET . RBRACKET
    (106) assignment -> ids LBRACKET . expression RBRACKET EQ expression
    (107) assignment -> ids LBRACKET . ids RBRACKET EQ expression
    (100) exprgroup -> . expression COMMA exprgroup
    (101) exprgroup -> . expression
    (12) ids -> . ID
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for RBRACKET resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    RBRACKET        shift and go to state 107
    ID              shift and go to state 51
    COMMA           reduce using rule 74 (expression -> .)
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! RBRACKET        [ reduce using rule 74 (expression -> .) ]
  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    ids                            shift and go to state 105
    exprgroup                      shift and go to state 106
    expression                     shift and go to state 108
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 76

    (102) assignment -> ids EQ . var
    (103) assignment -> ids EQ . expression
    (104) assignment -> ids EQ . str
    (105) assignment -> ids EQ . ID LBRACKET ids RBRACKET
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for var resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
    var             shift and go to state 109
    ID              shift and go to state 112
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    ids                            shift and go to state 79
    expression                     shift and go to state 110
    str                            shift and go to state 111
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 77

    (31) define -> boolean ids . LBRACKET NUMBER RBRACKET

    LBRACKET        shift and go to state 113


state 78

    (96) expression -> MINUS expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    PLR             reduce using rule 96 (expression -> MINUS expression .)
    PLL             reduce using rule 96 (expression -> MINUS expression .)
    PLUS            reduce using rule 96 (expression -> MINUS expression .)
    MNR             reduce using rule 96 (expression -> MINUS expression .)
    MNL             reduce using rule 96 (expression -> MINUS expression .)
    MINUS           reduce using rule 96 (expression -> MINUS expression .)
    TMR             reduce using rule 96 (expression -> MINUS expression .)
    TML             reduce using rule 96 (expression -> MINUS expression .)
    TIMES           reduce using rule 96 (expression -> MINUS expression .)
    DVR             reduce using rule 96 (expression -> MINUS expression .)
    DVL             reduce using rule 96 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 96 (expression -> MINUS expression .)
    PWR             reduce using rule 96 (expression -> MINUS expression .)
    PWL             reduce using rule 96 (expression -> MINUS expression .)
    POWER           reduce using rule 96 (expression -> MINUS expression .)
    end             reduce using rule 96 (expression -> MINUS expression .)
    error           reduce using rule 96 (expression -> MINUS expression .)
    LBRACE          reduce using rule 96 (expression -> MINUS expression .)
    int             reduce using rule 96 (expression -> MINUS expression .)
    bool            reduce using rule 96 (expression -> MINUS expression .)
    string          reduce using rule 96 (expression -> MINUS expression .)
    ID              reduce using rule 96 (expression -> MINUS expression .)
    up              reduce using rule 96 (expression -> MINUS expression .)
    down            reduce using rule 96 (expression -> MINUS expression .)
    left            reduce using rule 96 (expression -> MINUS expression .)
    right           reduce using rule 96 (expression -> MINUS expression .)
    knockup         reduce using rule 96 (expression -> MINUS expression .)
    knockdown       reduce using rule 96 (expression -> MINUS expression .)
    knockright      reduce using rule 96 (expression -> MINUS expression .)
    knockleft       reduce using rule 96 (expression -> MINUS expression .)
    vision          reduce using rule 96 (expression -> MINUS expression .)
    input           reduce using rule 96 (expression -> MINUS expression .)
    STR             reduce using rule 96 (expression -> MINUS expression .)
    NUMBER          reduce using rule 96 (expression -> MINUS expression .)
    false           reduce using rule 96 (expression -> MINUS expression .)
    true            reduce using rule 96 (expression -> MINUS expression .)
    var             reduce using rule 96 (expression -> MINUS expression .)
    LTR             reduce using rule 96 (expression -> MINUS expression .)
    LTL             reduce using rule 96 (expression -> MINUS expression .)
    LT              reduce using rule 96 (expression -> MINUS expression .)
    GTR             reduce using rule 96 (expression -> MINUS expression .)
    GTL             reduce using rule 96 (expression -> MINUS expression .)
    GT              reduce using rule 96 (expression -> MINUS expression .)
    DEQR            reduce using rule 96 (expression -> MINUS expression .)
    DEQL            reduce using rule 96 (expression -> MINUS expression .)
    DEQ             reduce using rule 96 (expression -> MINUS expression .)
    EXR             reduce using rule 96 (expression -> MINUS expression .)
    EXL             reduce using rule 96 (expression -> MINUS expression .)
    EX              reduce using rule 96 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 96 (expression -> MINUS expression .)
    COMMA           reduce using rule 96 (expression -> MINUS expression .)
    RBRACE          reduce using rule 96 (expression -> MINUS expression .)

  ! PLR             [ shift and go to state 60 ]
  ! PLL             [ shift and go to state 61 ]
  ! PLUS            [ shift and go to state 62 ]
  ! MNR             [ shift and go to state 63 ]
  ! MNL             [ shift and go to state 64 ]
  ! MINUS           [ shift and go to state 65 ]
  ! TMR             [ shift and go to state 66 ]
  ! TML             [ shift and go to state 67 ]
  ! TIMES           [ shift and go to state 68 ]
  ! DVR             [ shift and go to state 69 ]
  ! DVL             [ shift and go to state 70 ]
  ! DIVIDE          [ shift and go to state 71 ]
  ! PWR             [ shift and go to state 72 ]
  ! PWL             [ shift and go to state 73 ]
  ! POWER           [ shift and go to state 74 ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 79

    (94) expression -> ids .

    PLR             reduce using rule 94 (expression -> ids .)
    PLL             reduce using rule 94 (expression -> ids .)
    PLUS            reduce using rule 94 (expression -> ids .)
    MNR             reduce using rule 94 (expression -> ids .)
    MNL             reduce using rule 94 (expression -> ids .)
    MINUS           reduce using rule 94 (expression -> ids .)
    TMR             reduce using rule 94 (expression -> ids .)
    TML             reduce using rule 94 (expression -> ids .)
    TIMES           reduce using rule 94 (expression -> ids .)
    DVR             reduce using rule 94 (expression -> ids .)
    DVL             reduce using rule 94 (expression -> ids .)
    DIVIDE          reduce using rule 94 (expression -> ids .)
    PWR             reduce using rule 94 (expression -> ids .)
    PWL             reduce using rule 94 (expression -> ids .)
    POWER           reduce using rule 94 (expression -> ids .)
    end             reduce using rule 94 (expression -> ids .)
    error           reduce using rule 94 (expression -> ids .)
    LBRACE          reduce using rule 94 (expression -> ids .)
    int             reduce using rule 94 (expression -> ids .)
    bool            reduce using rule 94 (expression -> ids .)
    string          reduce using rule 94 (expression -> ids .)
    ID              reduce using rule 94 (expression -> ids .)
    up              reduce using rule 94 (expression -> ids .)
    down            reduce using rule 94 (expression -> ids .)
    left            reduce using rule 94 (expression -> ids .)
    right           reduce using rule 94 (expression -> ids .)
    knockup         reduce using rule 94 (expression -> ids .)
    knockdown       reduce using rule 94 (expression -> ids .)
    knockright      reduce using rule 94 (expression -> ids .)
    knockleft       reduce using rule 94 (expression -> ids .)
    vision          reduce using rule 94 (expression -> ids .)
    input           reduce using rule 94 (expression -> ids .)
    STR             reduce using rule 94 (expression -> ids .)
    NUMBER          reduce using rule 94 (expression -> ids .)
    false           reduce using rule 94 (expression -> ids .)
    true            reduce using rule 94 (expression -> ids .)
    var             reduce using rule 94 (expression -> ids .)
    LTR             reduce using rule 94 (expression -> ids .)
    LTL             reduce using rule 94 (expression -> ids .)
    LT              reduce using rule 94 (expression -> ids .)
    GTR             reduce using rule 94 (expression -> ids .)
    GTL             reduce using rule 94 (expression -> ids .)
    GT              reduce using rule 94 (expression -> ids .)
    DEQR            reduce using rule 94 (expression -> ids .)
    DEQL            reduce using rule 94 (expression -> ids .)
    DEQ             reduce using rule 94 (expression -> ids .)
    EXR             reduce using rule 94 (expression -> ids .)
    EXL             reduce using rule 94 (expression -> ids .)
    EX              reduce using rule 94 (expression -> ids .)
    RBRACKET        reduce using rule 94 (expression -> ids .)
    COMMA           reduce using rule 94 (expression -> ids .)
    RBRACE          reduce using rule 94 (expression -> ids .)


state 80

    (95) expression -> boolean .

    PLR             reduce using rule 95 (expression -> boolean .)
    PLL             reduce using rule 95 (expression -> boolean .)
    PLUS            reduce using rule 95 (expression -> boolean .)
    MNR             reduce using rule 95 (expression -> boolean .)
    MNL             reduce using rule 95 (expression -> boolean .)
    MINUS           reduce using rule 95 (expression -> boolean .)
    TMR             reduce using rule 95 (expression -> boolean .)
    TML             reduce using rule 95 (expression -> boolean .)
    TIMES           reduce using rule 95 (expression -> boolean .)
    DVR             reduce using rule 95 (expression -> boolean .)
    DVL             reduce using rule 95 (expression -> boolean .)
    DIVIDE          reduce using rule 95 (expression -> boolean .)
    PWR             reduce using rule 95 (expression -> boolean .)
    PWL             reduce using rule 95 (expression -> boolean .)
    POWER           reduce using rule 95 (expression -> boolean .)
    end             reduce using rule 95 (expression -> boolean .)
    error           reduce using rule 95 (expression -> boolean .)
    LBRACE          reduce using rule 95 (expression -> boolean .)
    int             reduce using rule 95 (expression -> boolean .)
    bool            reduce using rule 95 (expression -> boolean .)
    string          reduce using rule 95 (expression -> boolean .)
    ID              reduce using rule 95 (expression -> boolean .)
    up              reduce using rule 95 (expression -> boolean .)
    down            reduce using rule 95 (expression -> boolean .)
    left            reduce using rule 95 (expression -> boolean .)
    right           reduce using rule 95 (expression -> boolean .)
    knockup         reduce using rule 95 (expression -> boolean .)
    knockdown       reduce using rule 95 (expression -> boolean .)
    knockright      reduce using rule 95 (expression -> boolean .)
    knockleft       reduce using rule 95 (expression -> boolean .)
    vision          reduce using rule 95 (expression -> boolean .)
    input           reduce using rule 95 (expression -> boolean .)
    STR             reduce using rule 95 (expression -> boolean .)
    NUMBER          reduce using rule 95 (expression -> boolean .)
    false           reduce using rule 95 (expression -> boolean .)
    true            reduce using rule 95 (expression -> boolean .)
    var             reduce using rule 95 (expression -> boolean .)
    LTR             reduce using rule 95 (expression -> boolean .)
    LTL             reduce using rule 95 (expression -> boolean .)
    LT              reduce using rule 95 (expression -> boolean .)
    GTR             reduce using rule 95 (expression -> boolean .)
    GTL             reduce using rule 95 (expression -> boolean .)
    GT              reduce using rule 95 (expression -> boolean .)
    DEQR            reduce using rule 95 (expression -> boolean .)
    DEQL            reduce using rule 95 (expression -> boolean .)
    DEQ             reduce using rule 95 (expression -> boolean .)
    EXR             reduce using rule 95 (expression -> boolean .)
    EXL             reduce using rule 95 (expression -> boolean .)
    EX              reduce using rule 95 (expression -> boolean .)
    RBRACKET        reduce using rule 95 (expression -> boolean .)
    COMMA           reduce using rule 95 (expression -> boolean .)
    RBRACE          reduce using rule 95 (expression -> boolean .)


state 81

    (52) logic -> LBRACE lexp . RBRACE sentgroup

    RBRACE          shift and go to state 114


state 82

    (53) lexp -> expression . lt expression
    (54) lexp -> expression . gt expression
    (55) lexp -> expression . deg expression
    (56) lexp -> expression . ex expression
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (57) lt -> . LTR
    (58) lt -> . LTL
    (59) lt -> . LT
    (60) gt -> . GTR
    (61) gt -> . GTL
    (62) gt -> . GT
    (63) deg -> . DEQR
    (64) deg -> . DEQL
    (65) deg -> . DEQ
    (66) ex -> . EXR
    (67) ex -> . EXL
    (68) ex -> . EX
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    LTR             shift and go to state 119
    LTL             shift and go to state 120
    LT              shift and go to state 121
    GTR             shift and go to state 122
    GTL             shift and go to state 123
    GT              shift and go to state 124
    DEQR            shift and go to state 125
    DEQL            shift and go to state 126
    DEQ             shift and go to state 127
    EXR             shift and go to state 128
    EXL             shift and go to state 129
    EX              shift and go to state 130
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    lt                             shift and go to state 115
    gt                             shift and go to state 116
    deg                            shift and go to state 117
    ex                             shift and go to state 118
    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 83

    (26) define -> int ids .
    (30) define -> int ids . LBRACKET NUMBER RBRACKET

    end             reduce using rule 26 (define -> int ids .)
    error           reduce using rule 26 (define -> int ids .)
    MINUS           reduce using rule 26 (define -> int ids .)
    LBRACE          reduce using rule 26 (define -> int ids .)
    int             reduce using rule 26 (define -> int ids .)
    bool            reduce using rule 26 (define -> int ids .)
    string          reduce using rule 26 (define -> int ids .)
    ID              reduce using rule 26 (define -> int ids .)
    up              reduce using rule 26 (define -> int ids .)
    down            reduce using rule 26 (define -> int ids .)
    left            reduce using rule 26 (define -> int ids .)
    right           reduce using rule 26 (define -> int ids .)
    knockup         reduce using rule 26 (define -> int ids .)
    knockdown       reduce using rule 26 (define -> int ids .)
    knockright      reduce using rule 26 (define -> int ids .)
    knockleft       reduce using rule 26 (define -> int ids .)
    vision          reduce using rule 26 (define -> int ids .)
    input           reduce using rule 26 (define -> int ids .)
    STR             reduce using rule 26 (define -> int ids .)
    NUMBER          reduce using rule 26 (define -> int ids .)
    false           reduce using rule 26 (define -> int ids .)
    true            reduce using rule 26 (define -> int ids .)
    var             reduce using rule 26 (define -> int ids .)
    PLR             reduce using rule 26 (define -> int ids .)
    PLL             reduce using rule 26 (define -> int ids .)
    PLUS            reduce using rule 26 (define -> int ids .)
    MNR             reduce using rule 26 (define -> int ids .)
    MNL             reduce using rule 26 (define -> int ids .)
    TMR             reduce using rule 26 (define -> int ids .)
    TML             reduce using rule 26 (define -> int ids .)
    TIMES           reduce using rule 26 (define -> int ids .)
    DVR             reduce using rule 26 (define -> int ids .)
    DVL             reduce using rule 26 (define -> int ids .)
    DIVIDE          reduce using rule 26 (define -> int ids .)
    PWR             reduce using rule 26 (define -> int ids .)
    PWL             reduce using rule 26 (define -> int ids .)
    POWER           reduce using rule 26 (define -> int ids .)
    LBRACKET        shift and go to state 131


state 84

    (27) define -> bool ids .

    end             reduce using rule 27 (define -> bool ids .)
    error           reduce using rule 27 (define -> bool ids .)
    MINUS           reduce using rule 27 (define -> bool ids .)
    LBRACE          reduce using rule 27 (define -> bool ids .)
    int             reduce using rule 27 (define -> bool ids .)
    bool            reduce using rule 27 (define -> bool ids .)
    string          reduce using rule 27 (define -> bool ids .)
    ID              reduce using rule 27 (define -> bool ids .)
    up              reduce using rule 27 (define -> bool ids .)
    down            reduce using rule 27 (define -> bool ids .)
    left            reduce using rule 27 (define -> bool ids .)
    right           reduce using rule 27 (define -> bool ids .)
    knockup         reduce using rule 27 (define -> bool ids .)
    knockdown       reduce using rule 27 (define -> bool ids .)
    knockright      reduce using rule 27 (define -> bool ids .)
    knockleft       reduce using rule 27 (define -> bool ids .)
    vision          reduce using rule 27 (define -> bool ids .)
    input           reduce using rule 27 (define -> bool ids .)
    STR             reduce using rule 27 (define -> bool ids .)
    NUMBER          reduce using rule 27 (define -> bool ids .)
    false           reduce using rule 27 (define -> bool ids .)
    true            reduce using rule 27 (define -> bool ids .)
    var             reduce using rule 27 (define -> bool ids .)
    PLR             reduce using rule 27 (define -> bool ids .)
    PLL             reduce using rule 27 (define -> bool ids .)
    PLUS            reduce using rule 27 (define -> bool ids .)
    MNR             reduce using rule 27 (define -> bool ids .)
    MNL             reduce using rule 27 (define -> bool ids .)
    TMR             reduce using rule 27 (define -> bool ids .)
    TML             reduce using rule 27 (define -> bool ids .)
    TIMES           reduce using rule 27 (define -> bool ids .)
    DVR             reduce using rule 27 (define -> bool ids .)
    DVL             reduce using rule 27 (define -> bool ids .)
    DIVIDE          reduce using rule 27 (define -> bool ids .)
    PWR             reduce using rule 27 (define -> bool ids .)
    PWL             reduce using rule 27 (define -> bool ids .)
    POWER           reduce using rule 27 (define -> bool ids .)


state 85

    (28) define -> string ids .
    (32) define -> string ids . LBRACKET NUMBER RBRACKET

    end             reduce using rule 28 (define -> string ids .)
    error           reduce using rule 28 (define -> string ids .)
    MINUS           reduce using rule 28 (define -> string ids .)
    LBRACE          reduce using rule 28 (define -> string ids .)
    int             reduce using rule 28 (define -> string ids .)
    bool            reduce using rule 28 (define -> string ids .)
    string          reduce using rule 28 (define -> string ids .)
    ID              reduce using rule 28 (define -> string ids .)
    up              reduce using rule 28 (define -> string ids .)
    down            reduce using rule 28 (define -> string ids .)
    left            reduce using rule 28 (define -> string ids .)
    right           reduce using rule 28 (define -> string ids .)
    knockup         reduce using rule 28 (define -> string ids .)
    knockdown       reduce using rule 28 (define -> string ids .)
    knockright      reduce using rule 28 (define -> string ids .)
    knockleft       reduce using rule 28 (define -> string ids .)
    vision          reduce using rule 28 (define -> string ids .)
    input           reduce using rule 28 (define -> string ids .)
    STR             reduce using rule 28 (define -> string ids .)
    NUMBER          reduce using rule 28 (define -> string ids .)
    false           reduce using rule 28 (define -> string ids .)
    true            reduce using rule 28 (define -> string ids .)
    var             reduce using rule 28 (define -> string ids .)
    PLR             reduce using rule 28 (define -> string ids .)
    PLL             reduce using rule 28 (define -> string ids .)
    PLUS            reduce using rule 28 (define -> string ids .)
    MNR             reduce using rule 28 (define -> string ids .)
    MNL             reduce using rule 28 (define -> string ids .)
    TMR             reduce using rule 28 (define -> string ids .)
    TML             reduce using rule 28 (define -> string ids .)
    TIMES           reduce using rule 28 (define -> string ids .)
    DVR             reduce using rule 28 (define -> string ids .)
    DVL             reduce using rule 28 (define -> string ids .)
    DIVIDE          reduce using rule 28 (define -> string ids .)
    PWR             reduce using rule 28 (define -> string ids .)
    PWL             reduce using rule 28 (define -> string ids .)
    POWER           reduce using rule 28 (define -> string ids .)
    LBRACKET        shift and go to state 132


state 86

    (29) define -> ID ids .

    end             reduce using rule 29 (define -> ID ids .)
    error           reduce using rule 29 (define -> ID ids .)
    MINUS           reduce using rule 29 (define -> ID ids .)
    LBRACE          reduce using rule 29 (define -> ID ids .)
    int             reduce using rule 29 (define -> ID ids .)
    bool            reduce using rule 29 (define -> ID ids .)
    string          reduce using rule 29 (define -> ID ids .)
    ID              reduce using rule 29 (define -> ID ids .)
    up              reduce using rule 29 (define -> ID ids .)
    down            reduce using rule 29 (define -> ID ids .)
    left            reduce using rule 29 (define -> ID ids .)
    right           reduce using rule 29 (define -> ID ids .)
    knockup         reduce using rule 29 (define -> ID ids .)
    knockdown       reduce using rule 29 (define -> ID ids .)
    knockright      reduce using rule 29 (define -> ID ids .)
    knockleft       reduce using rule 29 (define -> ID ids .)
    vision          reduce using rule 29 (define -> ID ids .)
    input           reduce using rule 29 (define -> ID ids .)
    STR             reduce using rule 29 (define -> ID ids .)
    NUMBER          reduce using rule 29 (define -> ID ids .)
    false           reduce using rule 29 (define -> ID ids .)
    true            reduce using rule 29 (define -> ID ids .)
    var             reduce using rule 29 (define -> ID ids .)
    PLR             reduce using rule 29 (define -> ID ids .)
    PLL             reduce using rule 29 (define -> ID ids .)
    PLUS            reduce using rule 29 (define -> ID ids .)
    MNR             reduce using rule 29 (define -> ID ids .)
    MNL             reduce using rule 29 (define -> ID ids .)
    TMR             reduce using rule 29 (define -> ID ids .)
    TML             reduce using rule 29 (define -> ID ids .)
    TIMES           reduce using rule 29 (define -> ID ids .)
    DVR             reduce using rule 29 (define -> ID ids .)
    DVL             reduce using rule 29 (define -> ID ids .)
    DIVIDE          reduce using rule 29 (define -> ID ids .)
    PWR             reduce using rule 29 (define -> ID ids .)
    PWL             reduce using rule 29 (define -> ID ids .)
    POWER           reduce using rule 29 (define -> ID ids .)


state 87

    (108) move -> up LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 133
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 88

    (109) move -> down LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 136
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 89

    (110) move -> left LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 137
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 90

    (111) move -> right LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 138
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 91

    (114) ping -> knockup LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 139
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 92

    (115) ping -> knockdown LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 140
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 93

    (116) ping -> knockright LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 141
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 94

    (117) ping -> knockleft LBRACKET . steps RBRACKET
    (112) steps -> . expression
    (113) steps -> . ids
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (12) ids -> . ID
    (90) str -> . STR
    (93) num -> . NUMBER
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    ID              shift and go to state 51
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    steps                          shift and go to state 142
    expression                     shift and go to state 134
    ids                            shift and go to state 135
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 95

    (121) sensor -> vision LBRACKET . ids RBRACKET
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 143

state 96

    (122) sensor -> input LBRACKET . ids RBRACKET
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 144

state 97

    (7) func -> def ids LBRACKET . list RBRACKET sentgroup
    (9) func -> def ids LBRACKET . error RBRACKET sentgroup
    (10) func -> def ids LBRACKET . error RBRACKET error
    (13) list -> . type ids AND COMMA list
    (14) list -> . ID ids AND COMMA list
    (15) list -> . type ids COMMA list
    (16) list -> . ID ids COMMA list
    (17) list -> . type ids AND
    (18) list -> . type ids
    (19) list -> . ID ids
    (20) list -> .
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    error           shift and go to state 146
    ID              shift and go to state 148
    RBRACKET        reduce using rule 20 (list -> .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    list                           shift and go to state 145
    type                           shift and go to state 147

state 98

    (8) func -> def error LBRACKET . list RBRACKET sentgroup
    (13) list -> . type ids AND COMMA list
    (14) list -> . ID ids AND COMMA list
    (15) list -> . type ids COMMA list
    (16) list -> . ID ids COMMA list
    (17) list -> . type ids AND
    (18) list -> . type ids
    (19) list -> . ID ids
    (20) list -> .
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    ID              shift and go to state 148
    RBRACKET        reduce using rule 20 (list -> .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    list                           shift and go to state 153
    type                           shift and go to state 147

state 99

    (46) record -> struct ID info . deflst
    (47) record -> struct ID info . deflst convert to deflst
    (48) record -> struct ID info . deflst convert from deflst
    (49) record -> struct ID info . deflst convert to deflst convert from deflst
    (50) deflst -> . type ids deflst
    (51) deflst -> . type ids
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    deflst                         shift and go to state 154
    type                           shift and go to state 155

state 100

    (69) expression -> expression plus expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 69 (expression -> expression plus expression .)
    error           reduce using rule 69 (expression -> expression plus expression .)
    LBRACE          reduce using rule 69 (expression -> expression plus expression .)
    int             reduce using rule 69 (expression -> expression plus expression .)
    bool            reduce using rule 69 (expression -> expression plus expression .)
    string          reduce using rule 69 (expression -> expression plus expression .)
    ID              reduce using rule 69 (expression -> expression plus expression .)
    up              reduce using rule 69 (expression -> expression plus expression .)
    down            reduce using rule 69 (expression -> expression plus expression .)
    left            reduce using rule 69 (expression -> expression plus expression .)
    right           reduce using rule 69 (expression -> expression plus expression .)
    knockup         reduce using rule 69 (expression -> expression plus expression .)
    knockdown       reduce using rule 69 (expression -> expression plus expression .)
    knockright      reduce using rule 69 (expression -> expression plus expression .)
    knockleft       reduce using rule 69 (expression -> expression plus expression .)
    vision          reduce using rule 69 (expression -> expression plus expression .)
    input           reduce using rule 69 (expression -> expression plus expression .)
    STR             reduce using rule 69 (expression -> expression plus expression .)
    NUMBER          reduce using rule 69 (expression -> expression plus expression .)
    false           reduce using rule 69 (expression -> expression plus expression .)
    true            reduce using rule 69 (expression -> expression plus expression .)
    var             reduce using rule 69 (expression -> expression plus expression .)
    LTR             reduce using rule 69 (expression -> expression plus expression .)
    LTL             reduce using rule 69 (expression -> expression plus expression .)
    LT              reduce using rule 69 (expression -> expression plus expression .)
    GTR             reduce using rule 69 (expression -> expression plus expression .)
    GTL             reduce using rule 69 (expression -> expression plus expression .)
    GT              reduce using rule 69 (expression -> expression plus expression .)
    DEQR            reduce using rule 69 (expression -> expression plus expression .)
    DEQL            reduce using rule 69 (expression -> expression plus expression .)
    DEQ             reduce using rule 69 (expression -> expression plus expression .)
    EXR             reduce using rule 69 (expression -> expression plus expression .)
    EXL             reduce using rule 69 (expression -> expression plus expression .)
    EX              reduce using rule 69 (expression -> expression plus expression .)
    RBRACKET        reduce using rule 69 (expression -> expression plus expression .)
    COMMA           reduce using rule 69 (expression -> expression plus expression .)
    RBRACE          reduce using rule 69 (expression -> expression plus expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! PLR             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! PLL             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! PLUS            [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! MNR             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! MNL             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! MINUS           [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! TMR             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! TML             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! TIMES           [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! DVR             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! DVL             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! DIVIDE          [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! PWR             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! PWL             [ reduce using rule 69 (expression -> expression plus expression .) ]
  ! POWER           [ reduce using rule 69 (expression -> expression plus expression .) ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 101

    (70) expression -> expression minus expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 70 (expression -> expression minus expression .)
    error           reduce using rule 70 (expression -> expression minus expression .)
    LBRACE          reduce using rule 70 (expression -> expression minus expression .)
    int             reduce using rule 70 (expression -> expression minus expression .)
    bool            reduce using rule 70 (expression -> expression minus expression .)
    string          reduce using rule 70 (expression -> expression minus expression .)
    ID              reduce using rule 70 (expression -> expression minus expression .)
    up              reduce using rule 70 (expression -> expression minus expression .)
    down            reduce using rule 70 (expression -> expression minus expression .)
    left            reduce using rule 70 (expression -> expression minus expression .)
    right           reduce using rule 70 (expression -> expression minus expression .)
    knockup         reduce using rule 70 (expression -> expression minus expression .)
    knockdown       reduce using rule 70 (expression -> expression minus expression .)
    knockright      reduce using rule 70 (expression -> expression minus expression .)
    knockleft       reduce using rule 70 (expression -> expression minus expression .)
    vision          reduce using rule 70 (expression -> expression minus expression .)
    input           reduce using rule 70 (expression -> expression minus expression .)
    STR             reduce using rule 70 (expression -> expression minus expression .)
    NUMBER          reduce using rule 70 (expression -> expression minus expression .)
    false           reduce using rule 70 (expression -> expression minus expression .)
    true            reduce using rule 70 (expression -> expression minus expression .)
    var             reduce using rule 70 (expression -> expression minus expression .)
    LTR             reduce using rule 70 (expression -> expression minus expression .)
    LTL             reduce using rule 70 (expression -> expression minus expression .)
    LT              reduce using rule 70 (expression -> expression minus expression .)
    GTR             reduce using rule 70 (expression -> expression minus expression .)
    GTL             reduce using rule 70 (expression -> expression minus expression .)
    GT              reduce using rule 70 (expression -> expression minus expression .)
    DEQR            reduce using rule 70 (expression -> expression minus expression .)
    DEQL            reduce using rule 70 (expression -> expression minus expression .)
    DEQ             reduce using rule 70 (expression -> expression minus expression .)
    EXR             reduce using rule 70 (expression -> expression minus expression .)
    EXL             reduce using rule 70 (expression -> expression minus expression .)
    EX              reduce using rule 70 (expression -> expression minus expression .)
    RBRACKET        reduce using rule 70 (expression -> expression minus expression .)
    COMMA           reduce using rule 70 (expression -> expression minus expression .)
    RBRACE          reduce using rule 70 (expression -> expression minus expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! PLR             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! PLL             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! PLUS            [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! MNR             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! MNL             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! MINUS           [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! TMR             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! TML             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! TIMES           [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! DVR             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! DVL             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! DIVIDE          [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! PWR             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! PWL             [ reduce using rule 70 (expression -> expression minus expression .) ]
  ! POWER           [ reduce using rule 70 (expression -> expression minus expression .) ]

    minus                          shift and go to state 56
    plus                           shift and go to state 55
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 102

    (71) expression -> expression times expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 71 (expression -> expression times expression .)
    error           reduce using rule 71 (expression -> expression times expression .)
    LBRACE          reduce using rule 71 (expression -> expression times expression .)
    int             reduce using rule 71 (expression -> expression times expression .)
    bool            reduce using rule 71 (expression -> expression times expression .)
    string          reduce using rule 71 (expression -> expression times expression .)
    ID              reduce using rule 71 (expression -> expression times expression .)
    up              reduce using rule 71 (expression -> expression times expression .)
    down            reduce using rule 71 (expression -> expression times expression .)
    left            reduce using rule 71 (expression -> expression times expression .)
    right           reduce using rule 71 (expression -> expression times expression .)
    knockup         reduce using rule 71 (expression -> expression times expression .)
    knockdown       reduce using rule 71 (expression -> expression times expression .)
    knockright      reduce using rule 71 (expression -> expression times expression .)
    knockleft       reduce using rule 71 (expression -> expression times expression .)
    vision          reduce using rule 71 (expression -> expression times expression .)
    input           reduce using rule 71 (expression -> expression times expression .)
    STR             reduce using rule 71 (expression -> expression times expression .)
    NUMBER          reduce using rule 71 (expression -> expression times expression .)
    false           reduce using rule 71 (expression -> expression times expression .)
    true            reduce using rule 71 (expression -> expression times expression .)
    var             reduce using rule 71 (expression -> expression times expression .)
    LTR             reduce using rule 71 (expression -> expression times expression .)
    LTL             reduce using rule 71 (expression -> expression times expression .)
    LT              reduce using rule 71 (expression -> expression times expression .)
    GTR             reduce using rule 71 (expression -> expression times expression .)
    GTL             reduce using rule 71 (expression -> expression times expression .)
    GT              reduce using rule 71 (expression -> expression times expression .)
    DEQR            reduce using rule 71 (expression -> expression times expression .)
    DEQL            reduce using rule 71 (expression -> expression times expression .)
    DEQ             reduce using rule 71 (expression -> expression times expression .)
    EXR             reduce using rule 71 (expression -> expression times expression .)
    EXL             reduce using rule 71 (expression -> expression times expression .)
    EX              reduce using rule 71 (expression -> expression times expression .)
    RBRACKET        reduce using rule 71 (expression -> expression times expression .)
    COMMA           reduce using rule 71 (expression -> expression times expression .)
    RBRACE          reduce using rule 71 (expression -> expression times expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! PLR             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! PLL             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! PLUS            [ reduce using rule 71 (expression -> expression times expression .) ]
  ! MNR             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! MNL             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! MINUS           [ reduce using rule 71 (expression -> expression times expression .) ]
  ! TMR             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! TML             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! TIMES           [ reduce using rule 71 (expression -> expression times expression .) ]
  ! DVR             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! DVL             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! DIVIDE          [ reduce using rule 71 (expression -> expression times expression .) ]
  ! PWR             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! PWL             [ reduce using rule 71 (expression -> expression times expression .) ]
  ! POWER           [ reduce using rule 71 (expression -> expression times expression .) ]

    times                          shift and go to state 57
    plus                           shift and go to state 55
    minus                          shift and go to state 56
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 103

    (72) expression -> expression divide expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 72 (expression -> expression divide expression .)
    error           reduce using rule 72 (expression -> expression divide expression .)
    LBRACE          reduce using rule 72 (expression -> expression divide expression .)
    int             reduce using rule 72 (expression -> expression divide expression .)
    bool            reduce using rule 72 (expression -> expression divide expression .)
    string          reduce using rule 72 (expression -> expression divide expression .)
    ID              reduce using rule 72 (expression -> expression divide expression .)
    up              reduce using rule 72 (expression -> expression divide expression .)
    down            reduce using rule 72 (expression -> expression divide expression .)
    left            reduce using rule 72 (expression -> expression divide expression .)
    right           reduce using rule 72 (expression -> expression divide expression .)
    knockup         reduce using rule 72 (expression -> expression divide expression .)
    knockdown       reduce using rule 72 (expression -> expression divide expression .)
    knockright      reduce using rule 72 (expression -> expression divide expression .)
    knockleft       reduce using rule 72 (expression -> expression divide expression .)
    vision          reduce using rule 72 (expression -> expression divide expression .)
    input           reduce using rule 72 (expression -> expression divide expression .)
    STR             reduce using rule 72 (expression -> expression divide expression .)
    NUMBER          reduce using rule 72 (expression -> expression divide expression .)
    false           reduce using rule 72 (expression -> expression divide expression .)
    true            reduce using rule 72 (expression -> expression divide expression .)
    var             reduce using rule 72 (expression -> expression divide expression .)
    LTR             reduce using rule 72 (expression -> expression divide expression .)
    LTL             reduce using rule 72 (expression -> expression divide expression .)
    LT              reduce using rule 72 (expression -> expression divide expression .)
    GTR             reduce using rule 72 (expression -> expression divide expression .)
    GTL             reduce using rule 72 (expression -> expression divide expression .)
    GT              reduce using rule 72 (expression -> expression divide expression .)
    DEQR            reduce using rule 72 (expression -> expression divide expression .)
    DEQL            reduce using rule 72 (expression -> expression divide expression .)
    DEQ             reduce using rule 72 (expression -> expression divide expression .)
    EXR             reduce using rule 72 (expression -> expression divide expression .)
    EXL             reduce using rule 72 (expression -> expression divide expression .)
    EX              reduce using rule 72 (expression -> expression divide expression .)
    RBRACKET        reduce using rule 72 (expression -> expression divide expression .)
    COMMA           reduce using rule 72 (expression -> expression divide expression .)
    RBRACE          reduce using rule 72 (expression -> expression divide expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! PLR             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! PLL             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! PLUS            [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! MNR             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! MNL             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! MINUS           [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! TMR             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! TML             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! TIMES           [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! DVR             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! DVL             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! DIVIDE          [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! PWR             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! PWL             [ reduce using rule 72 (expression -> expression divide expression .) ]
  ! POWER           [ reduce using rule 72 (expression -> expression divide expression .) ]

    divide                         shift and go to state 58
    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    power                          shift and go to state 59

state 104

    (73) expression -> expression power expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 73 (expression -> expression power expression .)
    error           reduce using rule 73 (expression -> expression power expression .)
    LBRACE          reduce using rule 73 (expression -> expression power expression .)
    int             reduce using rule 73 (expression -> expression power expression .)
    bool            reduce using rule 73 (expression -> expression power expression .)
    string          reduce using rule 73 (expression -> expression power expression .)
    ID              reduce using rule 73 (expression -> expression power expression .)
    up              reduce using rule 73 (expression -> expression power expression .)
    down            reduce using rule 73 (expression -> expression power expression .)
    left            reduce using rule 73 (expression -> expression power expression .)
    right           reduce using rule 73 (expression -> expression power expression .)
    knockup         reduce using rule 73 (expression -> expression power expression .)
    knockdown       reduce using rule 73 (expression -> expression power expression .)
    knockright      reduce using rule 73 (expression -> expression power expression .)
    knockleft       reduce using rule 73 (expression -> expression power expression .)
    vision          reduce using rule 73 (expression -> expression power expression .)
    input           reduce using rule 73 (expression -> expression power expression .)
    STR             reduce using rule 73 (expression -> expression power expression .)
    NUMBER          reduce using rule 73 (expression -> expression power expression .)
    false           reduce using rule 73 (expression -> expression power expression .)
    true            reduce using rule 73 (expression -> expression power expression .)
    var             reduce using rule 73 (expression -> expression power expression .)
    LTR             reduce using rule 73 (expression -> expression power expression .)
    LTL             reduce using rule 73 (expression -> expression power expression .)
    LT              reduce using rule 73 (expression -> expression power expression .)
    GTR             reduce using rule 73 (expression -> expression power expression .)
    GTL             reduce using rule 73 (expression -> expression power expression .)
    GT              reduce using rule 73 (expression -> expression power expression .)
    DEQR            reduce using rule 73 (expression -> expression power expression .)
    DEQL            reduce using rule 73 (expression -> expression power expression .)
    DEQ             reduce using rule 73 (expression -> expression power expression .)
    EXR             reduce using rule 73 (expression -> expression power expression .)
    EXL             reduce using rule 73 (expression -> expression power expression .)
    EX              reduce using rule 73 (expression -> expression power expression .)
    RBRACKET        reduce using rule 73 (expression -> expression power expression .)
    COMMA           reduce using rule 73 (expression -> expression power expression .)
    RBRACE          reduce using rule 73 (expression -> expression power expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! PLR             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! PLL             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! PLUS            [ reduce using rule 73 (expression -> expression power expression .) ]
  ! MNR             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! MNL             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! MINUS           [ reduce using rule 73 (expression -> expression power expression .) ]
  ! TMR             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! TML             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! TIMES           [ reduce using rule 73 (expression -> expression power expression .) ]
  ! DVR             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! DVL             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! DIVIDE          [ reduce using rule 73 (expression -> expression power expression .) ]
  ! PWR             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! PWL             [ reduce using rule 73 (expression -> expression power expression .) ]
  ! POWER           [ reduce using rule 73 (expression -> expression power expression .) ]

    power                          shift and go to state 59
    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58

state 105

    (98) cfunc -> ids LBRACKET ids . RBRACKET
    (107) assignment -> ids LBRACKET ids . RBRACKET EQ expression
    (94) expression -> ids .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 156
    COMMA           reduce using rule 94 (expression -> ids .)
    PLR             reduce using rule 94 (expression -> ids .)
    PLL             reduce using rule 94 (expression -> ids .)
    PLUS            reduce using rule 94 (expression -> ids .)
    MNR             reduce using rule 94 (expression -> ids .)
    MNL             reduce using rule 94 (expression -> ids .)
    MINUS           reduce using rule 94 (expression -> ids .)
    TMR             reduce using rule 94 (expression -> ids .)
    TML             reduce using rule 94 (expression -> ids .)
    TIMES           reduce using rule 94 (expression -> ids .)
    DVR             reduce using rule 94 (expression -> ids .)
    DVL             reduce using rule 94 (expression -> ids .)
    DIVIDE          reduce using rule 94 (expression -> ids .)
    PWR             reduce using rule 94 (expression -> ids .)
    PWL             reduce using rule 94 (expression -> ids .)
    POWER           reduce using rule 94 (expression -> ids .)

  ! RBRACKET        [ reduce using rule 94 (expression -> ids .) ]


state 106

    (97) cfunc -> ids LBRACKET exprgroup . RBRACKET

    RBRACKET        shift and go to state 157


state 107

    (99) cfunc -> ids LBRACKET RBRACKET .

    end             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    error           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    MINUS           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    LBRACE          reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    int             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    bool            reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    string          reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    ID              reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    up              reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    down            reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    left            reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    right           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    knockup         reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    knockdown       reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    knockright      reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    knockleft       reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    vision          reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    input           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    STR             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    NUMBER          reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    false           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    true            reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    var             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    PLR             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    PLL             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    PLUS            reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    MNR             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    MNL             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    TMR             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    TML             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    TIMES           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    DVR             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    DVL             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    DIVIDE          reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    PWR             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    PWL             reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)
    POWER           reduce using rule 99 (cfunc -> ids LBRACKET RBRACKET .)


state 108

    (106) assignment -> ids LBRACKET expression . RBRACKET EQ expression
    (100) exprgroup -> expression . COMMA exprgroup
    (101) exprgroup -> expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 158
    COMMA           shift and go to state 159
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! RBRACKET        [ reduce using rule 101 (exprgroup -> expression .) ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 109

    (102) assignment -> ids EQ var .
    (120) boolean -> var .

  ! reduce/reduce conflict for PLR resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for PLL resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for PLUS resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for MNR resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for MNL resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for MINUS resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for TMR resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for TML resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for TIMES resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for DVR resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for DVL resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for PWR resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for PWL resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for POWER resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for end resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for error resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for LBRACE resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for int resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for bool resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for string resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for ID resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for up resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for down resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for left resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for right resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for knockup resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for knockdown resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for knockright resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for knockleft resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for vision resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for input resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for STR resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for NUMBER resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for false resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for true resolved using rule 102 (assignment -> ids EQ var .)
  ! reduce/reduce conflict for var resolved using rule 102 (assignment -> ids EQ var .)
    end             reduce using rule 102 (assignment -> ids EQ var .)
    error           reduce using rule 102 (assignment -> ids EQ var .)
    MINUS           reduce using rule 102 (assignment -> ids EQ var .)
    LBRACE          reduce using rule 102 (assignment -> ids EQ var .)
    int             reduce using rule 102 (assignment -> ids EQ var .)
    bool            reduce using rule 102 (assignment -> ids EQ var .)
    string          reduce using rule 102 (assignment -> ids EQ var .)
    ID              reduce using rule 102 (assignment -> ids EQ var .)
    up              reduce using rule 102 (assignment -> ids EQ var .)
    down            reduce using rule 102 (assignment -> ids EQ var .)
    left            reduce using rule 102 (assignment -> ids EQ var .)
    right           reduce using rule 102 (assignment -> ids EQ var .)
    knockup         reduce using rule 102 (assignment -> ids EQ var .)
    knockdown       reduce using rule 102 (assignment -> ids EQ var .)
    knockright      reduce using rule 102 (assignment -> ids EQ var .)
    knockleft       reduce using rule 102 (assignment -> ids EQ var .)
    vision          reduce using rule 102 (assignment -> ids EQ var .)
    input           reduce using rule 102 (assignment -> ids EQ var .)
    STR             reduce using rule 102 (assignment -> ids EQ var .)
    NUMBER          reduce using rule 102 (assignment -> ids EQ var .)
    false           reduce using rule 102 (assignment -> ids EQ var .)
    true            reduce using rule 102 (assignment -> ids EQ var .)
    var             reduce using rule 102 (assignment -> ids EQ var .)
    PLR             reduce using rule 102 (assignment -> ids EQ var .)
    PLL             reduce using rule 102 (assignment -> ids EQ var .)
    PLUS            reduce using rule 102 (assignment -> ids EQ var .)
    MNR             reduce using rule 102 (assignment -> ids EQ var .)
    MNL             reduce using rule 102 (assignment -> ids EQ var .)
    TMR             reduce using rule 102 (assignment -> ids EQ var .)
    TML             reduce using rule 102 (assignment -> ids EQ var .)
    TIMES           reduce using rule 102 (assignment -> ids EQ var .)
    DVR             reduce using rule 102 (assignment -> ids EQ var .)
    DVL             reduce using rule 102 (assignment -> ids EQ var .)
    DIVIDE          reduce using rule 102 (assignment -> ids EQ var .)
    PWR             reduce using rule 102 (assignment -> ids EQ var .)
    PWL             reduce using rule 102 (assignment -> ids EQ var .)
    POWER           reduce using rule 102 (assignment -> ids EQ var .)

  ! PLR             [ reduce using rule 120 (boolean -> var .) ]
  ! PLL             [ reduce using rule 120 (boolean -> var .) ]
  ! PLUS            [ reduce using rule 120 (boolean -> var .) ]
  ! MNR             [ reduce using rule 120 (boolean -> var .) ]
  ! MNL             [ reduce using rule 120 (boolean -> var .) ]
  ! MINUS           [ reduce using rule 120 (boolean -> var .) ]
  ! TMR             [ reduce using rule 120 (boolean -> var .) ]
  ! TML             [ reduce using rule 120 (boolean -> var .) ]
  ! TIMES           [ reduce using rule 120 (boolean -> var .) ]
  ! DVR             [ reduce using rule 120 (boolean -> var .) ]
  ! DVL             [ reduce using rule 120 (boolean -> var .) ]
  ! DIVIDE          [ reduce using rule 120 (boolean -> var .) ]
  ! PWR             [ reduce using rule 120 (boolean -> var .) ]
  ! PWL             [ reduce using rule 120 (boolean -> var .) ]
  ! POWER           [ reduce using rule 120 (boolean -> var .) ]
  ! end             [ reduce using rule 120 (boolean -> var .) ]
  ! error           [ reduce using rule 120 (boolean -> var .) ]
  ! LBRACE          [ reduce using rule 120 (boolean -> var .) ]
  ! int             [ reduce using rule 120 (boolean -> var .) ]
  ! bool            [ reduce using rule 120 (boolean -> var .) ]
  ! string          [ reduce using rule 120 (boolean -> var .) ]
  ! ID              [ reduce using rule 120 (boolean -> var .) ]
  ! up              [ reduce using rule 120 (boolean -> var .) ]
  ! down            [ reduce using rule 120 (boolean -> var .) ]
  ! left            [ reduce using rule 120 (boolean -> var .) ]
  ! right           [ reduce using rule 120 (boolean -> var .) ]
  ! knockup         [ reduce using rule 120 (boolean -> var .) ]
  ! knockdown       [ reduce using rule 120 (boolean -> var .) ]
  ! knockright      [ reduce using rule 120 (boolean -> var .) ]
  ! knockleft       [ reduce using rule 120 (boolean -> var .) ]
  ! vision          [ reduce using rule 120 (boolean -> var .) ]
  ! input           [ reduce using rule 120 (boolean -> var .) ]
  ! STR             [ reduce using rule 120 (boolean -> var .) ]
  ! NUMBER          [ reduce using rule 120 (boolean -> var .) ]
  ! false           [ reduce using rule 120 (boolean -> var .) ]
  ! true            [ reduce using rule 120 (boolean -> var .) ]
  ! var             [ reduce using rule 120 (boolean -> var .) ]


state 110

    (103) assignment -> ids EQ expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 103 (assignment -> ids EQ expression .)
    error           reduce using rule 103 (assignment -> ids EQ expression .)
    LBRACE          reduce using rule 103 (assignment -> ids EQ expression .)
    int             reduce using rule 103 (assignment -> ids EQ expression .)
    bool            reduce using rule 103 (assignment -> ids EQ expression .)
    string          reduce using rule 103 (assignment -> ids EQ expression .)
    ID              reduce using rule 103 (assignment -> ids EQ expression .)
    up              reduce using rule 103 (assignment -> ids EQ expression .)
    down            reduce using rule 103 (assignment -> ids EQ expression .)
    left            reduce using rule 103 (assignment -> ids EQ expression .)
    right           reduce using rule 103 (assignment -> ids EQ expression .)
    knockup         reduce using rule 103 (assignment -> ids EQ expression .)
    knockdown       reduce using rule 103 (assignment -> ids EQ expression .)
    knockright      reduce using rule 103 (assignment -> ids EQ expression .)
    knockleft       reduce using rule 103 (assignment -> ids EQ expression .)
    vision          reduce using rule 103 (assignment -> ids EQ expression .)
    input           reduce using rule 103 (assignment -> ids EQ expression .)
    STR             reduce using rule 103 (assignment -> ids EQ expression .)
    NUMBER          reduce using rule 103 (assignment -> ids EQ expression .)
    false           reduce using rule 103 (assignment -> ids EQ expression .)
    true            reduce using rule 103 (assignment -> ids EQ expression .)
    var             reduce using rule 103 (assignment -> ids EQ expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! MINUS           [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! PLR             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! PLL             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! PLUS            [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! MNR             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! MNL             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! TMR             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! TML             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! TIMES           [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! DVR             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! DVL             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! DIVIDE          [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! PWR             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! PWL             [ reduce using rule 103 (assignment -> ids EQ expression .) ]
  ! POWER           [ reduce using rule 103 (assignment -> ids EQ expression .) ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 111

    (104) assignment -> ids EQ str .
    (91) expression -> str .

  ! reduce/reduce conflict for PLR resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for PLL resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for PLUS resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for MNR resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for MNL resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for MINUS resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for TMR resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for TML resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for TIMES resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for DVR resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for DVL resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for PWR resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for PWL resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for POWER resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for end resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for error resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for LBRACE resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for int resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for bool resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for string resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for ID resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for up resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for down resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for left resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for right resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for knockup resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for knockdown resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for knockright resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for knockleft resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for vision resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for input resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for STR resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for NUMBER resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for false resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for true resolved using rule 91 (expression -> str .)
  ! reduce/reduce conflict for var resolved using rule 91 (expression -> str .)
    PLR             reduce using rule 91 (expression -> str .)
    PLL             reduce using rule 91 (expression -> str .)
    PLUS            reduce using rule 91 (expression -> str .)
    MNR             reduce using rule 91 (expression -> str .)
    MNL             reduce using rule 91 (expression -> str .)
    MINUS           reduce using rule 91 (expression -> str .)
    TMR             reduce using rule 91 (expression -> str .)
    TML             reduce using rule 91 (expression -> str .)
    TIMES           reduce using rule 91 (expression -> str .)
    DVR             reduce using rule 91 (expression -> str .)
    DVL             reduce using rule 91 (expression -> str .)
    DIVIDE          reduce using rule 91 (expression -> str .)
    PWR             reduce using rule 91 (expression -> str .)
    PWL             reduce using rule 91 (expression -> str .)
    POWER           reduce using rule 91 (expression -> str .)
    end             reduce using rule 91 (expression -> str .)
    error           reduce using rule 91 (expression -> str .)
    LBRACE          reduce using rule 91 (expression -> str .)
    int             reduce using rule 91 (expression -> str .)
    bool            reduce using rule 91 (expression -> str .)
    string          reduce using rule 91 (expression -> str .)
    ID              reduce using rule 91 (expression -> str .)
    up              reduce using rule 91 (expression -> str .)
    down            reduce using rule 91 (expression -> str .)
    left            reduce using rule 91 (expression -> str .)
    right           reduce using rule 91 (expression -> str .)
    knockup         reduce using rule 91 (expression -> str .)
    knockdown       reduce using rule 91 (expression -> str .)
    knockright      reduce using rule 91 (expression -> str .)
    knockleft       reduce using rule 91 (expression -> str .)
    vision          reduce using rule 91 (expression -> str .)
    input           reduce using rule 91 (expression -> str .)
    STR             reduce using rule 91 (expression -> str .)
    NUMBER          reduce using rule 91 (expression -> str .)
    false           reduce using rule 91 (expression -> str .)
    true            reduce using rule 91 (expression -> str .)
    var             reduce using rule 91 (expression -> str .)

  ! end             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! error           [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! MINUS           [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! LBRACE          [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! int             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! bool            [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! string          [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! ID              [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! up              [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! down            [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! left            [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! right           [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! knockup         [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! knockdown       [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! knockright      [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! knockleft       [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! vision          [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! input           [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! STR             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! NUMBER          [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! false           [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! true            [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! var             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! PLR             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! PLL             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! PLUS            [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! MNR             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! MNL             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! TMR             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! TML             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! TIMES           [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! DVR             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! DVL             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! DIVIDE          [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! PWR             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! PWL             [ reduce using rule 104 (assignment -> ids EQ str .) ]
  ! POWER           [ reduce using rule 104 (assignment -> ids EQ str .) ]


state 112

    (105) assignment -> ids EQ ID . LBRACKET ids RBRACKET
    (12) ids -> ID .

    LBRACKET        shift and go to state 160
    PLR             reduce using rule 12 (ids -> ID .)
    PLL             reduce using rule 12 (ids -> ID .)
    PLUS            reduce using rule 12 (ids -> ID .)
    MNR             reduce using rule 12 (ids -> ID .)
    MNL             reduce using rule 12 (ids -> ID .)
    MINUS           reduce using rule 12 (ids -> ID .)
    TMR             reduce using rule 12 (ids -> ID .)
    TML             reduce using rule 12 (ids -> ID .)
    TIMES           reduce using rule 12 (ids -> ID .)
    DVR             reduce using rule 12 (ids -> ID .)
    DVL             reduce using rule 12 (ids -> ID .)
    DIVIDE          reduce using rule 12 (ids -> ID .)
    PWR             reduce using rule 12 (ids -> ID .)
    PWL             reduce using rule 12 (ids -> ID .)
    POWER           reduce using rule 12 (ids -> ID .)
    end             reduce using rule 12 (ids -> ID .)
    error           reduce using rule 12 (ids -> ID .)
    LBRACE          reduce using rule 12 (ids -> ID .)
    int             reduce using rule 12 (ids -> ID .)
    bool            reduce using rule 12 (ids -> ID .)
    string          reduce using rule 12 (ids -> ID .)
    ID              reduce using rule 12 (ids -> ID .)
    up              reduce using rule 12 (ids -> ID .)
    down            reduce using rule 12 (ids -> ID .)
    left            reduce using rule 12 (ids -> ID .)
    right           reduce using rule 12 (ids -> ID .)
    knockup         reduce using rule 12 (ids -> ID .)
    knockdown       reduce using rule 12 (ids -> ID .)
    knockright      reduce using rule 12 (ids -> ID .)
    knockleft       reduce using rule 12 (ids -> ID .)
    vision          reduce using rule 12 (ids -> ID .)
    input           reduce using rule 12 (ids -> ID .)
    STR             reduce using rule 12 (ids -> ID .)
    NUMBER          reduce using rule 12 (ids -> ID .)
    false           reduce using rule 12 (ids -> ID .)
    true            reduce using rule 12 (ids -> ID .)
    var             reduce using rule 12 (ids -> ID .)


state 113

    (31) define -> boolean ids LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 161


state 114

    (52) logic -> LBRACE lexp RBRACE . sentgroup
    (25) sentgroup -> . start sentencess end

    start           shift and go to state 8

    sentgroup                      shift and go to state 162

state 115

    (53) lexp -> expression lt . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 163
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 116

    (54) lexp -> expression gt . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 164
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 117

    (55) lexp -> expression deg . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 165
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 118

    (56) lexp -> expression ex . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACE          reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 166
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 119

    (57) lt -> LTR .

    MINUS           reduce using rule 57 (lt -> LTR .)
    STR             reduce using rule 57 (lt -> LTR .)
    NUMBER          reduce using rule 57 (lt -> LTR .)
    ID              reduce using rule 57 (lt -> LTR .)
    false           reduce using rule 57 (lt -> LTR .)
    true            reduce using rule 57 (lt -> LTR .)
    var             reduce using rule 57 (lt -> LTR .)
    PLR             reduce using rule 57 (lt -> LTR .)
    PLL             reduce using rule 57 (lt -> LTR .)
    PLUS            reduce using rule 57 (lt -> LTR .)
    MNR             reduce using rule 57 (lt -> LTR .)
    MNL             reduce using rule 57 (lt -> LTR .)
    TMR             reduce using rule 57 (lt -> LTR .)
    TML             reduce using rule 57 (lt -> LTR .)
    TIMES           reduce using rule 57 (lt -> LTR .)
    DVR             reduce using rule 57 (lt -> LTR .)
    DVL             reduce using rule 57 (lt -> LTR .)
    DIVIDE          reduce using rule 57 (lt -> LTR .)
    PWR             reduce using rule 57 (lt -> LTR .)
    PWL             reduce using rule 57 (lt -> LTR .)
    POWER           reduce using rule 57 (lt -> LTR .)
    RBRACE          reduce using rule 57 (lt -> LTR .)


state 120

    (58) lt -> LTL .

    MINUS           reduce using rule 58 (lt -> LTL .)
    STR             reduce using rule 58 (lt -> LTL .)
    NUMBER          reduce using rule 58 (lt -> LTL .)
    ID              reduce using rule 58 (lt -> LTL .)
    false           reduce using rule 58 (lt -> LTL .)
    true            reduce using rule 58 (lt -> LTL .)
    var             reduce using rule 58 (lt -> LTL .)
    PLR             reduce using rule 58 (lt -> LTL .)
    PLL             reduce using rule 58 (lt -> LTL .)
    PLUS            reduce using rule 58 (lt -> LTL .)
    MNR             reduce using rule 58 (lt -> LTL .)
    MNL             reduce using rule 58 (lt -> LTL .)
    TMR             reduce using rule 58 (lt -> LTL .)
    TML             reduce using rule 58 (lt -> LTL .)
    TIMES           reduce using rule 58 (lt -> LTL .)
    DVR             reduce using rule 58 (lt -> LTL .)
    DVL             reduce using rule 58 (lt -> LTL .)
    DIVIDE          reduce using rule 58 (lt -> LTL .)
    PWR             reduce using rule 58 (lt -> LTL .)
    PWL             reduce using rule 58 (lt -> LTL .)
    POWER           reduce using rule 58 (lt -> LTL .)
    RBRACE          reduce using rule 58 (lt -> LTL .)


state 121

    (59) lt -> LT .

    MINUS           reduce using rule 59 (lt -> LT .)
    STR             reduce using rule 59 (lt -> LT .)
    NUMBER          reduce using rule 59 (lt -> LT .)
    ID              reduce using rule 59 (lt -> LT .)
    false           reduce using rule 59 (lt -> LT .)
    true            reduce using rule 59 (lt -> LT .)
    var             reduce using rule 59 (lt -> LT .)
    PLR             reduce using rule 59 (lt -> LT .)
    PLL             reduce using rule 59 (lt -> LT .)
    PLUS            reduce using rule 59 (lt -> LT .)
    MNR             reduce using rule 59 (lt -> LT .)
    MNL             reduce using rule 59 (lt -> LT .)
    TMR             reduce using rule 59 (lt -> LT .)
    TML             reduce using rule 59 (lt -> LT .)
    TIMES           reduce using rule 59 (lt -> LT .)
    DVR             reduce using rule 59 (lt -> LT .)
    DVL             reduce using rule 59 (lt -> LT .)
    DIVIDE          reduce using rule 59 (lt -> LT .)
    PWR             reduce using rule 59 (lt -> LT .)
    PWL             reduce using rule 59 (lt -> LT .)
    POWER           reduce using rule 59 (lt -> LT .)
    RBRACE          reduce using rule 59 (lt -> LT .)


state 122

    (60) gt -> GTR .

    MINUS           reduce using rule 60 (gt -> GTR .)
    STR             reduce using rule 60 (gt -> GTR .)
    NUMBER          reduce using rule 60 (gt -> GTR .)
    ID              reduce using rule 60 (gt -> GTR .)
    false           reduce using rule 60 (gt -> GTR .)
    true            reduce using rule 60 (gt -> GTR .)
    var             reduce using rule 60 (gt -> GTR .)
    PLR             reduce using rule 60 (gt -> GTR .)
    PLL             reduce using rule 60 (gt -> GTR .)
    PLUS            reduce using rule 60 (gt -> GTR .)
    MNR             reduce using rule 60 (gt -> GTR .)
    MNL             reduce using rule 60 (gt -> GTR .)
    TMR             reduce using rule 60 (gt -> GTR .)
    TML             reduce using rule 60 (gt -> GTR .)
    TIMES           reduce using rule 60 (gt -> GTR .)
    DVR             reduce using rule 60 (gt -> GTR .)
    DVL             reduce using rule 60 (gt -> GTR .)
    DIVIDE          reduce using rule 60 (gt -> GTR .)
    PWR             reduce using rule 60 (gt -> GTR .)
    PWL             reduce using rule 60 (gt -> GTR .)
    POWER           reduce using rule 60 (gt -> GTR .)
    RBRACE          reduce using rule 60 (gt -> GTR .)


state 123

    (61) gt -> GTL .

    MINUS           reduce using rule 61 (gt -> GTL .)
    STR             reduce using rule 61 (gt -> GTL .)
    NUMBER          reduce using rule 61 (gt -> GTL .)
    ID              reduce using rule 61 (gt -> GTL .)
    false           reduce using rule 61 (gt -> GTL .)
    true            reduce using rule 61 (gt -> GTL .)
    var             reduce using rule 61 (gt -> GTL .)
    PLR             reduce using rule 61 (gt -> GTL .)
    PLL             reduce using rule 61 (gt -> GTL .)
    PLUS            reduce using rule 61 (gt -> GTL .)
    MNR             reduce using rule 61 (gt -> GTL .)
    MNL             reduce using rule 61 (gt -> GTL .)
    TMR             reduce using rule 61 (gt -> GTL .)
    TML             reduce using rule 61 (gt -> GTL .)
    TIMES           reduce using rule 61 (gt -> GTL .)
    DVR             reduce using rule 61 (gt -> GTL .)
    DVL             reduce using rule 61 (gt -> GTL .)
    DIVIDE          reduce using rule 61 (gt -> GTL .)
    PWR             reduce using rule 61 (gt -> GTL .)
    PWL             reduce using rule 61 (gt -> GTL .)
    POWER           reduce using rule 61 (gt -> GTL .)
    RBRACE          reduce using rule 61 (gt -> GTL .)


state 124

    (62) gt -> GT .

    MINUS           reduce using rule 62 (gt -> GT .)
    STR             reduce using rule 62 (gt -> GT .)
    NUMBER          reduce using rule 62 (gt -> GT .)
    ID              reduce using rule 62 (gt -> GT .)
    false           reduce using rule 62 (gt -> GT .)
    true            reduce using rule 62 (gt -> GT .)
    var             reduce using rule 62 (gt -> GT .)
    PLR             reduce using rule 62 (gt -> GT .)
    PLL             reduce using rule 62 (gt -> GT .)
    PLUS            reduce using rule 62 (gt -> GT .)
    MNR             reduce using rule 62 (gt -> GT .)
    MNL             reduce using rule 62 (gt -> GT .)
    TMR             reduce using rule 62 (gt -> GT .)
    TML             reduce using rule 62 (gt -> GT .)
    TIMES           reduce using rule 62 (gt -> GT .)
    DVR             reduce using rule 62 (gt -> GT .)
    DVL             reduce using rule 62 (gt -> GT .)
    DIVIDE          reduce using rule 62 (gt -> GT .)
    PWR             reduce using rule 62 (gt -> GT .)
    PWL             reduce using rule 62 (gt -> GT .)
    POWER           reduce using rule 62 (gt -> GT .)
    RBRACE          reduce using rule 62 (gt -> GT .)


state 125

    (63) deg -> DEQR .

    MINUS           reduce using rule 63 (deg -> DEQR .)
    STR             reduce using rule 63 (deg -> DEQR .)
    NUMBER          reduce using rule 63 (deg -> DEQR .)
    ID              reduce using rule 63 (deg -> DEQR .)
    false           reduce using rule 63 (deg -> DEQR .)
    true            reduce using rule 63 (deg -> DEQR .)
    var             reduce using rule 63 (deg -> DEQR .)
    PLR             reduce using rule 63 (deg -> DEQR .)
    PLL             reduce using rule 63 (deg -> DEQR .)
    PLUS            reduce using rule 63 (deg -> DEQR .)
    MNR             reduce using rule 63 (deg -> DEQR .)
    MNL             reduce using rule 63 (deg -> DEQR .)
    TMR             reduce using rule 63 (deg -> DEQR .)
    TML             reduce using rule 63 (deg -> DEQR .)
    TIMES           reduce using rule 63 (deg -> DEQR .)
    DVR             reduce using rule 63 (deg -> DEQR .)
    DVL             reduce using rule 63 (deg -> DEQR .)
    DIVIDE          reduce using rule 63 (deg -> DEQR .)
    PWR             reduce using rule 63 (deg -> DEQR .)
    PWL             reduce using rule 63 (deg -> DEQR .)
    POWER           reduce using rule 63 (deg -> DEQR .)
    RBRACE          reduce using rule 63 (deg -> DEQR .)


state 126

    (64) deg -> DEQL .

    MINUS           reduce using rule 64 (deg -> DEQL .)
    STR             reduce using rule 64 (deg -> DEQL .)
    NUMBER          reduce using rule 64 (deg -> DEQL .)
    ID              reduce using rule 64 (deg -> DEQL .)
    false           reduce using rule 64 (deg -> DEQL .)
    true            reduce using rule 64 (deg -> DEQL .)
    var             reduce using rule 64 (deg -> DEQL .)
    PLR             reduce using rule 64 (deg -> DEQL .)
    PLL             reduce using rule 64 (deg -> DEQL .)
    PLUS            reduce using rule 64 (deg -> DEQL .)
    MNR             reduce using rule 64 (deg -> DEQL .)
    MNL             reduce using rule 64 (deg -> DEQL .)
    TMR             reduce using rule 64 (deg -> DEQL .)
    TML             reduce using rule 64 (deg -> DEQL .)
    TIMES           reduce using rule 64 (deg -> DEQL .)
    DVR             reduce using rule 64 (deg -> DEQL .)
    DVL             reduce using rule 64 (deg -> DEQL .)
    DIVIDE          reduce using rule 64 (deg -> DEQL .)
    PWR             reduce using rule 64 (deg -> DEQL .)
    PWL             reduce using rule 64 (deg -> DEQL .)
    POWER           reduce using rule 64 (deg -> DEQL .)
    RBRACE          reduce using rule 64 (deg -> DEQL .)


state 127

    (65) deg -> DEQ .

    MINUS           reduce using rule 65 (deg -> DEQ .)
    STR             reduce using rule 65 (deg -> DEQ .)
    NUMBER          reduce using rule 65 (deg -> DEQ .)
    ID              reduce using rule 65 (deg -> DEQ .)
    false           reduce using rule 65 (deg -> DEQ .)
    true            reduce using rule 65 (deg -> DEQ .)
    var             reduce using rule 65 (deg -> DEQ .)
    PLR             reduce using rule 65 (deg -> DEQ .)
    PLL             reduce using rule 65 (deg -> DEQ .)
    PLUS            reduce using rule 65 (deg -> DEQ .)
    MNR             reduce using rule 65 (deg -> DEQ .)
    MNL             reduce using rule 65 (deg -> DEQ .)
    TMR             reduce using rule 65 (deg -> DEQ .)
    TML             reduce using rule 65 (deg -> DEQ .)
    TIMES           reduce using rule 65 (deg -> DEQ .)
    DVR             reduce using rule 65 (deg -> DEQ .)
    DVL             reduce using rule 65 (deg -> DEQ .)
    DIVIDE          reduce using rule 65 (deg -> DEQ .)
    PWR             reduce using rule 65 (deg -> DEQ .)
    PWL             reduce using rule 65 (deg -> DEQ .)
    POWER           reduce using rule 65 (deg -> DEQ .)
    RBRACE          reduce using rule 65 (deg -> DEQ .)


state 128

    (66) ex -> EXR .

    MINUS           reduce using rule 66 (ex -> EXR .)
    STR             reduce using rule 66 (ex -> EXR .)
    NUMBER          reduce using rule 66 (ex -> EXR .)
    ID              reduce using rule 66 (ex -> EXR .)
    false           reduce using rule 66 (ex -> EXR .)
    true            reduce using rule 66 (ex -> EXR .)
    var             reduce using rule 66 (ex -> EXR .)
    PLR             reduce using rule 66 (ex -> EXR .)
    PLL             reduce using rule 66 (ex -> EXR .)
    PLUS            reduce using rule 66 (ex -> EXR .)
    MNR             reduce using rule 66 (ex -> EXR .)
    MNL             reduce using rule 66 (ex -> EXR .)
    TMR             reduce using rule 66 (ex -> EXR .)
    TML             reduce using rule 66 (ex -> EXR .)
    TIMES           reduce using rule 66 (ex -> EXR .)
    DVR             reduce using rule 66 (ex -> EXR .)
    DVL             reduce using rule 66 (ex -> EXR .)
    DIVIDE          reduce using rule 66 (ex -> EXR .)
    PWR             reduce using rule 66 (ex -> EXR .)
    PWL             reduce using rule 66 (ex -> EXR .)
    POWER           reduce using rule 66 (ex -> EXR .)
    RBRACE          reduce using rule 66 (ex -> EXR .)


state 129

    (67) ex -> EXL .

    MINUS           reduce using rule 67 (ex -> EXL .)
    STR             reduce using rule 67 (ex -> EXL .)
    NUMBER          reduce using rule 67 (ex -> EXL .)
    ID              reduce using rule 67 (ex -> EXL .)
    false           reduce using rule 67 (ex -> EXL .)
    true            reduce using rule 67 (ex -> EXL .)
    var             reduce using rule 67 (ex -> EXL .)
    PLR             reduce using rule 67 (ex -> EXL .)
    PLL             reduce using rule 67 (ex -> EXL .)
    PLUS            reduce using rule 67 (ex -> EXL .)
    MNR             reduce using rule 67 (ex -> EXL .)
    MNL             reduce using rule 67 (ex -> EXL .)
    TMR             reduce using rule 67 (ex -> EXL .)
    TML             reduce using rule 67 (ex -> EXL .)
    TIMES           reduce using rule 67 (ex -> EXL .)
    DVR             reduce using rule 67 (ex -> EXL .)
    DVL             reduce using rule 67 (ex -> EXL .)
    DIVIDE          reduce using rule 67 (ex -> EXL .)
    PWR             reduce using rule 67 (ex -> EXL .)
    PWL             reduce using rule 67 (ex -> EXL .)
    POWER           reduce using rule 67 (ex -> EXL .)
    RBRACE          reduce using rule 67 (ex -> EXL .)


state 130

    (68) ex -> EX .

    MINUS           reduce using rule 68 (ex -> EX .)
    STR             reduce using rule 68 (ex -> EX .)
    NUMBER          reduce using rule 68 (ex -> EX .)
    ID              reduce using rule 68 (ex -> EX .)
    false           reduce using rule 68 (ex -> EX .)
    true            reduce using rule 68 (ex -> EX .)
    var             reduce using rule 68 (ex -> EX .)
    PLR             reduce using rule 68 (ex -> EX .)
    PLL             reduce using rule 68 (ex -> EX .)
    PLUS            reduce using rule 68 (ex -> EX .)
    MNR             reduce using rule 68 (ex -> EX .)
    MNL             reduce using rule 68 (ex -> EX .)
    TMR             reduce using rule 68 (ex -> EX .)
    TML             reduce using rule 68 (ex -> EX .)
    TIMES           reduce using rule 68 (ex -> EX .)
    DVR             reduce using rule 68 (ex -> EX .)
    DVL             reduce using rule 68 (ex -> EX .)
    DIVIDE          reduce using rule 68 (ex -> EX .)
    PWR             reduce using rule 68 (ex -> EX .)
    PWL             reduce using rule 68 (ex -> EX .)
    POWER           reduce using rule 68 (ex -> EX .)
    RBRACE          reduce using rule 68 (ex -> EX .)


state 131

    (30) define -> int ids LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 167


state 132

    (32) define -> string ids LBRACKET . NUMBER RBRACKET

    NUMBER          shift and go to state 168


state 133

    (108) move -> up LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 169


state 134

    (112) steps -> expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    RBRACKET        reduce using rule 112 (steps -> expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 135

    (113) steps -> ids .
    (94) expression -> ids .

  ! reduce/reduce conflict for RBRACKET resolved using rule 94 (expression -> ids .)
    PLR             reduce using rule 94 (expression -> ids .)
    PLL             reduce using rule 94 (expression -> ids .)
    PLUS            reduce using rule 94 (expression -> ids .)
    MNR             reduce using rule 94 (expression -> ids .)
    MNL             reduce using rule 94 (expression -> ids .)
    MINUS           reduce using rule 94 (expression -> ids .)
    TMR             reduce using rule 94 (expression -> ids .)
    TML             reduce using rule 94 (expression -> ids .)
    TIMES           reduce using rule 94 (expression -> ids .)
    DVR             reduce using rule 94 (expression -> ids .)
    DVL             reduce using rule 94 (expression -> ids .)
    DIVIDE          reduce using rule 94 (expression -> ids .)
    PWR             reduce using rule 94 (expression -> ids .)
    PWL             reduce using rule 94 (expression -> ids .)
    POWER           reduce using rule 94 (expression -> ids .)
    RBRACKET        reduce using rule 94 (expression -> ids .)

  ! RBRACKET        [ reduce using rule 113 (steps -> ids .) ]


state 136

    (109) move -> down LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 170


state 137

    (110) move -> left LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 171


state 138

    (111) move -> right LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 172


state 139

    (114) ping -> knockup LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 173


state 140

    (115) ping -> knockdown LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 174


state 141

    (116) ping -> knockright LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 175


state 142

    (117) ping -> knockleft LBRACKET steps . RBRACKET

    RBRACKET        shift and go to state 176


state 143

    (121) sensor -> vision LBRACKET ids . RBRACKET

    RBRACKET        shift and go to state 177


state 144

    (122) sensor -> input LBRACKET ids . RBRACKET

    RBRACKET        shift and go to state 178


state 145

    (7) func -> def ids LBRACKET list . RBRACKET sentgroup

    RBRACKET        shift and go to state 179


state 146

    (9) func -> def ids LBRACKET error . RBRACKET sentgroup
    (10) func -> def ids LBRACKET error . RBRACKET error

    RBRACKET        shift and go to state 180


state 147

    (13) list -> type . ids AND COMMA list
    (15) list -> type . ids COMMA list
    (17) list -> type . ids AND
    (18) list -> type . ids
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 181

state 148

    (14) list -> ID . ids AND COMMA list
    (16) list -> ID . ids COMMA list
    (19) list -> ID . ids
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 182

state 149

    (21) type -> bool .

    ID              reduce using rule 21 (type -> bool .)


state 150

    (22) type -> int .

    ID              reduce using rule 22 (type -> int .)


state 151

    (23) type -> string .

    ID              reduce using rule 23 (type -> string .)


state 152

    (24) type -> struct .

    ID              reduce using rule 24 (type -> struct .)


state 153

    (8) func -> def error LBRACKET list . RBRACKET sentgroup

    RBRACKET        shift and go to state 183


state 154

    (46) record -> struct ID info deflst .
    (47) record -> struct ID info deflst . convert to deflst
    (48) record -> struct ID info deflst . convert from deflst
    (49) record -> struct ID info deflst . convert to deflst convert from deflst

    struct          reduce using rule 46 (record -> struct ID info deflst .)
    start           reduce using rule 46 (record -> struct ID info deflst .)
    def             reduce using rule 46 (record -> struct ID info deflst .)
    $end            reduce using rule 46 (record -> struct ID info deflst .)
    convert         shift and go to state 184


state 155

    (50) deflst -> type . ids deflst
    (51) deflst -> type . ids
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 185

state 156

    (98) cfunc -> ids LBRACKET ids RBRACKET .
    (107) assignment -> ids LBRACKET ids RBRACKET . EQ expression

    end             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    error           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    MINUS           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    LBRACE          reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    int             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    bool            reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    string          reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    ID              reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    up              reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    down            reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    left            reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    right           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    knockup         reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    knockdown       reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    knockright      reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    knockleft       reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    vision          reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    input           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    STR             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    NUMBER          reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    false           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    true            reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    var             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    PLR             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    PLL             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    PLUS            reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    MNR             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    MNL             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    TMR             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    TML             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    TIMES           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    DVR             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    DVL             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    DIVIDE          reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    PWR             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    PWL             reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    POWER           reduce using rule 98 (cfunc -> ids LBRACKET ids RBRACKET .)
    EQ              shift and go to state 186


state 157

    (97) cfunc -> ids LBRACKET exprgroup RBRACKET .

    end             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    error           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    MINUS           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    LBRACE          reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    int             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    bool            reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    string          reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    ID              reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    up              reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    down            reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    left            reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    right           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    knockup         reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    knockdown       reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    knockright      reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    knockleft       reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    vision          reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    input           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    STR             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    NUMBER          reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    false           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    true            reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    var             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    PLR             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    PLL             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    PLUS            reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    MNR             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    MNL             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    TMR             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    TML             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    TIMES           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    DVR             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    DVL             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    DIVIDE          reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    PWR             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    PWL             reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)
    POWER           reduce using rule 97 (cfunc -> ids LBRACKET exprgroup RBRACKET .)


state 158

    (106) assignment -> ids LBRACKET expression RBRACKET . EQ expression

    EQ              shift and go to state 187


state 159

    (100) exprgroup -> expression COMMA . exprgroup
    (100) exprgroup -> . expression COMMA exprgroup
    (101) exprgroup -> . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 74 (expression -> .)
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    RBRACKET        reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]

    expression                     shift and go to state 188
    exprgroup                      shift and go to state 189
    str                            shift and go to state 25
    num                            shift and go to state 26
    ids                            shift and go to state 79
    boolean                        shift and go to state 80

state 160

    (105) assignment -> ids EQ ID LBRACKET . ids RBRACKET
    (12) ids -> . ID

    ID              shift and go to state 51

    ids                            shift and go to state 190

state 161

    (31) define -> boolean ids LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 191


state 162

    (52) logic -> LBRACE lexp RBRACE sentgroup .

    end             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    error           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    MINUS           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    LBRACE          reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    int             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    bool            reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    string          reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    ID              reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    up              reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    down            reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    left            reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    right           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    knockup         reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    knockdown       reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    knockright      reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    knockleft       reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    vision          reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    input           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    STR             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    NUMBER          reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    false           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    true            reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    var             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    PLR             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    PLL             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    PLUS            reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    MNR             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    MNL             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    TMR             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    TML             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    TIMES           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    DVR             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    DVL             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    DIVIDE          reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    PWR             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    PWL             reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)
    POWER           reduce using rule 52 (logic -> LBRACE lexp RBRACE sentgroup .)


state 163

    (53) lexp -> expression lt expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    RBRACE          reduce using rule 53 (lexp -> expression lt expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 164

    (54) lexp -> expression gt expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    RBRACE          reduce using rule 54 (lexp -> expression gt expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 165

    (55) lexp -> expression deg expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    RBRACE          reduce using rule 55 (lexp -> expression deg expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 166

    (56) lexp -> expression ex expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    RBRACE          reduce using rule 56 (lexp -> expression ex expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 167

    (30) define -> int ids LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 192


state 168

    (32) define -> string ids LBRACKET NUMBER . RBRACKET

    RBRACKET        shift and go to state 193


state 169

    (108) move -> up LBRACKET steps RBRACKET .

    end             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    error           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    int             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    bool            reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    string          reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    ID              reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    up              reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    down            reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    left            reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    right           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    knockup         reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    knockright      reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    vision          reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    input           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    STR             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    false           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    true            reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    var             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    PLR             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    PLL             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    MNR             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    MNL             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    TMR             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    TML             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    DVR             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    DVL             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    PWR             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    PWL             reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)
    POWER           reduce using rule 108 (move -> up LBRACKET steps RBRACKET .)


state 170

    (109) move -> down LBRACKET steps RBRACKET .

    end             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    error           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    int             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    bool            reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    string          reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    ID              reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    up              reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    down            reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    left            reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    right           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    knockup         reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    knockright      reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    vision          reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    input           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    STR             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    false           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    true            reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    var             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    PLR             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    PLL             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    MNR             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    MNL             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    TMR             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    TML             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    DVR             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    DVL             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    PWR             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    PWL             reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)
    POWER           reduce using rule 109 (move -> down LBRACKET steps RBRACKET .)


state 171

    (110) move -> left LBRACKET steps RBRACKET .

    end             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    error           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    int             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    bool            reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    string          reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    ID              reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    up              reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    down            reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    left            reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    right           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    knockup         reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    knockright      reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    vision          reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    input           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    STR             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    false           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    true            reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    var             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    PLR             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    PLL             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    MNR             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    MNL             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    TMR             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    TML             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    DVR             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    DVL             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    PWR             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    PWL             reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)
    POWER           reduce using rule 110 (move -> left LBRACKET steps RBRACKET .)


state 172

    (111) move -> right LBRACKET steps RBRACKET .

    end             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    error           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    int             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    bool            reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    string          reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    ID              reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    up              reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    down            reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    left            reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    right           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    knockup         reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    knockright      reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    vision          reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    input           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    STR             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    false           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    true            reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    var             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    PLR             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    PLL             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    MNR             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    MNL             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    TMR             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    TML             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    DVR             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    DVL             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    PWR             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    PWL             reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)
    POWER           reduce using rule 111 (move -> right LBRACKET steps RBRACKET .)


state 173

    (114) ping -> knockup LBRACKET steps RBRACKET .

    end             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    error           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    int             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    bool            reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    string          reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    ID              reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    up              reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    down            reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    left            reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    right           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    knockup         reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    knockright      reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    vision          reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    input           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    STR             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    false           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    true            reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    var             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    PLR             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    PLL             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    MNR             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    MNL             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    TMR             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    TML             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    DVR             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    DVL             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    PWR             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    PWL             reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)
    POWER           reduce using rule 114 (ping -> knockup LBRACKET steps RBRACKET .)


state 174

    (115) ping -> knockdown LBRACKET steps RBRACKET .

    end             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    error           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    int             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    bool            reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    string          reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    ID              reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    up              reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    down            reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    left            reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    right           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    knockup         reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    knockright      reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    vision          reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    input           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    STR             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    false           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    true            reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    var             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    PLR             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    PLL             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    MNR             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    MNL             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    TMR             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    TML             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    DVR             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    DVL             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    PWR             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    PWL             reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)
    POWER           reduce using rule 115 (ping -> knockdown LBRACKET steps RBRACKET .)


state 175

    (116) ping -> knockright LBRACKET steps RBRACKET .

    end             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    error           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    int             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    bool            reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    string          reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    ID              reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    up              reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    down            reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    left            reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    right           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    knockup         reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    knockright      reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    vision          reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    input           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    STR             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    false           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    true            reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    var             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    PLR             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    PLL             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    MNR             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    MNL             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    TMR             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    TML             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    DVR             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    DVL             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    PWR             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    PWL             reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)
    POWER           reduce using rule 116 (ping -> knockright LBRACKET steps RBRACKET .)


state 176

    (117) ping -> knockleft LBRACKET steps RBRACKET .

    end             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    error           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    MINUS           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    LBRACE          reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    int             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    bool            reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    string          reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    ID              reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    up              reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    down            reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    left            reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    right           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    knockup         reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    knockdown       reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    knockright      reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    knockleft       reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    vision          reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    input           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    STR             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    NUMBER          reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    false           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    true            reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    var             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    PLR             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    PLL             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    PLUS            reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    MNR             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    MNL             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    TMR             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    TML             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    TIMES           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    DVR             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    DVL             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    DIVIDE          reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    PWR             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    PWL             reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)
    POWER           reduce using rule 117 (ping -> knockleft LBRACKET steps RBRACKET .)


state 177

    (121) sensor -> vision LBRACKET ids RBRACKET .

    end             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    error           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    MINUS           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    LBRACE          reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    int             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    bool            reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    string          reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    ID              reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    up              reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    down            reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    left            reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    right           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    knockup         reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    knockdown       reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    knockright      reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    knockleft       reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    vision          reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    input           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    STR             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    NUMBER          reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    false           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    true            reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    var             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    PLR             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    PLL             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    PLUS            reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    MNR             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    MNL             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    TMR             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    TML             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    TIMES           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    DVR             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    DVL             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    DIVIDE          reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    PWR             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    PWL             reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)
    POWER           reduce using rule 121 (sensor -> vision LBRACKET ids RBRACKET .)


state 178

    (122) sensor -> input LBRACKET ids RBRACKET .

    end             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    error           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    MINUS           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    LBRACE          reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    int             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    bool            reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    string          reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    ID              reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    up              reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    down            reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    left            reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    right           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    knockup         reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    knockdown       reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    knockright      reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    knockleft       reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    vision          reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    input           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    STR             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    NUMBER          reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    false           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    true            reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    var             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    PLR             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    PLL             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    PLUS            reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    MNR             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    MNL             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    TMR             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    TML             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    TIMES           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    DVR             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    DVL             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    DIVIDE          reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    PWR             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    PWL             reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)
    POWER           reduce using rule 122 (sensor -> input LBRACKET ids RBRACKET .)


state 179

    (7) func -> def ids LBRACKET list RBRACKET . sentgroup
    (25) sentgroup -> . start sentencess end

    start           shift and go to state 8

    sentgroup                      shift and go to state 194

state 180

    (9) func -> def ids LBRACKET error RBRACKET . sentgroup
    (10) func -> def ids LBRACKET error RBRACKET . error
    (25) sentgroup -> . start sentencess end

    error           shift and go to state 195
    start           shift and go to state 8

    sentgroup                      shift and go to state 196

state 181

    (13) list -> type ids . AND COMMA list
    (15) list -> type ids . COMMA list
    (17) list -> type ids . AND
    (18) list -> type ids .

    AND             shift and go to state 197
    COMMA           shift and go to state 198
    RBRACKET        reduce using rule 18 (list -> type ids .)


state 182

    (14) list -> ID ids . AND COMMA list
    (16) list -> ID ids . COMMA list
    (19) list -> ID ids .

    AND             shift and go to state 199
    COMMA           shift and go to state 200
    RBRACKET        reduce using rule 19 (list -> ID ids .)


state 183

    (8) func -> def error LBRACKET list RBRACKET . sentgroup
    (25) sentgroup -> . start sentencess end

    start           shift and go to state 8

    sentgroup                      shift and go to state 201

state 184

    (47) record -> struct ID info deflst convert . to deflst
    (48) record -> struct ID info deflst convert . from deflst
    (49) record -> struct ID info deflst convert . to deflst convert from deflst

    to              shift and go to state 202
    from            shift and go to state 203


state 185

    (50) deflst -> type ids . deflst
    (51) deflst -> type ids .
    (50) deflst -> . type ids deflst
    (51) deflst -> . type ids
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

  ! shift/reduce conflict for struct resolved as shift
    convert         reduce using rule 51 (deflst -> type ids .)
    start           reduce using rule 51 (deflst -> type ids .)
    def             reduce using rule 51 (deflst -> type ids .)
    $end            reduce using rule 51 (deflst -> type ids .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

  ! struct          [ reduce using rule 51 (deflst -> type ids .) ]

    type                           shift and go to state 155
    deflst                         shift and go to state 204

state 186

    (107) assignment -> ids LBRACKET ids RBRACKET EQ . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    ids                            shift and go to state 79
    expression                     shift and go to state 205
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 187

    (106) assignment -> ids LBRACKET expression RBRACKET EQ . expression
    (69) expression -> . expression plus expression
    (70) expression -> . expression minus expression
    (71) expression -> . expression times expression
    (72) expression -> . expression divide expression
    (73) expression -> . expression power expression
    (74) expression -> .
    (91) expression -> . str
    (92) expression -> . num
    (94) expression -> . ids
    (95) expression -> . boolean
    (96) expression -> . MINUS expression
    (90) str -> . STR
    (93) num -> . NUMBER
    (12) ids -> . ID
    (118) boolean -> . false
    (119) boolean -> . true
    (120) boolean -> . var

  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STR resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for var resolved as shift
    PLR             reduce using rule 74 (expression -> .)
    PLL             reduce using rule 74 (expression -> .)
    PLUS            reduce using rule 74 (expression -> .)
    MNR             reduce using rule 74 (expression -> .)
    MNL             reduce using rule 74 (expression -> .)
    TMR             reduce using rule 74 (expression -> .)
    TML             reduce using rule 74 (expression -> .)
    TIMES           reduce using rule 74 (expression -> .)
    DVR             reduce using rule 74 (expression -> .)
    DVL             reduce using rule 74 (expression -> .)
    DIVIDE          reduce using rule 74 (expression -> .)
    PWR             reduce using rule 74 (expression -> .)
    PWL             reduce using rule 74 (expression -> .)
    POWER           reduce using rule 74 (expression -> .)
    end             reduce using rule 74 (expression -> .)
    error           reduce using rule 74 (expression -> .)
    LBRACE          reduce using rule 74 (expression -> .)
    int             reduce using rule 74 (expression -> .)
    bool            reduce using rule 74 (expression -> .)
    string          reduce using rule 74 (expression -> .)
    up              reduce using rule 74 (expression -> .)
    down            reduce using rule 74 (expression -> .)
    left            reduce using rule 74 (expression -> .)
    right           reduce using rule 74 (expression -> .)
    knockup         reduce using rule 74 (expression -> .)
    knockdown       reduce using rule 74 (expression -> .)
    knockright      reduce using rule 74 (expression -> .)
    knockleft       reduce using rule 74 (expression -> .)
    vision          reduce using rule 74 (expression -> .)
    input           reduce using rule 74 (expression -> .)
    MINUS           shift and go to state 28
    STR             shift and go to state 46
    NUMBER          shift and go to state 34
    ID              shift and go to state 51
    false           shift and go to state 47
    true            shift and go to state 48
    var             shift and go to state 35

  ! MINUS           [ reduce using rule 74 (expression -> .) ]
  ! ID              [ reduce using rule 74 (expression -> .) ]
  ! STR             [ reduce using rule 74 (expression -> .) ]
  ! NUMBER          [ reduce using rule 74 (expression -> .) ]
  ! false           [ reduce using rule 74 (expression -> .) ]
  ! true            [ reduce using rule 74 (expression -> .) ]
  ! var             [ reduce using rule 74 (expression -> .) ]

    ids                            shift and go to state 79
    expression                     shift and go to state 206
    str                            shift and go to state 25
    num                            shift and go to state 26
    boolean                        shift and go to state 80

state 188

    (100) exprgroup -> expression . COMMA exprgroup
    (101) exprgroup -> expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

    COMMA           shift and go to state 159
    RBRACKET        reduce using rule 101 (exprgroup -> expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 189

    (100) exprgroup -> expression COMMA exprgroup .

    RBRACKET        reduce using rule 100 (exprgroup -> expression COMMA exprgroup .)


state 190

    (105) assignment -> ids EQ ID LBRACKET ids . RBRACKET

    RBRACKET        shift and go to state 207


state 191

    (31) define -> boolean ids LBRACKET NUMBER RBRACKET .

    end             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    error           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    LBRACE          reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    int             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    bool            reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    string          reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    up              reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    down            reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    left            reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    right           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    knockup         reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    knockdown       reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    knockright      reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    knockleft       reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    vision          reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    input           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    STR             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    NUMBER          reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    false           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    true            reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    var             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    PLR             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    PLL             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    MNR             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    MNL             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    TMR             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    TML             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    DVR             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    DVL             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    PWR             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    PWL             reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)
    POWER           reduce using rule 31 (define -> boolean ids LBRACKET NUMBER RBRACKET .)


state 192

    (30) define -> int ids LBRACKET NUMBER RBRACKET .

    end             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    error           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    LBRACE          reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    int             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    bool            reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    string          reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    up              reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    down            reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    left            reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    right           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    knockup         reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    knockdown       reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    knockright      reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    knockleft       reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    vision          reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    input           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    STR             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    NUMBER          reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    false           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    true            reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    var             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    PLR             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    PLL             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    MNR             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    MNL             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    TMR             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    TML             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    DVR             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    DVL             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    PWR             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    PWL             reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)
    POWER           reduce using rule 30 (define -> int ids LBRACKET NUMBER RBRACKET .)


state 193

    (32) define -> string ids LBRACKET NUMBER RBRACKET .

    end             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    error           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    MINUS           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    LBRACE          reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    int             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    bool            reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    string          reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    ID              reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    up              reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    down            reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    left            reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    right           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    knockup         reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    knockdown       reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    knockright      reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    knockleft       reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    vision          reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    input           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    STR             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    NUMBER          reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    false           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    true            reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    var             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    PLR             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    PLL             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    PLUS            reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    MNR             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    MNL             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    TMR             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    TML             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    TIMES           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    DVR             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    DVL             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    DIVIDE          reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    PWR             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    PWL             reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)
    POWER           reduce using rule 32 (define -> string ids LBRACKET NUMBER RBRACKET .)


state 194

    (7) func -> def ids LBRACKET list RBRACKET sentgroup .

    start           reduce using rule 7 (func -> def ids LBRACKET list RBRACKET sentgroup .)
    def             reduce using rule 7 (func -> def ids LBRACKET list RBRACKET sentgroup .)
    struct          reduce using rule 7 (func -> def ids LBRACKET list RBRACKET sentgroup .)
    $end            reduce using rule 7 (func -> def ids LBRACKET list RBRACKET sentgroup .)


state 195

    (10) func -> def ids LBRACKET error RBRACKET error .

    start           reduce using rule 10 (func -> def ids LBRACKET error RBRACKET error .)
    def             reduce using rule 10 (func -> def ids LBRACKET error RBRACKET error .)
    struct          reduce using rule 10 (func -> def ids LBRACKET error RBRACKET error .)
    $end            reduce using rule 10 (func -> def ids LBRACKET error RBRACKET error .)


state 196

    (9) func -> def ids LBRACKET error RBRACKET sentgroup .

    start           reduce using rule 9 (func -> def ids LBRACKET error RBRACKET sentgroup .)
    def             reduce using rule 9 (func -> def ids LBRACKET error RBRACKET sentgroup .)
    struct          reduce using rule 9 (func -> def ids LBRACKET error RBRACKET sentgroup .)
    $end            reduce using rule 9 (func -> def ids LBRACKET error RBRACKET sentgroup .)


state 197

    (13) list -> type ids AND . COMMA list
    (17) list -> type ids AND .

    COMMA           shift and go to state 208
    RBRACKET        reduce using rule 17 (list -> type ids AND .)


state 198

    (15) list -> type ids COMMA . list
    (13) list -> . type ids AND COMMA list
    (14) list -> . ID ids AND COMMA list
    (15) list -> . type ids COMMA list
    (16) list -> . ID ids COMMA list
    (17) list -> . type ids AND
    (18) list -> . type ids
    (19) list -> . ID ids
    (20) list -> .
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    ID              shift and go to state 148
    RBRACKET        reduce using rule 20 (list -> .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    type                           shift and go to state 147
    list                           shift and go to state 209

state 199

    (14) list -> ID ids AND . COMMA list

    COMMA           shift and go to state 210


state 200

    (16) list -> ID ids COMMA . list
    (13) list -> . type ids AND COMMA list
    (14) list -> . ID ids AND COMMA list
    (15) list -> . type ids COMMA list
    (16) list -> . ID ids COMMA list
    (17) list -> . type ids AND
    (18) list -> . type ids
    (19) list -> . ID ids
    (20) list -> .
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    ID              shift and go to state 148
    RBRACKET        reduce using rule 20 (list -> .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    list                           shift and go to state 211
    type                           shift and go to state 147

state 201

    (8) func -> def error LBRACKET list RBRACKET sentgroup .

    start           reduce using rule 8 (func -> def error LBRACKET list RBRACKET sentgroup .)
    def             reduce using rule 8 (func -> def error LBRACKET list RBRACKET sentgroup .)
    struct          reduce using rule 8 (func -> def error LBRACKET list RBRACKET sentgroup .)
    $end            reduce using rule 8 (func -> def error LBRACKET list RBRACKET sentgroup .)


state 202

    (47) record -> struct ID info deflst convert to . deflst
    (49) record -> struct ID info deflst convert to . deflst convert from deflst
    (50) deflst -> . type ids deflst
    (51) deflst -> . type ids
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    deflst                         shift and go to state 212
    type                           shift and go to state 155

state 203

    (48) record -> struct ID info deflst convert from . deflst
    (50) deflst -> . type ids deflst
    (51) deflst -> . type ids
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    deflst                         shift and go to state 213
    type                           shift and go to state 155

state 204

    (50) deflst -> type ids deflst .

    convert         reduce using rule 50 (deflst -> type ids deflst .)
    struct          reduce using rule 50 (deflst -> type ids deflst .)
    start           reduce using rule 50 (deflst -> type ids deflst .)
    def             reduce using rule 50 (deflst -> type ids deflst .)
    $end            reduce using rule 50 (deflst -> type ids deflst .)


state 205

    (107) assignment -> ids LBRACKET ids RBRACKET EQ expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    error           reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    LBRACE          reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    int             reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    bool            reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    string          reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    ID              reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    up              reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    down            reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    left            reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    right           reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    knockup         reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    knockdown       reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    knockright      reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    knockleft       reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    vision          reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    input           reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    STR             reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    NUMBER          reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    false           reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    true            reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    var             reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! MINUS           [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! PLR             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! PLL             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! PLUS            [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! MNR             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! MNL             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! TMR             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! TML             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! TIMES           [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! DVR             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! DVL             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! DIVIDE          [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! PWR             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! PWL             [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]
  ! POWER           [ reduce using rule 107 (assignment -> ids LBRACKET ids RBRACKET EQ expression .) ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 206

    (106) assignment -> ids LBRACKET expression RBRACKET EQ expression .
    (69) expression -> expression . plus expression
    (70) expression -> expression . minus expression
    (71) expression -> expression . times expression
    (72) expression -> expression . divide expression
    (73) expression -> expression . power expression
    (75) plus -> . PLR
    (76) plus -> . PLL
    (77) plus -> . PLUS
    (78) minus -> . MNR
    (79) minus -> . MNL
    (80) minus -> . MINUS
    (81) times -> . TMR
    (82) times -> . TML
    (83) times -> . TIMES
    (84) divide -> . DVR
    (85) divide -> . DVL
    (86) divide -> . DIVIDE
    (87) power -> . PWR
    (88) power -> . PWL
    (89) power -> . POWER

  ! shift/reduce conflict for PLR resolved as shift
  ! shift/reduce conflict for PLL resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MNR resolved as shift
  ! shift/reduce conflict for MNL resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TMR resolved as shift
  ! shift/reduce conflict for TML resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DVR resolved as shift
  ! shift/reduce conflict for DVL resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for PWR resolved as shift
  ! shift/reduce conflict for PWL resolved as shift
  ! shift/reduce conflict for POWER resolved as shift
    end             reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    error           reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    LBRACE          reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    int             reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    bool            reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    string          reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    ID              reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    up              reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    down            reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    left            reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    right           reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    knockup         reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    knockdown       reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    knockright      reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    knockleft       reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    vision          reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    input           reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    STR             reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    NUMBER          reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    false           reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    true            reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    var             reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .)
    PLR             shift and go to state 60
    PLL             shift and go to state 61
    PLUS            shift and go to state 62
    MNR             shift and go to state 63
    MNL             shift and go to state 64
    MINUS           shift and go to state 65
    TMR             shift and go to state 66
    TML             shift and go to state 67
    TIMES           shift and go to state 68
    DVR             shift and go to state 69
    DVL             shift and go to state 70
    DIVIDE          shift and go to state 71
    PWR             shift and go to state 72
    PWL             shift and go to state 73
    POWER           shift and go to state 74

  ! MINUS           [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! PLR             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! PLL             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! PLUS            [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! MNR             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! MNL             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! TMR             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! TML             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! TIMES           [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! DVR             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! DVL             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! DIVIDE          [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! PWR             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! PWL             [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]
  ! POWER           [ reduce using rule 106 (assignment -> ids LBRACKET expression RBRACKET EQ expression .) ]

    plus                           shift and go to state 55
    minus                          shift and go to state 56
    times                          shift and go to state 57
    divide                         shift and go to state 58
    power                          shift and go to state 59

state 207

    (105) assignment -> ids EQ ID LBRACKET ids RBRACKET .

    end             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    error           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    MINUS           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    LBRACE          reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    int             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    bool            reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    string          reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    ID              reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    up              reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    down            reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    left            reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    right           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    knockup         reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    knockdown       reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    knockright      reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    knockleft       reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    vision          reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    input           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    STR             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    NUMBER          reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    false           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    true            reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    var             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    PLR             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    PLL             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    PLUS            reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    MNR             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    MNL             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    TMR             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    TML             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    TIMES           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    DVR             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    DVL             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    DIVIDE          reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    PWR             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    PWL             reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)
    POWER           reduce using rule 105 (assignment -> ids EQ ID LBRACKET ids RBRACKET .)


state 208

    (13) list -> type ids AND COMMA . list
    (13) list -> . type ids AND COMMA list
    (14) list -> . ID ids AND COMMA list
    (15) list -> . type ids COMMA list
    (16) list -> . ID ids COMMA list
    (17) list -> . type ids AND
    (18) list -> . type ids
    (19) list -> . ID ids
    (20) list -> .
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    ID              shift and go to state 148
    RBRACKET        reduce using rule 20 (list -> .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    type                           shift and go to state 147
    list                           shift and go to state 214

state 209

    (15) list -> type ids COMMA list .

    RBRACKET        reduce using rule 15 (list -> type ids COMMA list .)


state 210

    (14) list -> ID ids AND COMMA . list
    (13) list -> . type ids AND COMMA list
    (14) list -> . ID ids AND COMMA list
    (15) list -> . type ids COMMA list
    (16) list -> . ID ids COMMA list
    (17) list -> . type ids AND
    (18) list -> . type ids
    (19) list -> . ID ids
    (20) list -> .
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    ID              shift and go to state 148
    RBRACKET        reduce using rule 20 (list -> .)
    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    list                           shift and go to state 215
    type                           shift and go to state 147

state 211

    (16) list -> ID ids COMMA list .

    RBRACKET        reduce using rule 16 (list -> ID ids COMMA list .)


state 212

    (47) record -> struct ID info deflst convert to deflst .
    (49) record -> struct ID info deflst convert to deflst . convert from deflst

    struct          reduce using rule 47 (record -> struct ID info deflst convert to deflst .)
    start           reduce using rule 47 (record -> struct ID info deflst convert to deflst .)
    def             reduce using rule 47 (record -> struct ID info deflst convert to deflst .)
    $end            reduce using rule 47 (record -> struct ID info deflst convert to deflst .)
    convert         shift and go to state 216


state 213

    (48) record -> struct ID info deflst convert from deflst .

    struct          reduce using rule 48 (record -> struct ID info deflst convert from deflst .)
    start           reduce using rule 48 (record -> struct ID info deflst convert from deflst .)
    def             reduce using rule 48 (record -> struct ID info deflst convert from deflst .)
    $end            reduce using rule 48 (record -> struct ID info deflst convert from deflst .)


state 214

    (13) list -> type ids AND COMMA list .

    RBRACKET        reduce using rule 13 (list -> type ids AND COMMA list .)


state 215

    (14) list -> ID ids AND COMMA list .

    RBRACKET        reduce using rule 14 (list -> ID ids AND COMMA list .)


state 216

    (49) record -> struct ID info deflst convert to deflst convert . from deflst

    from            shift and go to state 217


state 217

    (49) record -> struct ID info deflst convert to deflst convert from . deflst
    (50) deflst -> . type ids deflst
    (51) deflst -> . type ids
    (21) type -> . bool
    (22) type -> . int
    (23) type -> . string
    (24) type -> . struct

    bool            shift and go to state 149
    int             shift and go to state 150
    string          shift and go to state 151
    struct          shift and go to state 152

    deflst                         shift and go to state 218
    type                           shift and go to state 155

state 218

    (49) record -> struct ID info deflst convert to deflst convert from deflst .

    struct          reduce using rule 49 (record -> struct ID info deflst convert to deflst convert from deflst .)
    start           reduce using rule 49 (record -> struct ID info deflst convert to deflst convert from deflst .)
    def             reduce using rule 49 (record -> struct ID info deflst convert to deflst convert from deflst .)
    $end            reduce using rule 49 (record -> struct ID info deflst convert to deflst convert from deflst .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for struct in state 7 resolved as shift
WARNING: shift/reduce conflict for error in state 8 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 8 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 8 resolved as shift
WARNING: shift/reduce conflict for int in state 8 resolved as shift
WARNING: shift/reduce conflict for bool in state 8 resolved as shift
WARNING: shift/reduce conflict for string in state 8 resolved as shift
WARNING: shift/reduce conflict for ID in state 8 resolved as shift
WARNING: shift/reduce conflict for up in state 8 resolved as shift
WARNING: shift/reduce conflict for down in state 8 resolved as shift
WARNING: shift/reduce conflict for left in state 8 resolved as shift
WARNING: shift/reduce conflict for right in state 8 resolved as shift
WARNING: shift/reduce conflict for knockup in state 8 resolved as shift
WARNING: shift/reduce conflict for knockdown in state 8 resolved as shift
WARNING: shift/reduce conflict for knockright in state 8 resolved as shift
WARNING: shift/reduce conflict for knockleft in state 8 resolved as shift
WARNING: shift/reduce conflict for vision in state 8 resolved as shift
WARNING: shift/reduce conflict for input in state 8 resolved as shift
WARNING: shift/reduce conflict for STR in state 8 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 8 resolved as shift
WARNING: shift/reduce conflict for false in state 8 resolved as shift
WARNING: shift/reduce conflict for true in state 8 resolved as shift
WARNING: shift/reduce conflict for var in state 8 resolved as shift
WARNING: shift/reduce conflict for end in state 13 resolved as shift
WARNING: shift/reduce conflict for error in state 13 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 13 resolved as shift
WARNING: shift/reduce conflict for LBRACE in state 13 resolved as shift
WARNING: shift/reduce conflict for int in state 13 resolved as shift
WARNING: shift/reduce conflict for bool in state 13 resolved as shift
WARNING: shift/reduce conflict for string in state 13 resolved as shift
WARNING: shift/reduce conflict for ID in state 13 resolved as shift
WARNING: shift/reduce conflict for up in state 13 resolved as shift
WARNING: shift/reduce conflict for down in state 13 resolved as shift
WARNING: shift/reduce conflict for left in state 13 resolved as shift
WARNING: shift/reduce conflict for right in state 13 resolved as shift
WARNING: shift/reduce conflict for knockup in state 13 resolved as shift
WARNING: shift/reduce conflict for knockdown in state 13 resolved as shift
WARNING: shift/reduce conflict for knockright in state 13 resolved as shift
WARNING: shift/reduce conflict for knockleft in state 13 resolved as shift
WARNING: shift/reduce conflict for vision in state 13 resolved as shift
WARNING: shift/reduce conflict for input in state 13 resolved as shift
WARNING: shift/reduce conflict for STR in state 13 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 13 resolved as shift
WARNING: shift/reduce conflict for false in state 13 resolved as shift
WARNING: shift/reduce conflict for true in state 13 resolved as shift
WARNING: shift/reduce conflict for var in state 13 resolved as shift
WARNING: shift/reduce conflict for PLR in state 16 resolved as shift
WARNING: shift/reduce conflict for PLL in state 16 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 16 resolved as shift
WARNING: shift/reduce conflict for MNR in state 16 resolved as shift
WARNING: shift/reduce conflict for MNL in state 16 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 16 resolved as shift
WARNING: shift/reduce conflict for TMR in state 16 resolved as shift
WARNING: shift/reduce conflict for TML in state 16 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 16 resolved as shift
WARNING: shift/reduce conflict for DVR in state 16 resolved as shift
WARNING: shift/reduce conflict for DVL in state 16 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 16 resolved as shift
WARNING: shift/reduce conflict for PWR in state 16 resolved as shift
WARNING: shift/reduce conflict for PWL in state 16 resolved as shift
WARNING: shift/reduce conflict for POWER in state 16 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 28 resolved as shift
WARNING: shift/reduce conflict for STR in state 28 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 28 resolved as shift
WARNING: shift/reduce conflict for ID in state 28 resolved as shift
WARNING: shift/reduce conflict for false in state 28 resolved as shift
WARNING: shift/reduce conflict for true in state 28 resolved as shift
WARNING: shift/reduce conflict for var in state 28 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 33 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 55 resolved as shift
WARNING: shift/reduce conflict for STR in state 55 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 55 resolved as shift
WARNING: shift/reduce conflict for ID in state 55 resolved as shift
WARNING: shift/reduce conflict for false in state 55 resolved as shift
WARNING: shift/reduce conflict for true in state 55 resolved as shift
WARNING: shift/reduce conflict for var in state 55 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 56 resolved as shift
WARNING: shift/reduce conflict for STR in state 56 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 56 resolved as shift
WARNING: shift/reduce conflict for ID in state 56 resolved as shift
WARNING: shift/reduce conflict for false in state 56 resolved as shift
WARNING: shift/reduce conflict for true in state 56 resolved as shift
WARNING: shift/reduce conflict for var in state 56 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 57 resolved as shift
WARNING: shift/reduce conflict for STR in state 57 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 57 resolved as shift
WARNING: shift/reduce conflict for ID in state 57 resolved as shift
WARNING: shift/reduce conflict for false in state 57 resolved as shift
WARNING: shift/reduce conflict for true in state 57 resolved as shift
WARNING: shift/reduce conflict for var in state 57 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for STR in state 58 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 58 resolved as shift
WARNING: shift/reduce conflict for ID in state 58 resolved as shift
WARNING: shift/reduce conflict for false in state 58 resolved as shift
WARNING: shift/reduce conflict for true in state 58 resolved as shift
WARNING: shift/reduce conflict for var in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for STR in state 59 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for false in state 59 resolved as shift
WARNING: shift/reduce conflict for true in state 59 resolved as shift
WARNING: shift/reduce conflict for var in state 59 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 75 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 75 resolved as shift
WARNING: shift/reduce conflict for ID in state 76 resolved as shift
WARNING: shift/reduce conflict for var in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for STR in state 76 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 76 resolved as shift
WARNING: shift/reduce conflict for false in state 76 resolved as shift
WARNING: shift/reduce conflict for true in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 87 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 88 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 89 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 90 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 91 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 92 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 93 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 94 resolved as shift
WARNING: shift/reduce conflict for PLR in state 100 resolved as shift
WARNING: shift/reduce conflict for PLL in state 100 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for MNR in state 100 resolved as shift
WARNING: shift/reduce conflict for MNL in state 100 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 100 resolved as shift
WARNING: shift/reduce conflict for TMR in state 100 resolved as shift
WARNING: shift/reduce conflict for TML in state 100 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 100 resolved as shift
WARNING: shift/reduce conflict for DVR in state 100 resolved as shift
WARNING: shift/reduce conflict for DVL in state 100 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 100 resolved as shift
WARNING: shift/reduce conflict for PWR in state 100 resolved as shift
WARNING: shift/reduce conflict for PWL in state 100 resolved as shift
WARNING: shift/reduce conflict for POWER in state 100 resolved as shift
WARNING: shift/reduce conflict for PLR in state 101 resolved as shift
WARNING: shift/reduce conflict for PLL in state 101 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 101 resolved as shift
WARNING: shift/reduce conflict for MNR in state 101 resolved as shift
WARNING: shift/reduce conflict for MNL in state 101 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 101 resolved as shift
WARNING: shift/reduce conflict for TMR in state 101 resolved as shift
WARNING: shift/reduce conflict for TML in state 101 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 101 resolved as shift
WARNING: shift/reduce conflict for DVR in state 101 resolved as shift
WARNING: shift/reduce conflict for DVL in state 101 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 101 resolved as shift
WARNING: shift/reduce conflict for PWR in state 101 resolved as shift
WARNING: shift/reduce conflict for PWL in state 101 resolved as shift
WARNING: shift/reduce conflict for POWER in state 101 resolved as shift
WARNING: shift/reduce conflict for PLR in state 102 resolved as shift
WARNING: shift/reduce conflict for PLL in state 102 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 102 resolved as shift
WARNING: shift/reduce conflict for MNR in state 102 resolved as shift
WARNING: shift/reduce conflict for MNL in state 102 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 102 resolved as shift
WARNING: shift/reduce conflict for TMR in state 102 resolved as shift
WARNING: shift/reduce conflict for TML in state 102 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 102 resolved as shift
WARNING: shift/reduce conflict for DVR in state 102 resolved as shift
WARNING: shift/reduce conflict for DVL in state 102 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 102 resolved as shift
WARNING: shift/reduce conflict for PWR in state 102 resolved as shift
WARNING: shift/reduce conflict for PWL in state 102 resolved as shift
WARNING: shift/reduce conflict for POWER in state 102 resolved as shift
WARNING: shift/reduce conflict for PLR in state 103 resolved as shift
WARNING: shift/reduce conflict for PLL in state 103 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 103 resolved as shift
WARNING: shift/reduce conflict for MNR in state 103 resolved as shift
WARNING: shift/reduce conflict for MNL in state 103 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 103 resolved as shift
WARNING: shift/reduce conflict for TMR in state 103 resolved as shift
WARNING: shift/reduce conflict for TML in state 103 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 103 resolved as shift
WARNING: shift/reduce conflict for DVR in state 103 resolved as shift
WARNING: shift/reduce conflict for DVL in state 103 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 103 resolved as shift
WARNING: shift/reduce conflict for PWR in state 103 resolved as shift
WARNING: shift/reduce conflict for PWL in state 103 resolved as shift
WARNING: shift/reduce conflict for POWER in state 103 resolved as shift
WARNING: shift/reduce conflict for PLR in state 104 resolved as shift
WARNING: shift/reduce conflict for PLL in state 104 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 104 resolved as shift
WARNING: shift/reduce conflict for MNR in state 104 resolved as shift
WARNING: shift/reduce conflict for MNL in state 104 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 104 resolved as shift
WARNING: shift/reduce conflict for TMR in state 104 resolved as shift
WARNING: shift/reduce conflict for TML in state 104 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 104 resolved as shift
WARNING: shift/reduce conflict for DVR in state 104 resolved as shift
WARNING: shift/reduce conflict for DVL in state 104 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 104 resolved as shift
WARNING: shift/reduce conflict for PWR in state 104 resolved as shift
WARNING: shift/reduce conflict for PWL in state 104 resolved as shift
WARNING: shift/reduce conflict for POWER in state 104 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 105 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 108 resolved as shift
WARNING: shift/reduce conflict for PLR in state 110 resolved as shift
WARNING: shift/reduce conflict for PLL in state 110 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 110 resolved as shift
WARNING: shift/reduce conflict for MNR in state 110 resolved as shift
WARNING: shift/reduce conflict for MNL in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 110 resolved as shift
WARNING: shift/reduce conflict for TMR in state 110 resolved as shift
WARNING: shift/reduce conflict for TML in state 110 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 110 resolved as shift
WARNING: shift/reduce conflict for DVR in state 110 resolved as shift
WARNING: shift/reduce conflict for DVL in state 110 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 110 resolved as shift
WARNING: shift/reduce conflict for PWR in state 110 resolved as shift
WARNING: shift/reduce conflict for PWL in state 110 resolved as shift
WARNING: shift/reduce conflict for POWER in state 110 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 115 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 116 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 117 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 118 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 159 resolved as shift
WARNING: shift/reduce conflict for struct in state 185 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for STR in state 186 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for false in state 186 resolved as shift
WARNING: shift/reduce conflict for true in state 186 resolved as shift
WARNING: shift/reduce conflict for var in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 187 resolved as shift
WARNING: shift/reduce conflict for STR in state 187 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 187 resolved as shift
WARNING: shift/reduce conflict for ID in state 187 resolved as shift
WARNING: shift/reduce conflict for false in state 187 resolved as shift
WARNING: shift/reduce conflict for true in state 187 resolved as shift
WARNING: shift/reduce conflict for var in state 187 resolved as shift
WARNING: shift/reduce conflict for PLR in state 205 resolved as shift
WARNING: shift/reduce conflict for PLL in state 205 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 205 resolved as shift
WARNING: shift/reduce conflict for MNR in state 205 resolved as shift
WARNING: shift/reduce conflict for MNL in state 205 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 205 resolved as shift
WARNING: shift/reduce conflict for TMR in state 205 resolved as shift
WARNING: shift/reduce conflict for TML in state 205 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 205 resolved as shift
WARNING: shift/reduce conflict for DVR in state 205 resolved as shift
WARNING: shift/reduce conflict for DVL in state 205 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 205 resolved as shift
WARNING: shift/reduce conflict for PWR in state 205 resolved as shift
WARNING: shift/reduce conflict for PWL in state 205 resolved as shift
WARNING: shift/reduce conflict for POWER in state 205 resolved as shift
WARNING: shift/reduce conflict for PLR in state 206 resolved as shift
WARNING: shift/reduce conflict for PLL in state 206 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 206 resolved as shift
WARNING: shift/reduce conflict for MNR in state 206 resolved as shift
WARNING: shift/reduce conflict for MNL in state 206 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 206 resolved as shift
WARNING: shift/reduce conflict for TMR in state 206 resolved as shift
WARNING: shift/reduce conflict for TML in state 206 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 206 resolved as shift
WARNING: shift/reduce conflict for DVR in state 206 resolved as shift
WARNING: shift/reduce conflict for DVL in state 206 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 206 resolved as shift
WARNING: shift/reduce conflict for PWR in state 206 resolved as shift
WARNING: shift/reduce conflict for PWL in state 206 resolved as shift
WARNING: shift/reduce conflict for POWER in state 206 resolved as shift
WARNING: reduce/reduce conflict in state 109 resolved using rule (assignment -> ids EQ var)
WARNING: rejected rule (boolean -> var) in state 109
WARNING: reduce/reduce conflict in state 111 resolved using rule (expression -> str)
WARNING: rejected rule (assignment -> ids EQ str) in state 111
WARNING: reduce/reduce conflict in state 135 resolved using rule (expression -> ids)
WARNING: rejected rule (steps -> ids) in state 135
WARNING: Rule (assignment -> ids EQ str) is never reduced
WARNING: Rule (steps -> ids) is never reduced
